<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX7A175244034A498784BD59E41A549AE7">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>1.5</X>
				<Y>0.649999976</Y>
				<Z>-1.89999998</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">TrololoCapeOfInvisibility</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=129414426</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX6C4A4B9D6A214BA6AF14674ABDE766B7">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.239998996</X>
					<Y>17.2386608</Y>
					<Z>23.2437458</Z>
					<R00>1</R00>
					<R01>1.44189284e-014</R01>
					<R02>-2.26124191e-015</R02>
					<R10>-1.43675287e-014</R10>
					<R11>0.999773443</R11>
					<R12>0.0212856699</R12>
					<R20>2.56764634e-015</R20>
					<R21>-0.0212856699</R21>
					<R22>0.999773443</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.29999995</X>
					<Y>1.29999995</Y>
					<Z>2.4000001</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX3528B214308E42E7B2E0DE71D62E12D9">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=114046169</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.29999995</X>
						<Y>1.29999995</Y>
						<Z>1.29999995</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=129317782 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX82D3CD02E8CC43C3B3D65C60960FF1C6">
				<Properties>
					<float name="EmitterSize">10</float>
					<bool name="Looped">false</bool>
					<string name="Name">WooshStart</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=129425637</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.5</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXC8EBEF568C504324B931D66B21856244">
				<Properties>
					<float name="EmitterSize">10</float>
					<bool name="Looped">false</bool>
					<string name="Name">WooshEnd</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=129425664</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.5</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXE2F9038C2B25459FB129103872D9AFA9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXF00865FFC1B2461DA3804CF25287F53F">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid">{72941C4D-F420-4FE6-93CC-F377CE92E703}</string>
				<ProtectedString name="Source"><![CDATA[--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ConfusionScript = script:WaitForChild("ConfusionScript")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

Sounds = {
	WooshStart = Handle:WaitForChild("WooshStart"),
	WooshEnd = Handle:WaitForChild("WooshEnd"),
}

Duration = 8
CoolDown = 3

TransparentObjects = {}

ToolEquipped = false

Handle.Transparency = 0
Tool.Enabled = true

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function GetTotalParts(MaxParts, PossibleParts, Parts)
	if MaxParts < PossibleParts then
		return MaxParts
	elseif Parts >= MaxParts then
		return 0
	elseif MaxParts >= PossibleParts then
		local PartCount = (MaxParts - PossibleParts)
		if Parts <= MaxParts then
			PartCount = (MaxParts - Parts)
			if PartCount > PossibleParts then
				return PossibleParts
			else
				return PartCount
			end
		elseif PartCount >= PossibleParts then
			return PossibleParts
		else
			return PartCount
		end
	end
end

function GetParts(Region, MaxParts, Ignore)
	local Parts = {}
	local RerunFailed = false
	while #Parts < MaxParts and not RerunFailed do
		local Region = Region
		local PossibleParts = GetTotalParts(MaxParts, 100, #Parts)
		local PartsNearby = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region, Ignore, PossibleParts)
		if #PartsNearby == 0 then
			RerunFailed = true
		else
			for i, v in pairs(PartsNearby) do
				table.insert(Parts, v)
				table.insert(Ignore, v)
			end
		end
	end
	return Parts
end

function CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.lower(v) == string.lower(String) then
			return true
		end
	end
	return false
end

function GetPlayersNearby(Radius)
	local NegativeRegion = (Torso.Position - Vector3.new(Radius, Radius, Radius))
	local PositiveRegion = (Torso.Position + Vector3.new(Radius, Radius, Radius))
	local Region = Region3.new(NegativeRegion, PositiveRegion)
	local IgnoreList = {Character}
	for i, v in pairs(Players:GetChildren()) do
		if v:IsA("Player") and v ~= Player and v.Character and v.Character.Parent and IsTeamMate(Player, v) then
			table.insert(IgnoreList, v.Character)
		end
	end
	local Parts = GetParts(Region, 500, IgnoreList)
	local Humanoids = {}
	for i, v in pairs(Parts) do
		local character = v.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		local humanoid = character:FindFirstChild("Humanoid")
		local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
		if humanoid and humanoid.Health > 0 and torso and not CheckTableForInstance(Humanoids, humanoid) then
			table.insert(Humanoids, humanoid)
		end
	end
	return Humanoids
end

function GetAllObjectsWithProperty(Parent, Property, Type)
	local Objects = {}
	local function GetObjects(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			local PropertyExists = false
			pcall(function()
				local Property = v[Property]
				if type(Property) == Type then
					PropertyExists = true
				end
			end)
			if PropertyExists then
				table.insert(Objects, v)
			end
			GetObjects(v)
		end
	end
	GetObjects(Parent)
	return Objects
end

function GetTransparentObjects(Parent)
	local Objects = {}
	local IgnoreObjects = {"HumanoidRootPart"}
	for i, v in pairs(GetAllObjectsWithProperty(Parent, "Transparency", "number")) do
		table.insert(Objects, v)
	end
	for i, v in pairs(Objects) do
		if CheckTableForString(IgnoreObjects, v.Name) then
			table.remove(Objects, i)
		end
	end
	return Objects
end

function ResetTransparency(Object)
	local PartNames = {"Head", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg", "UpperTorso", "LowerTorso", "LowerLeftLeg", "LowerRightLeg", "UpperLeftLeg", "UpperRightLeg", "RightHand", "LeftHand", "LowerLeftArm", "LowerRightArm", "UpperRightArm", "UpperLeftArm", "RightFoot", "LeftFoot"}
	if not Object then
		for i, v in pairs({DescendantAdded, DescendantRemoving}) do
			if v then
				v:disconnect()
			end
		end
		for i, v in pairs(TransparentObjects) do
			v.Object.Transparency = ((CheckTableForString(PartNames, v.Object.Name) and 0) or v.Transparency)
		end
		TransparentObjects = {}
	else
		local Objects = GetAllObjectsWithProperty(Object, "Transparency", "number")
		for i, v in pairs(TransparentObjects) do
			for ii, vv in pairs(Objects) do
				if v.Object == vv then
					v.Object.Transparency = ((CheckTableForString(PartNames, v.Object.Name) and 0) or v.Transparency)
					table.remove(TransparentObjects, i)
					break
				end
			end
		end
	end
end

function SetTransparency(Parent, Invisible, Delay)
	local Objects = {}
	if type(Parent) == "table" then
		Objects = Parent
	else
		for i, v in pairs(GetTransparentObjects(Parent)) do
			table.insert(Objects, {Object = v, Transparency = v.Transparency})
		end
	end
	if ToolUnequipped1 then
		ToolUnequipped1:disconnect()
	end
	local CurrentlyEquipped = true
	ToolUnequipped1 = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	Spawn(function()
		if Delay then
			local AllAltered = false
			while not AllAltered and ToolEquipped and CurrentlyEquipped and CheckIfAlive() do
				local AllCurrentlyAltered = true
				for i, v in pairs(Objects) do
					if ((Invisible and v.Object.Transparency < 1) or (not Invisible and v.Object.Transparency > v.Transparency)) then
						v.Object.Transparency = (v.Object.Transparency + (0.1 * ((Invisible and 1) or -1)))
						AllCurrentlyAltered = false
					end
				end
				if AllCurrentlyAltered then
					AllAltered = true
				end
				wait()
			end
			if ToolUnequipped1 then
				ToolUnequipped1:disconnect()
			end
		end
		if not ToolEquipped or not CurrentlyEquipped or not CheckIfAlive() then
			return
		end
		for i, v in pairs(Objects) do
			if Invisible then
				v.Object.Transparency = 1
			else
				ResetTransparency(v.Object)
			end
		end
	end)
	return Objects
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	if Character:FindFirstChild("Invisible") then
		return
	end
	Tool.Enabled = false
	Invisible = Create("BoolValue"){
		Name = "Invisible",
		Value = true,
	}
	Debris:AddItem(Invisible, (Duration + 2))
	Invisible.Parent = Character
	for i, v in pairs({ToolUnequipped2, DescendantAdded, DescendantRemoving}) do
		if v then
			v:disconnect()
		end
	end
	local CurrentlyEquipped = true
	ToolUnequipped2 = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	Humanoid.WalkSpeed = 26
	Sounds.WooshStart:Play()
	TransparentObjects = SetTransparency(Character, true, true)
	DescendantAdded = Character.ChildAdded:connect(function(Child)
		local Objects = SetTransparency(Child, true, false)
		for i, v in pairs(Objects) do
			table.insert(TransparentObjects, v)
		end
	end)
	DescendantRemoving = Character.ChildRemoved:connect(function(Child)
		ResetTransparency(Child)
	end)
	wait(Duration)
	Sounds.WooshEnd:Play()
	for i, v in pairs({ToolUnequipped2, DescendantAdded, DescendantRemoving}) do
		if v then
			v:disconnect()
		end
	end
	if CurrentlyEquipped then
		if CheckIfAlive() then
			Humanoid.WalkSpeed = 16
		end
		SetTransparency(TransparentObjects, false, true)
		TransparentObjects = {}
		local PlayersNearby = GetPlayersNearby(15)
		for i, v in pairs(PlayersNearby) do
			local character = v.Parent
			if character then
				local ConfusionScriptCopy = ConfusionScript:Clone()
				ConfusionScriptCopy.Disabled = false
				ConfusionScriptCopy.Parent = character
			end
		end
	end
	wait(CoolDown)
	Tool.Enabled = true
end

function MakeCape(MakeNew)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	if not MakeNew then
		return
	end
	Cape = Handle:Clone()
	Cape.Name = "Cape"
	Cape.Transparency = 0
	local Weld = Create("Weld"){
		Part0 = Torso,
		Part1 = Cape,
		C0 = CFrame.new(0, -0.15, 0.4),
		Parent = Cape,
	}
	Handle.Transparency = 1
	Cape.Parent = Tool
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		MakeCape(true)
	end)
	ToolEquipped = true
end

function Unequipped()
	Spawn(function()
		for i, v in pairs(Sounds) do
			v:Stop()
		end
		for i, v in pairs({ToolUnequipped2, DescendantAdded, DescendantRemoving}) do
			if v then
				v:disconnect()
			end
		end
		if Invisible and Invisible.Parent then
			Invisible:Destroy()
		end
		if CheckIfAlive() then
			Humanoid.WalkSpeed = 16
		end
		Handle.Transparency = 0
		MakeCape(false)
		ResetTransparency()
		ToolEquipped = false
	end)
end

MakeCape(false)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBXA353694ECFB84B87B0CD1967066BEB18">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ConfusionScript</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[--Rescripted by Luckymaxer

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")

Debris = game:GetService("Debris")

if Humanoid then
	Humanoid.WalkSpeed = (math.abs(Humanoid.WalkSpeed) * -1)
	wait(2.5)
	Humanoid.WalkSpeed = (math.abs(Humanoid.WalkSpeed) * 1)
end

Debris:AddItem(script, 0.5)
script:Destroy()]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>