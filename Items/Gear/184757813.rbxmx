<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX6854EB72A3C444699BE549A878F33139">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>2</Z>
				<R00>-1</R00>
				<R01>0</R01>
				<R02>8.10038e-006</R02>
				<R10>-8.10038e-006</R10>
				<R11>0</R11>
				<R12>-1</R12>
				<R20>0</R20>
				<R21>-1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">WingedWarrior&apos;sSword</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=183836550</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX87446550F8064351872483714A7B7AF1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>3.30000043</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>9.03135344e-009</R01>
					<R02>3.01385342e-007</R02>
					<R10>3.01385342e-007</R10>
					<R11>0</R11>
					<R12>-0.99999994</R12>
					<R20>-9.03133923e-009</R20>
					<R21>0.99999994</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.25</X>
					<Y>1</Y>
					<Z>6.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXF1F3F33017434400BB038A78576B7614">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=183836503</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.800000012</X>
						<Y>0.800000012</Y>
						<Z>0.800000012</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=183836534</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX89B60541058E4A2EA9B748F1907B3F6F">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Lunge</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/swordlunge.wav</url></Content>
					<float name="Volume">0.600000024</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX9AB4A58CE60942D985CB9C292FF76138">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Slash</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
					<float name="Volume">0.699999988</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXF0166F00D62F4EFCAB67D08CCA6E60D7">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Unsheath</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/unsheath.wav</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX727CA74BC1D940C58518BFE95E442E4C">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Woosh</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=184474135</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX54E5637CEDEF427387BFFA945203FC75">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Tornado</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=184474122</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBXAD408701A6F84CE4AFBA72E2DF11E940">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

Remover = script:WaitForChild(&quot;Remover&quot;)

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Grips = {
&#9;Equipped = CFrame.new(0, 0, 2, -1, -0, 8.10038e-006, -8.10038e-006, 0, -1, 0, -1, -0),
&#9;Spin = CFrame.new(0, 0, 2, -8.10004508e-007, -1, -8.10004713e-006, 1, -8.10004565e-007, -6.5610746e-012, 0, -8.10004803e-006, 0.99999994)
}

Animations = {
&#9;Slash = {Animation = Tool:WaitForChild(&quot;Slash&quot;), FadeTime = nil, Weight = nil, Speed = 2, Duration = 1.5, Damage = 15},
&#9;SpinPose = {Animation = Tool:WaitForChild(&quot;SpinPose&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = 5, Damage = 30}
}

Sounds = {
&#9;Unsheath = Handle:WaitForChild(&quot;Unsheath&quot;),
&#9;Slash = Handle:WaitForChild(&quot;Slash&quot;),
&#9;Lunge = Handle:WaitForChild(&quot;Lunge&quot;),
&#9;Woosh = Handle:WaitForChild(&quot;Woosh&quot;),
&#9;Tornado = Handle:WaitForChild(&quot;Tornado&quot;)
}

Gravity = 196.20

Damage = 5
TornadoDamage = 25

Equipped = false

Clicks = 0
FirstClick = false

SecondaryAttack = {
&#9;Enabled = true,
&#9;Active = false,
&#9;ReloadTime = 5
}

CurrentAnimation = nil

Special = {
&#9;Enabled = true,
&#9;Active = false,
&#9;Duration = 20,
&#9;ReloadTime = 20,
&#9;Damage = 10,
}

MovementRate = (1 / 30)

TransparentObjects = {}

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Grip = Grips.Equipped
Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player and Equipped and CheckIfAlive() then
&#9;&#9;if Mode == &quot;KeyPress&quot; then
&#9;&#9;&#9;local Key = Value.Key
&#9;&#9;&#9;local Down = Value.Down
&#9;&#9;&#9;if Key == &quot;q&quot; and Down then
&#9;&#9;&#9;&#9;if Special.Enabled and not Special.Active and Tool.Enabled then
&#9;&#9;&#9;&#9;&#9;Special.Enabled = false
&#9;&#9;&#9;&#9;&#9;Special.Active = true
&#9;&#9;&#9;&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;&#9;&#9;&#9;if ActivatedToolUnequipped then
&#9;&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped:disconnect()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;&#9;&#9;&#9;&#9;if ActivatedToolUnequipped then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;ActivatedToolUnequipped:disconnect()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;local CoordinateFrame = InvokeClient(&quot;CoordinateFrame&quot;, nil)
&#9;&#9;&#9;&#9;&#9;local ForwardVector = CFrame.new(Head.Position, Vector3.new(CoordinateFrame.p.X, Head.Position.Y, CoordinateFrame.p.Z)).lookVector * 50
&#9;&#9;&#9;&#9;&#9;local UpVector = ForwardVector + Vector3.new(0, 1, 0) * 75
&#9;&#9;&#9;&#9;&#9;local NewCoordinateFrame = CFrame.new((Head.CFrame + UpVector).p, Head.Position) * CFrame.Angles(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;SetCamera&quot;, {CameraType = Enum.CameraType.Scriptable, CoordinateFrame = NewCoordinateFrame})
&#9;&#9;&#9;&#9;&#9;TransparentObjects = SetParentTransparency(Character, 1)
&#9;&#9;&#9;&#9;&#9;Humanoid.AutoRotate = false
&#9;&#9;&#9;&#9;&#9;Humanoid.WalkSpeed = 0
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;DisableJump&quot;, true)
&#9;&#9;&#9;&#9;&#9;TornadoPart = BasePart:Clone()
&#9;&#9;&#9;&#9;&#9;TornadoPart.Name = &quot;Tornado&quot;
&#9;&#9;&#9;&#9;&#9;TornadoPart.Size = Vector3.new(0.2, 0.2, 0.2)
&#9;&#9;&#9;&#9;&#9;TornadoPart.CanCollide = false
&#9;&#9;&#9;&#9;&#9;local TornadoWeldPart = TornadoPart:Clone()
&#9;&#9;&#9;&#9;&#9;TornadoWeldPart.Transparency = 1
&#9;&#9;&#9;&#9;&#9;TornadoWeldPart.Name = &quot;WeldPart&quot;
&#9;&#9;&#9;&#9;&#9;TornadoWeldPart.Parent = TornadoPart
&#9;&#9;&#9;&#9;&#9;local TornadoMesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;&#9;&#9;TornadoMesh.MeshType = Enum.MeshType.FileMesh
&#9;&#9;&#9;&#9;&#9;TornadoMesh.MeshId = &quot;http://www.roblox.com/asset/?id=102638417&quot;
&#9;&#9;&#9;&#9;&#9;TornadoMesh.TextureId = &quot;http://www.roblox.com/asset/?id=102638520&quot;
&#9;&#9;&#9;&#9;&#9;TornadoMesh.Scale = Vector3.new(9, 9, 9)
&#9;&#9;&#9;&#9;&#9;TornadoMesh.VertexColor = Vector3.new(1, 1, 1)
&#9;&#9;&#9;&#9;&#9;TornadoMesh.Parent = TornadoPart
&#9;&#9;&#9;&#9;&#9;local TornadoMotor = Instance.new(&quot;Motor6D&quot;)
&#9;&#9;&#9;&#9;&#9;TornadoMotor.Part0 = TornadoPart
&#9;&#9;&#9;&#9;&#9;TornadoMotor.Part1 = TornadoWeldPart
&#9;&#9;&#9;&#9;&#9;TornadoMotor.C0 = CFrame.new(0, 0, 0) * CFrame.Angles((math.pi / 2), 0, 0)
&#9;&#9;&#9;&#9;&#9;TornadoMotor.C1 = CFrame.new(0, 11, 0) * CFrame.Angles((math.pi / 2), 0, 0)
&#9;&#9;&#9;&#9;&#9;TornadoMotor.MaxVelocity = 0.1
&#9;&#9;&#9;&#9;&#9;local Weld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;&#9;&#9;Weld.Part0 = TornadoWeldPart
&#9;&#9;&#9;&#9;&#9;Weld.Part1 = Torso
&#9;&#9;&#9;&#9;&#9;Weld.Parent = TornadoWeldPart
&#9;&#9;&#9;&#9;&#9;local Speed = 250
&#9;&#9;&#9;&#9;&#9;local MaxSpeed = 1000
&#9;&#9;&#9;&#9;&#9;local DesiredAngle = (99999999999 * (-Speed / math.abs(Speed)))
&#9;&#9;&#9;&#9;&#9;local MaxVelocity = (Speed / MaxSpeed)
&#9;&#9;&#9;&#9;&#9;TornadoMotor.MaxVelocity = MaxVelocity
&#9;&#9;&#9;&#9;&#9;TornadoMotor.DesiredAngle = DesiredAngle
&#9;&#9;&#9;&#9;&#9;TornadoMotor.Parent = TornadoPart
&#9;&#9;&#9;&#9;&#9;TornadoPart.Parent = Character
&#9;&#9;&#9;&#9;&#9;RemoverClone = Remover:Clone()
&#9;&#9;&#9;&#9;&#9;RemoverClone.Name = (player.Name..&quot;&apos;s&quot; .. Remover.Name)
&#9;&#9;&#9;&#9;&#9;local Creator = Instance.new(&quot;ObjectValue&quot;)
&#9;&#9;&#9;&#9;&#9;Creator.Name = &quot;Creator&quot;
&#9;&#9;&#9;&#9;&#9;Creator.Value = player
&#9;&#9;&#9;&#9;&#9;Creator.Parent = RemoverClone
&#9;&#9;&#9;&#9;&#9;local Model = Instance.new(&quot;ObjectValue&quot;)
&#9;&#9;&#9;&#9;&#9;Model.Name = &quot;Model&quot;
&#9;&#9;&#9;&#9;&#9;Model.Value = TornadoPart
&#9;&#9;&#9;&#9;&#9;Model.Parent = RemoverClone
&#9;&#9;&#9;&#9;&#9;RemoverClone.Disabled = false
&#9;&#9;&#9;&#9;&#9;RemoverClone.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;local Mass = (GetTotalMass(Character) * Gravity)
&#9;&#9;&#9;&#9;&#9;BodyPosition = Instance.new(&quot;BodyPosition&quot;)
&#9;&#9;&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new((Mass * 10), 0, (Mass * 10))
&#9;&#9;&#9;&#9;&#9;BodyPosition.position = Torso.Position
&#9;&#9;&#9;&#9;&#9;BodyPosition.Parent = Torso
&#9;&#9;&#9;&#9;&#9;BodyVelocity = Instance.new(&quot;BodyVelocity&quot;)
&#9;&#9;&#9;&#9;&#9;BodyVelocity.maxForce = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;BodyVelocity.Parent = Torso
&#9;&#9;&#9;&#9;&#9;BodyGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;&#9;&#9;&#9;&#9;BodyGyro.maxTorque = Vector3.new(math.huge, 0,  math.huge)
&#9;&#9;&#9;&#9;&#9;BodyGyro.Parent = Torso
&#9;&#9;&#9;&#9;&#9;local DurationTick = tick()
&#9;&#9;&#9;&#9;&#9;Sounds.Tornado:Play()
&#9;&#9;&#9;&#9;&#9;while (tick() - DurationTick) &lt; Special.Duration and CurrentlyEquipped and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and TornadoPart and TornadoPart.Parent and BodyPosition and BodyPosition.Parent do
&#9;&#9;&#9;&#9;&#9;&#9;local MousePosition = InvokeClient(&quot;MousePosition&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.position = Torso.Position + CFrame.new(TornadoPart.Position, MousePosition).lookVector * 15
&#9;&#9;&#9;&#9;&#9;&#9;local RayHit, RayPos = RayCast((Torso.CFrame - Vector3.new(0, (Torso.Size.Y / 2), 0)).p, CFrame.new(Torso.Position, Vector3.new(MousePosition.X, Torso.Position.Y, MousePosition.Z)).lookVector, (Torso.Size.Z * 3), {Character})
&#9;&#9;&#9;&#9;&#9;&#9;if RayHit then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.maxForce = Vector3.new(0, Mass * 100, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.velocity = Vector3.new(0, 12.5, 0)
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.maxForce = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.velocity = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;local Humanoids = GetPlayersNearby(6, Torso, {Character})
&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Humanoids) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v and v.Parent and v.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(v)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(v, Player)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v:TakeDamage(TornadoDamage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;wait(MovementRate)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if CurrentlyEquipped then
&#9;&#9;&#9;&#9;&#9;&#9;Sounds.Tornado:Stop()
&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs({BodyAngularVelocity, BodyPosition, BodyVelocity, BodyGyro, TornadoPart}) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;DisableJump&quot;, false)
&#9;&#9;&#9;&#9;&#9;&#9;if Humanoid and Humanoid.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Humanoid.AutoRotate = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Humanoid.WalkSpeed = 16
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(TransparentObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.Transparency = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;TransparentObjects = {}
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;Special.Active = false
&#9;&#9;&#9;&#9;&#9;wait(Special.ReloadTime)
&#9;&#9;&#9;&#9;&#9;Special.Enabled = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ReturnValue = nil
&#9;pcall(function()
&#9;&#9;ReturnValue = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ReturnValue
end

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList) 
end

function CheckTableForInstance(Table, Instance)
&#9;for i, v in pairs(Table) do
&#9;&#9;if v == Instance then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function GetPlayersNearby(Radius, Object, Ignore)
&#9;local Radius = (Radius / 2)
&#9;local NegativePartRadius = Vector3.new(Radius, Radius, Radius)
&#9;local PositivePartRadius = Vector3.new(Radius, Radius, Radius)
&#9;local Parts = game:GetService(&quot;Workspace&quot;):FindPartsInRegion3WithIgnoreList(Region3.new(Object.CFrame.p - NegativePartRadius, Object.CFrame.p + PositivePartRadius), Ignore, 100)
&#9;local Humanoids = {}
&#9;for i, v in pairs(Parts) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;local character = v.Parent
&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 and not CheckTableForInstance(Humanoids, humanoid) then
&#9;&#9;&#9;&#9;local ForceFieldExists = false
&#9;&#9;&#9;&#9;for i, v in pairs(character:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if v:IsA(&quot;ForceField&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;ForceFieldExists = true
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if not ForceFieldExists then
&#9;&#9;&#9;&#9;&#9;table.insert(Humanoids, humanoid)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;return Humanoids
end

function SetParentTransparency(Parent, Transparency)
&#9;local Objects = {}
&#9;local function SetTransparency(Parent)
&#9;&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;&#9;local TransparencyExists = false
&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;local Property = v[&quot;Transparency&quot;]
&#9;&#9;&#9;&#9;TransparencyExists = true
&#9;&#9;&#9;end)
&#9;&#9;&#9;if TransparencyExists then
&#9;&#9;&#9;&#9;table.insert(Objects, {Object = v, Transparency = v.Transparency})
&#9;&#9;&#9;&#9;v.Transparency = Transparency
&#9;&#9;&#9;end
&#9;&#9;&#9;SetTransparency(v)
&#9;&#9;end
&#9;end
&#9;SetTransparency(Parent)
&#9;return Objects
end

function GetTotalMass(Parent)
&#9;local Mass = 0
&#9;local function GetMass(Parent)
&#9;&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;Mass = (Mass + v:GetMass())
&#9;&#9;&#9;end
&#9;&#9;&#9;GetMass(v)
&#9;&#9;end
&#9;end
&#9;GetMass(Parent)
&#9;return Mass
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function Blow(Part)
&#9;Part.Touched:connect(function(Hit)
&#9;&#9;if not Hit or not Hit.Parent or not Equipped or not CheckIfAlive() or Special.Active then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local RightArm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;&#9;if not RightArm then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local RightGrip = RightArm:FindFirstChild(&quot;RightGrip&quot;)
&#9;&#9;if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local character = Hit.Parent
&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if character ~= Character and humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;local DamageValue = ((CurrentAnimation and CurrentAnimation.Damage) or Damage)
&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;humanoid:TakeDamage(DamageValue)
&#9;&#9;end
&#9;end)
end

function Activated()
&#9;if not Tool.Enabled or not Equipped or SecondaryAttack.Active or Special.Active then
&#9;&#9;return
&#9;end
&#9;Clicks = (Clicks + 1)
&#9;if not FirstClick then
&#9;&#9;FirstClick = true
&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;end)
&#9;&#9;wait(0.15)
&#9;&#9;if ToolUnequipped then
&#9;&#9;&#9;ToolUnequipped:disconnect()
&#9;&#9;end
&#9;&#9;if not CurrentlyEquipped then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;Tool.Enabled = false
&#9;&#9;CurrentAnimation = (((Clicks &gt; 1 and SecondaryAttack.Enabled and not SecondaryAttack.Active) and Animations.SpinPose) or Animations.Slash)
&#9;&#9;if CurrentAnimation == Animations.Slash then
&#9;&#9;&#9;Sounds.Slash:Play()
&#9;&#9;elseif CurrentAnimation == Animations.SpinPose then
&#9;&#9;&#9;SecondaryAttack.Enabled = false
&#9;&#9;&#9;SecondaryAttack.Active = true
&#9;&#9;&#9;Humanoid.AutoRotate = false
&#9;&#9;&#9;Tool.Grip = Grips.Spin
&#9;&#9;&#9;Sounds.Woosh:Play()
&#9;&#9;&#9;local Mass = (GetTotalMass(Character) * Gravity * 100)
&#9;&#9;&#9;BodyAngularVelocity = Instance.new(&quot;BodyAngularVelocity&quot;)
&#9;&#9;&#9;BodyAngularVelocity.maxTorque = Vector3.new(0, Mass, 0)
&#9;&#9;&#9;BodyAngularVelocity.angularvelocity = Vector3.new(0, 30, 0)
&#9;&#9;&#9;BodyAngularVelocity.Parent = Torso
&#9;&#9;end
&#9;&#9;InvokeClient(&quot;DisableJump&quot;, true)
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, CurrentAnimation)
&#9;&#9;wait(CurrentAnimation.Duration)
&#9;&#9;Sounds.Woosh:Stop()
&#9;&#9;SecondaryAttack.Active = false
&#9;&#9;Delay(SecondaryAttack.ReloadTime, function()
&#9;&#9;&#9;SecondaryAttack.Enabled = true
&#9;&#9;end)
&#9;&#9;if not CurrentlyEquipped then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;Tool.Grip = Grips.Equipped
&#9;&#9;if BodyAngularVelocity and BodyAngularVelocity.Parent then
&#9;&#9;&#9;BodyAngularVelocity:Destroy()
&#9;&#9;end
&#9;&#9;if Humanoid and Humanoid.Parent then
&#9;&#9;&#9;Humanoid.AutoRotate = true
&#9;&#9;end
&#9;&#9;InvokeClient(&quot;DisableJump&quot;, false)
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, CurrentAnimation)
&#9;&#9;CurrentAnimation = nil
&#9;&#9;FirstClick = false
&#9;&#9;Clicks = 0
&#9;&#9;Tool.Enabled = true
&#9;end
end
function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Head and Head.Parent and Torso and Torso.Parent)
end

function Equipped(Mouse)
&#9;Equipped = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Head = Character:WaitForChild(&quot;Head&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Tool.Grip = Grips.Equipped
&#9;Sounds.Unsheath:Play()
end

function Unequipped()
&#9;Equipped = false
&#9;Clicks = 0
&#9;FirstClick = false
&#9;CurrentAnimation = nil
&#9;if Humanoid and Humanoid.Parent then
&#9;&#9;Humanoid.AutoRotate = true
&#9;&#9;Humanoid.WalkSpeed = 16
&#9;end
&#9;for i, v in pairs(TransparentObjects) do
&#9;&#9;if v.Object and v.Object.Parent then
&#9;&#9;&#9;v.Object.Transparency = v.Transparency
&#9;&#9;end
&#9;end
&#9;TransparentObjects = {}
&#9;for i, v in pairs({BodyAngularVelocity, BodyPosition, BodyVelocity, BodyGyro, TornadoPart}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({ToolUnequipped, ActivatedToolUnequipped}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Sounds) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Stop()
&#9;&#9;&#9;InvokeClient(&quot;StopSound&quot;, v)
&#9;&#9;end
&#9;end
end

Blow(Handle)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBXDA79F00DFDD74B32BCA0D91578F5DEA4">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Remover</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Debris = game:GetService(&quot;Debris&quot;)

FixCamera = script:WaitForChild(&quot;FixCamera&quot;)

Creator = script:FindFirstChild(&quot;Creator&quot;)
Model = script:FindFirstChild(&quot;Model&quot;)

function DestroyModel()
&#9;if Creator and Creator.Parent then
&#9;&#9;local FixCameraClone = FixCamera:Clone()
&#9;&#9;FixCameraClone.Disabled = false
&#9;&#9;if Character and Character.Parent then
&#9;&#9;&#9;FixCameraClone.Parent = Character
&#9;&#9;else
&#9;&#9;&#9;local Backpack = Creator:FindFirstChild(&quot;Backpack&quot;)
&#9;&#9;&#9;if Backpack then
&#9;&#9;&#9;&#9;FixCameraClone.Parent = Backpack
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;Debris:AddItem(script, 2)
end

if not Creator or not Creator.Value or not Creator.Value:IsA(&quot;Player&quot;) or not Creator.Value.Parent or not Model or not Model.Value or not Model.Value.Parent then
&#9;DestroyModel()
&#9;return
end

Creator = Creator.Value
Model = Model.Value

Character = Creator.Character
if not Character then
&#9;DestroyModel()
&#9;return
end

Creator.Changed:connect(function(Property)
&#9;if Property == &quot;Parent&quot; and not Creator.Parent then
&#9;&#9;DestroyModel()
&#9;end
end)

Character.Changed:connect(function(Property)
&#9;if Property == &quot;Parent&quot; and not Character.Parent then
&#9;&#9;DestroyModel()
&#9;end
end)

Model.Changed:connect(function(Property)
&#9;if Property == &quot;Parent&quot; then
&#9;&#9;DestroyModel()
&#9;end
end)</ProtectedString>
				</Properties>
				<Item class="LocalScript" referent="RBXFDBD8782C97743BD99923A79CC51C8A2">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">FixCamera</string>
						<ProtectedString name="Source">--Made by Luckymaxer

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

function DestroyScript()
&#9;Debris:AddItem(script, 2)
end

Camera.CameraType = Enum.CameraType.Custom

Player = (((script.Parent:IsA(&quot;Model&quot;) and Players:GetPlayerFromCharacter(script.Parent)) or (script.Parent:IsA(&quot;Backpack&quot;) and script.Parent.Parent)) or nil)
if Player then
&#9;Character = Player.Character
&#9;if Character then
&#9;&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if Humanoid then
&#9;&#9;&#9;Camera.CameraSubject = Humanoid
&#9;&#9;end
&#9;end
end

DestroyScript()</ProtectedString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXEE2EFC8ABA054035B3558C92D6FF4CB1">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;CoordinateFrame&quot; then
&#9;&#9;return Camera.CoordinateFrame
&#9;elseif Mode == &quot;SetCamera&quot; and (Value.CameraType or Value.CoordinateFrame) then
&#9;&#9;if Value.CameraType then
&#9;&#9;&#9;Camera.CameraType = Value.CameraType
&#9;&#9;end
&#9;&#9;if Value.CoordinateFrame then
&#9;&#9;&#9;Camera.CoordinateFrame = Value.CoordinateFrame
&#9;&#9;end
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXDFE95A9774004BA79941AF4636543D16">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXD98DA0C406704BBCA9C7D69833DF27AE">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=184465557</url></Content>
				<string name="Name">Slash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX69008EF13DA34BC292BDE27A35F51A33">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=184467564</url></Content>
				<string name="Name">SpinPose</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXF9B7622771B54F96983725651DC5F404">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>3.90239191</X>
					<Y>5.80662918</Y>
					<Z>0.0894130543</Z>
					<R00>-0.00698602106</R00>
					<R01>-0.372980505</R01>
					<R02>0.927812874</R02>
					<R10>2.32830671e-010</R10>
					<R11>0.927835584</R11>
					<R12>0.372989565</R12>
					<R20>-0.999975681</R20>
					<R21>0.00260571321</R21>
					<R22>-0.00648187753</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>3.53126478</X>
					<Y>5.65743256</Y>
					<Z>0.0920058191</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>