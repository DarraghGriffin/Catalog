<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX48385521C3154B249A257B98D547D97C">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">false</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0.100000001</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">NATMTablet</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=186495170</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX404056C12C6840369B0E80EEFEA0FEAC">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>2.9000001</X>
					<Y>2.39999962</Y>
					<Z>-0.100000381</Z>
					<R00>-0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>-0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>-1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.75</X>
					<Y>2.25</Y>
					<Z>0.25</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXA2B9FC0F82C543A8981297737C1C71D3">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset?id=186495142</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.0500000007</X>
						<Y>0.0500000007</Y>
						<Z>0.0500000007</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset?id=186495164</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sparkles" referent="RBXBFD6B267D16D44BA8D621AF2C5E93CC2">
				<Properties>
					<bool name="Enabled">false</bool>
					<string name="Name">Sparkles</string>
					<Color3 name="SparkleColor">4289374720</Color3>
				</Properties>
			</Item>
			<Item class="PointLight" referent="RBX0547AA1C8A464852950E5431A6A68907">
				<Properties>
					<float name="Brightness">50</float>
					<Color3 name="Color">4289374720</Color3>
					<bool name="Enabled">false</bool>
					<string name="Name">PointLight</string>
					<float name="Range">8</float>
					<bool name="Shadows">false</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX21A5364A46D7404B9B4DBA36CCBA0F62">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;elseif Mode == &quot;SetCamera&quot; and Value then
&#9;&#9;if Value.Subject and Value.Type then
&#9;&#9;&#9;Camera.CameraSubject = Value.Subject
&#9;&#9;&#9;Camera.CameraType = Value.Type
&#9;&#9;end
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;local ServerReturn = nil
&#9;pcall(function()
&#9;&#9;ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;end)
&#9;return ServerReturn
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX047BF4A639A948E8BE583D0DD83E25DA">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)
Sparkles = Handle:WaitForChild(&quot;Sparkles&quot;)
PointLight = Handle:WaitForChild(&quot;PointLight&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

Animations = {
&#9;Activate = {Animation = Tool:WaitForChild(&quot;Activate&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = 2}
}
Sounds = {}

GlowingParts = {
&#9;Objects = {},
&#9;Welds = {},
&#9;Model = nil
}

Duration = 30

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if Mode == &quot;KeyPress&quot; and Value then
&#9;&#9;local Key = string.lower(Value.Key)
&#9;&#9;local ByteKey = string.byte(Key)
&#9;&#9;local Down = Value.Down
&#9;end
end)

Sparkles.Enabled = false
PointLight.Enabled = false
Tool.Enabled = true

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function CheckTableForInstance(Table, Instance)
&#9;for i, v in pairs(Table) do
&#9;&#9;if v == Instance then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function Glow(character, Color)
&#9;if character == Tool then
&#9;&#9;return
&#9;end
&#9;local Parts = {character:FindFirstChild(&quot;Head&quot;), character:FindFirstChild(&quot;HumanoidRootPart&quot;)}
&#9;local GlowingBricks = {}
&#9;local Meshes = {}
&#9;local function GlowParts(Parent)
&#9;&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;&#9;if v ~= Tool and v.Name ~= &quot;GlowingModel&quot; then
&#9;&#9;&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;&#9;local Part = v:Clone()
&#9;&#9;&#9;&#9;&#9;Part.Name = &quot;GlowingPart&quot;
&#9;&#9;&#9;&#9;&#9;Part.BrickColor = BrickColor.new(Color)
&#9;&#9;&#9;&#9;&#9;Part.Transparency = 0.5
&#9;&#9;&#9;&#9;&#9;Part.Material = Enum.Material.Plastic
&#9;&#9;&#9;&#9;&#9;Part.CanCollide = false
&#9;&#9;&#9;&#9;&#9;Part.Locked = true
&#9;&#9;&#9;&#9;&#9;Part.Anchored = false
&#9;&#9;&#9;&#9;&#9;local Surfaces = {Enum.NormalId.Top, Enum.NormalId.Bottom, Enum.NormalId.Front, Enum.NormalId.Back, Enum.NormalId.Left, Enum.NormalId.Right}
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Surfaces) do
&#9;&#9;&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Part[v.Name .. &quot;Surface&quot;] = Enum.SurfaceType.Smooth
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;Part.FormFactor = Enum.FormFactor.Custom
&#9;&#9;&#9;&#9;&#9;Part.Size = Vector3.new(0.2, 0.2, 0.2)
&#9;&#9;&#9;&#9;&#9;local Weld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;&#9;&#9;Weld.Name = &quot;GlowWeld&quot;
&#9;&#9;&#9;&#9;&#9;Weld.Part0 = v
&#9;&#9;&#9;&#9;&#9;Weld.Part1 = Part
&#9;&#9;&#9;&#9;&#9;Weld.C0 = CFrame.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;Weld.Parent = v
&#9;&#9;&#9;&#9;&#9;table.insert(GlowingParts.Welds, Weld)
&#9;&#9;&#9;&#9;&#9;local PartUsable = false
&#9;&#9;&#9;&#9;&#9;if not CheckTableForInstance(Parts, v) and not CheckTableForInstance(GlowingBricks, v) then
&#9;&#9;&#9;&#9;&#9;&#9;if v.Name == &quot;Torso&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Sparkles = Instance.new(&quot;Sparkles&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Sparkles.SparkleColor = BrickColor.new(Color).Color
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Sparkles.Enabled = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Sparkles.Parent = Part
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;local HasCharacterMesh = false
&#9;&#9;&#9;&#9;&#9;&#9;for ii, vv in pairs(Parent:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vv:IsA(&quot;CharacterMesh&quot;) and vv.BodyPart.Name == string.gsub(v.Name, &quot; &quot;, &quot;&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Weld.C0 = CFrame.new(0, 0.075, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Mesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.MeshType = Enum.MeshType.FileMesh
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.MeshId = (&quot;http://www.roblox.com/asset?id=&quot; .. vv.MeshId)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.TextureId = &quot;null&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Scale = Vector3.new(1.1, 1.1, 1.1)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(Meshes, Mesh)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local PartColor = Part.BrickColor.Color
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.VertexColor = Vector3.new((PartColor.r / 1), (PartColor.g / 1), (PartColor.b / 1))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Parent = Part
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;PartUsable = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;HasCharacterMesh = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;if HasCharacterMesh then
&#9;&#9;&#9;&#9;&#9;&#9;elseif v.Parent and v.Parent:IsA(&quot;Hat&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;for ii, vv in pairs(Part:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vv:IsA(&quot;DataModelMesh&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;vv.Scale = Vector3.new((vv.Scale.X + 0.025), (vv.Scale.Y + 0.025), (vv.Scale.Z + 0.025))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vv.MeshType == Enum.MeshType.FileMesh then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;vv.TextureId = &quot;http://www.roblox.com/asset?id=&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(Meshes, vv)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;PartUsable = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Mesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.MeshType = Enum.MeshType.FileMesh
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.MeshId = &quot;http://www.roblox.com/Asset/?id=9856898&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.TextureId = &quot;http://www.roblox.com/asset/?ID=1361097&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Scale = ((v.Size * 2) + Vector3.new(0.1, 0.1, 0.1))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(Meshes, Mesh)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Parent = Part
&#9;&#9;&#9;&#9;&#9;&#9;&#9;PartUsable = true
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;elseif v.Name == &quot;Head&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;for ii, vv in pairs(Part:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vv:IsA(&quot;DataModelMesh&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if vv.MeshType == Enum.MeshType.FileMesh then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;vv.TextureId = &quot;http://www.roblox.com/asset?id=&quot;
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;vv.Scale = Vector3.new((vv.Scale.X + 0.1), (vv.Scale.Y + 0.1), (vv.Scale.Z + 0.1))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;vv.Scale = ((vv.Scale + Vector3.new(0.1, 0.1, 0.1)) * 5)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(Meshes, vv)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;PartUsable = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if PartUsable then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(GlowingBricks, Part)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;table.insert(Parts, v)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;GlowParts(v)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;GlowParts(character)
&#9;local GlowModel = Instance.new(&quot;Model&quot;)
&#9;GlowModel.Name = &quot;GlowingModel&quot;
&#9;for i, v in pairs(GlowingBricks) do
&#9;&#9;if v then
&#9;&#9;&#9;for ii, vv in pairs(v:GetChildren()) do
&#9;&#9;&#9;&#9;if not (vv:IsA(&quot;DataModelMesh&quot;) or (vv:IsA(&quot;JointInstance&quot;) and vv.Name == &quot;GlowWeld&quot;) or vv:IsA(&quot;Sparkles&quot;)) then
&#9;&#9;&#9;&#9;&#9;vv:Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;local PointLight = Instance.new(&quot;PointLight&quot;)
&#9;&#9;&#9;PointLight.Brightness = 50
&#9;&#9;&#9;PointLight.Color = BrickColor.new(Color).Color
&#9;&#9;&#9;PointLight.Range = 6
&#9;&#9;&#9;PointLight.Shadows = false
&#9;&#9;&#9;PointLight.Enabled = true
&#9;&#9;&#9;PointLight.Parent = v
&#9;&#9;&#9;v.Parent = GlowModel
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Meshes) do
&#9;&#9;local PartColor = BrickColor.new(Color).Color
&#9;&#9;v.VertexColor = Vector3.new(PartColor.r, PartColor.g, PartColor.b)
&#9;end
&#9;if Players:GetPlayerFromCharacter(character) then
&#9;&#9;Debris:AddItem(GlowModel, Duration)
&#9;&#9;GlowModel.Parent = character
&#9;end
&#9;for i, v in pairs({Parts, GlowingBricks, Meshes}) do
&#9;&#9;if type(v) == &quot;table&quot; then
&#9;&#9;&#9;for ii, vv in pairs(v) do
&#9;&#9;&#9;&#9;if not CheckTableForInstance(GlowingParts.Objects, vv) then
&#9;&#9;&#9;&#9;&#9;table.insert(GlowingParts.Objects, vv)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;return GlowModel
end

function GlowCharacter()
&#9;if GlowingParts.Model and GlowingParts.Model.Parent then
&#9;&#9;GlowingParts.Model:Destroy()
&#9;end
&#9;Color = &quot;Lime green&quot;
&#9;GlowingParts.Model = Glow(Character, Color)
&#9;for i, v in pairs({ObjectAdded, ObjectRemoved}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;ObjectAdded = Character.ChildAdded:connect(function(Child)
&#9;&#9;if Child == Tool then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;wait()
&#9;&#9;if Child.Name == &quot;GlowingModel&quot; then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local GlowReturn = Glow(Child, Color)
&#9;&#9;for i, v in pairs(GlowReturn:GetChildren()) do
&#9;&#9;&#9;v.Parent = GlowingParts.Model
&#9;&#9;end
&#9;end)
&#9;ObjectRemoved = Character.ChildRemoved:connect(function(Child)
&#9;&#9;local function GetAllObjects(Parent)
&#9;&#9;&#9;local Objects = {}
&#9;&#9;&#9;local function GetObjects(Parent)
&#9;&#9;&#9;&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;table.insert(Objects, v)
&#9;&#9;&#9;&#9;&#9;GetObjects(v)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;GetObjects(Parent)
&#9;&#9;&#9;return Objects
&#9;&#9;end
&#9;&#9;local Objects = GetAllObjects(Child)
&#9;&#9;for i, v in pairs(Objects) do
&#9;&#9;&#9;for ii, vv in pairs(GlowingParts.Objects) do
&#9;&#9;&#9;&#9;if v:IsA(&quot;JointInstance&quot;) and v.Part1 and v.Part1.Parent and v.Part1.Name == &quot;GlowingPart&quot; and v.Part1 == vv then
&#9;&#9;&#9;&#9;&#9;vv:Destroy()
&#9;&#9;&#9;&#9;&#9;table.remove(GlowingParts, ii)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;local Color = Color3.new(0, 1, 0)
&#9;while GlowingParts.Model and GlowingParts.Model.Parent do
&#9;&#9;for i = 1, 20 do
&#9;&#9;&#9;local Interval = (0.05 * ((i &lt; 11 and 1) or -1))
&#9;&#9;&#9;Color = Color3.new((Color.r + Interval), Color.g, Color.b)
&#9;&#9;&#9;for ii, vv in pairs(GlowingParts.Objects) do
&#9;&#9;&#9;&#9;if vv:IsA(&quot;DataModelMesh&quot;) then
&#9;&#9;&#9;&#9;&#9;vv.VertexColor = Vector3.new(Color.r, Color.g, Color.b)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;wait(0.05)
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(GlowingParts.Welds) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({GlowingParts.Objects, GlowingParts.Welds}) do
&#9;&#9;GlowingParts[i] = {}
&#9;end
&#9;for i, v in pairs({ObjectAdded, ObjectRemoved}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
end

function SetHealth(humanoid, MaxHealth)
&#9;if not humanoid or not humanoid.Parent or humanoid.Health == 0 then
&#9;&#9;return
&#9;end
&#9;local Ratio = (humanoid.Health / humanoid.MaxHealth)
&#9;humanoid.MaxHealth = MaxHealth
&#9;humanoid.Health = (Ratio * humanoid.MaxHealth)
end

function Activated()
&#9;if not Tool.Enabled or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Tool.Enabled = false
&#9;local Animation = Animations.Activate
&#9;InvokeClient(&quot;PlayAnimation&quot;, Animation)
&#9;Sparkles.Enabled = true
&#9;PointLight.Enabled = true
&#9;wait(Animation.Duration)
&#9;Sparkles.Enabled = false
&#9;PointLight.Enabled = false
&#9;SetHealth(Humanoid, 200)
&#9;Spawn(function()
&#9;&#9;GlowCharacter()
&#9;end)
&#9;wait(Duration)
&#9;if GlowingParts.Model and GlowingParts.Model.Parent then
&#9;&#9;GlowingParts.Model:Destroy()
&#9;end
&#9;SetHealth(Humanoid, 100)
&#9;Tool.Enabled = true
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Equipped = true
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
end

function Unequipped()
&#9;Equipped = false
&#9;for i, v in pairs(Sounds) do
&#9;&#9;InvokeClient(&quot;StopSound&quot;, v)
&#9;&#9;v:Stop()
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX331C64B956A649CC89A43AA7D25F692C">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset?id=186673959</url></Content>
				<string name="Name">Activate</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXFEA534CF3D3D4E46B76BB1C7CA29D729">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>1.04140759</X>
					<Y>2.69836354</Y>
					<Z>-0.513887405</Z>
					<R00>-0.109106384</R00>
					<R01>0.087756969</R01>
					<R02>-0.990148783</R02>
					<R10>-0</R10>
					<R11>0.996095419</R11>
					<R12>0.0882840231</R12>
					<R20>0.994030058</R20>
					<R21>0.00963235088</R21>
					<R22>-0.108680367</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>3.02170491</X>
					<Y>2.52179551</Y>
					<Z>-0.2965267</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>