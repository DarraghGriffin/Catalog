<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXE382938D9FCB4C709B28AC80CF205C77">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0.075000003</Y>
				<Z>2</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>-0</R02>
				<R10>0</R10>
				<R11>0</R11>
				<R12>1</R12>
				<R20>0</R20>
				<R21>-1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">PussInBootsSword</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=201696753</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXC0117416403C4DC79B991B3D56667B8F">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>7.09944519e-015</R00>
					<R01>-0.999999881</R01>
					<R02>-2.33319639e-007</R02>
					<R10>0.707106709</R10>
					<R11>1.7514175e-007</R11>
					<R12>-0.70710665</R12>
					<R20>0.70710665</R20>
					<R21>-2.04944072e-007</R21>
					<R22>0.707106769</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.75</X>
					<Y>0.75</Y>
					<Z>4.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX755ED26A7BAF4DD982462EE34BED71DD">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=201696699</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.25</X>
						<Y>1.25</Y>
						<Z>1.25</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=201696648</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX26994BF6C3B44712AE8D95FF9405D292">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SwordClash</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=201972796</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX63B456C858C544798341D97A82158661">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SwordCollide</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=201972805</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXCFB255416B654136AB97B57288FBA8EE">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SwordScrape</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=201972814</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX35D8DCE372D7476884F357D4C7E29947">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SwordSheath</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=201972840</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXD4FF2421A9DE4DFA84B10D91B6784674">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SwordStrike</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=201972868</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX5863B1B61D984F4A82598CBD9B4414D4">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SwordSlash</string>
					<float name="Pitch">1.25</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
					<float name="Volume">0.100000001</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX06D259FF5C1B40B583425A091393A795">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
ContentProvider = game:GetService(&quot;ContentProvider&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ToolEquipped = false

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;Preload&quot; and Value then
&#9;&#9;ContentProvider:Preload(Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;elseif Mode == &quot;SetLocalTransparencyModifier&quot; and Value and ToolEquipped then
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ObjectFound = false
&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;if v == Value then
&#9;&#9;&#9;&#9;&#9;ObjectFound = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not ObjectFound then
&#9;&#9;&#9;&#9;table.insert(LocalObjects, Value)
&#9;&#9;&#9;&#9;if ObjectLocalTransparencyModifier then
&#9;&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent and ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.LocalTransparencyModifier = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;local ServerReturn = nil
&#9;pcall(function()
&#9;&#9;ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;end)
&#9;return ServerReturn
end

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
&#9;Mouse.WheelForward:connect(function()
&#9;&#9;InvokeServer(&quot;WheelMoved&quot;, {Forward = true})
&#9;end)
&#9;Mouse.WheelBackward:connect(function()
&#9;&#9;InvokeServer(&quot;WheelMoved&quot;, {Forward = false})
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXFE4A6E52341F4B51AAF8AFA20C0E6525">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX0715F1A091A94AD9950415ABADD398A8">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=201965900</url></Content>
				<string name="Name">UpRightSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXCA03D1C7DEDD4F99B93B80836D9B242F">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=201966419</url></Content>
				<string name="Name">UpLeftSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX864D439902E642E7A51A03181A3FDC6C">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=201966758</url></Content>
				<string name="Name">DownRightSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXC93CE9E3F61C45C5BD9FF5F8FAB3A2B6">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=201967019</url></Content>
				<string name="Name">DownLeftSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX0CB5669303CE49249934B4FAD585AA6D">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=201967646</url></Content>
				<string name="Name">UpSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX92398BA6635E4EC1AEC9859389D4D7D4">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=201967827</url></Content>
				<string name="Name">DownSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX4F70A9381F014BFDBBD5622746E7358C">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=201968176</url></Content>
				<string name="Name">OuterSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXC996E444063D46C8B969EA4C802A802F">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=201968383</url></Content>
				<string name="Name">UpperSlash</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX5D1C839BBC6C4E66BBB49B2E06ED519B">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Animations = {
&#9;Equip = {Animation = Tool:WaitForChild(&quot;Equip&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = 1.7},
&#9;DownLeftSlash = {Animation = Tool:WaitForChild(&quot;DownLeftSlash&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.25},
&#9;DownRightSlash = {Animation = Tool:WaitForChild(&quot;DownRightSlash&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.25},
&#9;UpLeftSlash = {Animation = Tool:WaitForChild(&quot;UpLeftSlash&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.25},
&#9;UpRightSlash = {Animation = Tool:WaitForChild(&quot;UpRightSlash&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.25},
&#9;UpSlash = {Animation = Tool:WaitForChild(&quot;UpSlash&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.25},
&#9;DownSlash = {Animation = Tool:WaitForChild(&quot;DownSlash&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.25},
&#9;UpperSlash = {Animation = Tool:WaitForChild(&quot;UpperSlash&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.25},
&#9;OuterSlash = {Animation = Tool:WaitForChild(&quot;OuterSlash&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.25},
}

Sounds = {
&#9;SwordSlash = Handle:WaitForChild(&quot;SwordSlash&quot;),
&#9;SwordSheath = Handle:WaitForChild(&quot;SwordSheath&quot;),
&#9;SwordClash = Handle:WaitForChild(&quot;SwordClash&quot;),
&#9;SwordScrape = Handle:WaitForChild(&quot;SwordScrape&quot;),
&#9;SwordStrike = Handle:WaitForChild(&quot;SwordStrike&quot;),
&#9;SwordCollide = Handle:WaitForChild(&quot;SwordCollide&quot;),
}

Grips = {
&#9;Equipped = CFrame.new(0, 0.075, 2, 1, 0, -0, 0, 0, 1, 0, -1, 0),
&#9;Lunge = CFrame.new(0, 0.075, 2, 1, 0, -0, 0, 1, 0.000900089624, 0, -0.000900089624, 1),
&#9;LungeUp = CFrame.new(0, 0.075, 2, 1, 0, 0, -0, 0.97, 0.25, 0, -0.25, 0.97),
&#9;LungeDown = CFrame.new(0, 0.075, 2, 1, 0, 0, 0, 0.97, -0.25, -0, 0.25, 0.97),
&#9;LungeLeft = CFrame.new(0, 0.075, 2, 0.97, 0.00207756273, -0.25, 0, 1, 0.00856601074, 0.25, -0.00831025094, 0.97),
&#9;LungeRight = CFrame.new(0, 0.075, 2, 0.97, -0.00183315866, 0.25, 0, 1, 0.00755830668, -0.25, -0.00733263465, 0.97),
}

Damages = {
&#9;Touched = {Min = 5, Max = 8},
&#9;Hit = {Min = 10, Max = 15}
}

HitHumanoids = {}
SoundPlayable = false
LastAnimation = 0

ToolEquipped = false
MouseDown = false

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Grip = Grips.Equipped
Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player and ToolEquipped then
&#9;&#9;if Mode == &quot;MouseClick&quot; and Value then
&#9;&#9;&#9;local Down = Value.Down
&#9;&#9;&#9;if Down and not MouseDown and Tool.Enabled then
&#9;&#9;&#9;&#9;Tool.Enabled = false
&#9;&#9;&#9;&#9;MouseDown = true
&#9;&#9;&#9;&#9;while MouseDown do
&#9;&#9;&#9;&#9;&#9;Activated()
&#9;&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif not Down and MouseDown then
&#9;&#9;&#9;&#9;MouseDown = false
&#9;&#9;&#9;&#9;Tool.Enabled = false
&#9;&#9;&#9;&#9;wait(1)
&#9;&#9;&#9;&#9;Tool.Grip = Grips.Equipped
&#9;&#9;&#9;&#9;Tool.Enabled = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end)

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function Billboard(Pos, Text, Time, Color)
&#9;local Rate = (1 / 30)
&#9;local Pos = (Pos or Vector3.new(0, 0, 0))
&#9;local Text = (Text or &quot;&quot;)
&#9;local Time = (Time or 2)
&#9;local Color = (Color or Color3.new(1, 0, 0))
&#9;local EffectPart = BasePart:Clone()
&#9;EffectPart.Name = &quot;Effect&quot;
&#9;EffectPart.Size = Vector3.new(0, 0, 0)
&#9;EffectPart.CFrame = CFrame.new(Pos)
&#9;EffectPart.Anchored = true
&#9;EffectPart.CanCollide = false
&#9;EffectPart.Transparency = 1
&#9;local BillboardGui = Instance.new(&quot;BillboardGui&quot;)
&#9;BillboardGui.Size = UDim2.new(3, 0, 3, 0)
&#9;BillboardGui.Adornee = EffectPart
&#9;local TextLabel = Instance.new(&quot;TextLabel&quot;)
&#9;TextLabel.BackgroundTransparency = 1
&#9;TextLabel.Size = UDim2.new(1, 0, 1, 0)
&#9;TextLabel.Text = Text
&#9;TextLabel.TextColor3 = Color
&#9;TextLabel.TextScaled = true
&#9;TextLabel.Font = Enum.Font.ArialBold
&#9;TextLabel.Parent = BillboardGui
&#9;BillboardGui.Parent = EffectPart
&#9;Debris:AddItem(EffectPart, (Time + 0.1))
&#9;EffectPart.Parent = game:GetService(&quot;Workspace&quot;)
&#9;Delay(0, function()
&#9;&#9;local Frames = (Time / Rate)
&#9;&#9;for Frame = 1, Frames do
&#9;&#9;&#9;wait(Rate)
&#9;&#9;&#9;local Percent = (Frame / Frames)
&#9;&#9;&#9;EffectPart.CFrame = CFrame.new(Pos) + Vector3.new(0, Percent, 0)
&#9;&#9;&#9;TextLabel.TextTransparency = Percent
&#9;&#9;end
&#9;&#9;if EffectPart and EffectPart.Parent then
&#9;&#9;&#9;EffectPart:Destroy()
&#9;&#9;end
&#9;end)
end

function Blow(Hit)
&#9;if not Hit or not Hit.Parent or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;local character = Hit.Parent
&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if character == Character or not humanoid or humanoid.Health == 0 or humanoid == Humanoid then
&#9;&#9;return
&#9;end
&#9;local RightArm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;if not RightArm then
&#9;&#9;return
&#9;end
&#9;local RightGrip = RightArm:FindFirstChild(&quot;RightGrip&quot;)
&#9;if not RightGrip or (RightGrip.Part0 ~= RightArm and RightGrip.Part1 ~= RightArm) then
&#9;&#9;return
&#9;end
&#9;local HumanoidFound = false
&#9;for i, v in pairs(HitHumanoids) do
&#9;&#9;if v.Humanoid == humanoid then
&#9;&#9;&#9;local Index = HitHumanoids[i]
&#9;&#9;&#9;Index.Hits = (Index.Hits + 1)
&#9;&#9;&#9;HitHumanoids[i] = Index
&#9;&#9;&#9;if Index.Hits &gt;= Index.MaxHits then
&#9;&#9;&#9;&#9;HumanoidFound = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if HumanoidFound then
&#9;&#9;return
&#9;end
&#9;if SoundPlayable then
&#9;&#9;SoundPlayable = false
&#9;&#9;local SlashSounds = {Sounds.SwordClash, Sounds.SwordScrape, Sounds.SwordStrike, Sounds.SwordCollide}
&#9;&#9;InvokeClient(&quot;PlaySound&quot;, SlashSounds[math.random(1, #SlashSounds)])
&#9;end
&#9;local DamageValue = ((CurrentAnimation and Damages.Hit) or Damages.Touched)
&#9;local DamageAmount = math.random(DamageValue.Min, DamageValue.Max)
&#9;if CurrentAnimation then
&#9;&#9;table.insert(HitHumanoids, {Humanoid = humanoid, Hits = 0, MaxHits = math.random(1, 3)})
&#9;&#9;local Radius = Vector3.new(1.25, 0.25, 1.25)
&#9;&#9;Radius = (Radius * 100)
&#9;&#9;local Offset = Vector3.new(math.random(-Radius.X, Radius.X), math.random(-Radius.Y, Radius.Y), math.random(-Radius.Z, Radius.Z))
&#9;&#9;Offset = Offset * Vector3.new(0.01, 0.01, 0.01)
&#9;&#9;Billboard((Handle.Position + Offset + Vector3.new(0, 2.5, 0)), DamageAmount, 2, BrickColor.new(&quot;Really red&quot;).Color)
&#9;end
&#9;UntagHumanoid(humanoid)
&#9;TagHumanoid(humanoid, Player)
&#9;humanoid:TakeDamage(DamageAmount)
end

function ChooseIndex(Table, LastIndex)
&#9;local IndexChosen = math.random(1, #Table)
&#9;if LastIndex == IndexChosen then
&#9;&#9;return ChooseIndex(Table, LastIndex)
&#9;else
&#9;&#9;return IndexChosen
&#9;end
end

function Activated()
&#9;if not ToolEquipped then
&#9;&#9;return
&#9;end
&#9;SoundPlayable = true
&#9;local SlashAnimations = {Animations.DownLeftSlash, Animations.DownRightSlash, Animations.UpLeftSlash, Animations.UpRightSlash, Animations.UpSlash, Animations.DownSlash, Animations.UpperSlash, Animations.OuterSlash}
&#9;local SwordGrips = {Grips.Lunge, Grips.LungeLeft, Grips.LungeRight, Grips.LungeUp, Grips.LungeDown}
&#9;InvokeClient(&quot;PlaySound&quot;, Sounds.SwordSlash)
&#9;Tool.Grip = SwordGrips[math.random(1, #SwordGrips)]
&#9;LastAnimation = ChooseIndex(SlashAnimations, LastAnimation)
&#9;CurrentAnimation = SlashAnimations[LastAnimation]
&#9;HitHumanoids = {}
&#9;InvokeClient(&quot;PlayAnimation&quot;, CurrentAnimation)
&#9;wait(CurrentAnimation.Duration)
&#9;HitHumanoids = {}
&#9;CurrentAnimation = nil
&#9;SoundPlayable = false
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Tool.Grip = Grips.Equipped
&#9;Spawn(function()
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v and v.Animation then
&#9;&#9;&#9;&#9;InvokeClient(&quot;Preload&quot;, v.Animation.AnimationId)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)
&#9;if EquippedToolUnequipped then
&#9;&#9;EquippedToolUnequipped:disconnect()
&#9;end
&#9;local CurrentlyEquipped = true
&#9;EquippedToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;end)
&#9;wait(0.0125)
&#9;if not EquippedToolUnequipped then
&#9;&#9;return
&#9;end
&#9;InvokeClient(&quot;PlaySound&quot;, Sounds.SwordSheath)
&#9;local Animation = Animations.Equip
&#9;InvokeClient(&quot;PlayAnimation&quot;, Animation)
&#9;wait(Animation.Duration)
&#9;if not CurrentlyEquipped then
&#9;&#9;return
&#9;end
&#9;ToolEquipped = true
end

function Unequipped()
&#9;for i, v in pairs({EquippedToolUnequipped}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;Tool.Grip = Grips.Equipped
&#9;MouseDown = false
&#9;ToolEquipped = false
end

Handle.Touched:connect(Blow)

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX9D47D403F6864D1EB18691CA82CB0EDD">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=94160581</url></Content>
				<string name="Name">Equip</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX89176343979D4F64A01C6FA870F86F29">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>2.64352798</X>
					<Y>-0.19748041</Y>
					<Z>0.45001328</Z>
					<R00>0.101295911</R00>
					<R01>0.00879230443</R01>
					<R02>0.994817436</R02>
					<R10>-0</R10>
					<R11>0.999960899</R11>
					<R12>-0.00883776229</R12>
					<R20>-0.994856358</R20>
					<R21>0.000895229168</R21>
					<R22>0.101291947</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>0.653893828</X>
					<Y>-0.179804891</Y>
					<Z>0.24742946</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>