<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXA1223B7C521340DFA2A707E739CEDCD7">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.200000003</X>
				<Y>0</Y>
				<Z>-0.25</Z>
				<R00>0.756852388</R00>
				<R01>-0</R01>
				<R02>0.653585851</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>-0.653585851</R20>
				<R21>0</R21>
				<R22>0.756852388</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">OrnateGoldenBow</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=203344878</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXB1CBA9BAC8F2424187368185386F43E1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>19.5999966</Y>
					<Z>0</Z>
					<R00>-0.5006302</R00>
					<R01>0.554287434</R01>
					<R02>0.664932132</R02>
					<R10>0.251719594</R10>
					<R11>0.82814157</R11>
					<R12>-0.500818074</R12>
					<R20>-0.828255117</R20>
					<R21>-0.0833482668</R21>
					<R22>-0.55411768</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.25</X>
					<Y>5.25</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXB0F0BE6DEE07476BA37037E282787F42">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=203766573</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.10000002</X>
						<Y>1.10000002</Y>
						<Z>1.10000002</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=203344843</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4092DAFF5F2349C18BCCCD9D0E8AC726">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=89343281</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX58CB04EA54D3446685CF2C40700F5630">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Solidify</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=203936153</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX0A85CC584173431391F7BFA8691F53FF">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Fire</string>
					<float name="Pitch">0.66800493</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=16211041</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX6F97185F93594D718B839542A56D5DF9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ToolEquipped = false

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({ObjectLocalTransparencyModifier}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;Animations = {}
end

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function OnClientInvoke(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;SetLocalTransparencyModifier&quot; and Value and ToolEquipped then
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ObjectFound = false
&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;if v == Value then
&#9;&#9;&#9;&#9;&#9;ObjectFound = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not ObjectFound then
&#9;&#9;&#9;&#9;table.insert(LocalObjects, Value)
&#9;&#9;&#9;&#9;if ObjectLocalTransparencyModifier then
&#9;&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.LocalTransparencyModifier = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(LocalObjects, i)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ClientControl.OnClientInvoke = OnClientInvoke</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXA969C98C8BF546E3A03A8317E2162BCD">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=203929811</url></Content>
				<string name="Name">Hold</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXE9863A63CB5848DC89ABEF6DF784CF6D">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=203929876</url></Content>
				<string name="Name">Idle</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXCEB09AF05495442F9CE84993E34B88F2">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=203929952</url></Content>
				<string name="Name">Fire</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX10A7A0DB1CC346CF82CDC9D8949B9BE0">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=204195154</url></Content>
				<string name="Name">GrappleShot</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX6F9F1B4755D847708AEF578D6AB07802">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-1.61153185</X>
					<Y>19.4723644</Y>
					<Z>-3.52831435</Z>
					<R00>-0.91129297</R00>
					<R01>0.0220818054</R01>
					<R02>-0.411166221</R02>
					<R10>-0</R10>
					<R11>0.998561144</R11>
					<R12>0.0536280125</R12>
					<R20>0.41175878</R20>
					<R21>0.0488708317</R21>
					<R22>-0.909981549</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-1.03590107</X>
					<Y>19.3972855</Y>
					<Z>-2.25434446</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX433832D0AB33466192EC8C1A91EAFEF0">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)
RunService = game:GetService(&quot;RunService&quot;)

RbxUtility = LoadLibrary(&quot;RbxUtility&quot;)

Goldify = script:WaitForChild(&quot;Goldify&quot;)

BasePart = RbxUtility.Create(&quot;Part&quot;){
&#9;Material = Enum.Material.Plastic,
&#9;FormFactor = Enum.FormFactor.Custom,
&#9;TopSurface = Enum.SurfaceType.Smooth,
&#9;BottomSurface = Enum.SurfaceType.Smooth,
&#9;Size = Vector3.new(0.2, 0.2, 0.2),
&#9;CanCollide = true,
&#9;Locked = true,
}

BaseArrow = BasePart:Clone()
BaseArrow.Name = &quot;Arrow&quot;
BaseArrow.Size = Vector3.new(0.2, 0.3, 3.5)
ArrowMesh = RbxUtility.Create(&quot;SpecialMesh&quot;){
&#9;MeshType = Enum.MeshType.FileMesh,
&#9;MeshId = &quot;http://www.roblox.com/asset/?id=203344622&quot;,
&#9;TextureId = &quot;http://www.roblox.com/asset/?id=203344843&quot;,
&#9;Scale = Vector3.new(1, 1, 1),
&#9;VertexColor = Vector3.new(1, 1, 1),
&#9;Parent = BaseArrow
}

Sounds = {
&#9;Fire = Handle:WaitForChild(&quot;Fire&quot;),
&#9;Hit = Handle:WaitForChild(&quot;Hit&quot;),
&#9;Solidify = Handle:WaitForChild(&quot;Solidify&quot;)
}

Animations = {
&#9;Hold = {Animation = Tool:WaitForChild(&quot;Hold&quot;), FadeTime = 0.75, Weight = nil, Speed = nil, Duration = nil},
&#9;Idle = {Animation = Tool:WaitForChild(&quot;Idle&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
&#9;Fire = {Animation = Tool:WaitForChild(&quot;Fire&quot;), FadeTime = 0, Weight = nil, Speed = nil, Duration = nil},
&#9;GrappleShot = {Animation = Tool:WaitForChild(&quot;GrappleShot&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Range = 350
FireRate = 1

Rate = (1 / 30)

BarrelOffset = Vector3.new(-0.05, 0.5, -1.5)
WindVec = Vector3.new(2, -1, 1).unit

BaseDamage = 15
MaxDamage = 80
MaxCharge = 3

HookShotReloading = false
HookShotReloadTime = 3

Gravity = 196.20
ProjectileNames = {&quot;Water&quot;, &quot;Arrow&quot;, &quot;Projectile&quot;, &quot;Effect&quot;, &quot;Rail&quot;, &quot;Laser&quot;, &quot;Bullet&quot;}

ChargeTable = {
&#9;Charge = 0,
&#9;FullyCharged = false,
&#9;CalculatedCharge = nil,
}

MouseDown = false
ToolEquipped = false

Tool.Enabled = true

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function Clamp(Number, Min, Max)
&#9;return math.max(math.min(Max, Number), Min)
end

function GetPercentage(Start, End, Number)
&#9;return (((Number - Start) / (End - Start)) * 100)
end

function Round(Number, RoundDecimal)
&#9;local WholeNumber, Decimal = math.modf(Number)
&#9;return ((Decimal &gt;= RoundDecimal and math.ceil(Number)) or (Decimal &lt; RoundDecimal and math.floor(Number)))
end

function CheckTableForString(Table, String)
&#9;for i, v in pairs(Table) do
&#9;&#9;if string.lower(v) == string.lower(String) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function CheckIntangible(Hit)
&#9;if Hit and Hit.Parent then
&#9;&#9;if Hit.Transparency &gt; 0.8 or CheckTableForString(ProjectileNames, Hit.Name) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function CastRay(StartPos, Vec, Length, IgnoreList, DelayIfHit)
&#9;local Hit, EndPos = game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), IgnoreList)
&#9;if Hit and CheckIntangible(Hit) then
&#9;&#9;if DelayIfHit then
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;&#9;Hit, EndPos = CastRay((EndPos + (Vec * 0.01)), Vec, (Length - ((StartPos - EndPos).magnitude)), IgnoreList, DelayIfHit)
&#9;end
&#9;return Hit, EndPos
end

function DrawBeam(StartPos, EndPos, Color, FadeDelay)
&#9;local Distance = (StartPos - EndPos).magnitude
&#9;local Laser = BasePart:Clone()
&#9;Laser.Name = &quot;Effect&quot;
&#9;Laser.Size = Vector3.new(0.2, 0.2, 0.2)
&#9;Laser.Transparency = 5
&#9;Laser.BrickColor = Color
&#9;Laser.Anchored = true
&#9;Laser.CanCollide = false
&#9;local Mesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;Mesh.MeshType = Enum.MeshType.Head
&#9;Mesh.Scale = Vector3.new(1, (Distance * 5), 1)
&#9;Mesh.Parent = Laser
&#9;Laser.CFrame = CFrame.new(StartPos, EndPos) * CFrame.new(0, 0, (-Distance / 2)) * CFrame.Angles((math.pi / 2), 0, 0)
&#9;Debris:AddItem(Laser, (FadeDelay * 3))
&#9;Laser.Parent = game:GetService(&quot;Workspace&quot;)
&#9;local Frames = math.floor(FadeDelay / Rate)
&#9;for Frame = 1, Frames do
&#9;&#9;wait(Rate)
&#9;&#9;local Percent = (Frame / Frames)
&#9;&#9;Laser.CFrame = Laser.CFrame + WindVec * Rate
&#9;&#9;Laser.Transparency = (0.5 + (Percent * 0.5))
&#9;end
&#9;wait(1)
&#9;if Laser and Laser.Parent then
&#9;&#9;Laser:Destroy()
&#9;end
end

function CreateQuiver()
&#9;if Quiver and Quiver.Parent then
&#9;&#9;Quiver:Destroy()
&#9;end
&#9;Quiver = BasePart:Clone()
&#9;Quiver.Name = &quot;Quiver&quot;
&#9;Quiver.Size = Vector3.new(2, 3, 0.75)
&#9;local Mesh = RbxUtility.Create(&quot;SpecialMesh&quot;){
&#9;&#9;MeshType = Enum.MeshType.FileMesh,
&#9;&#9;MeshId = &quot;http://www.roblox.com/asset/?id=203762962&quot;,
&#9;&#9;TextureId = &quot;http://www.roblox.com/asset/?id=203344843&quot;,
&#9;&#9;Scale = Vector3.new(1, 1, 1),
&#9;&#9;VertexColor = Vector3.new(1, 1, 1),
&#9;&#9;Parent = Quiver
&#9;}
&#9;local QuiverWeld = RbxUtility.Create(&quot;Weld&quot;){
&#9;&#9;Part0 = Torso,
&#9;&#9;Part1 = Quiver,
&#9;&#9;Parent = Quiver,
&#9;&#9;C0 = CFrame.new(-0.5, 0.5, ((Torso.Size.Z / 2) + (Quiver.Size.Z / 2))),
&#9;&#9;Parent = Quiver,
&#9;}
&#9;Quiver.Parent = Character
end

function GetTotalMass(Parent)
&#9;local Mass = 0
&#9;local function GetMass(Parent)
&#9;&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;Mass = (Mass + v:GetMass())
&#9;&#9;&#9;end
&#9;&#9;&#9;GetMass(v)
&#9;&#9;end
&#9;end
&#9;GetMass(Parent)
&#9;return Mass
end

function BreakRope()
&#9;for i, v in pairs({HookShotArrow, HookedBodyVelocity}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.GrappleShot)
&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Idle)
&#9;HookShotReloading = true
&#9;wait(HookShotReloadTime)
&#9;HookShotReloading = false
end

function FireHookShot(DesiredPosition)
&#9;
&#9;local MaxRopeDistance = 100
&#9;
&#9;local StartPosition = Handle.Position
&#9;
&#9;local Direction = CFrame.new(StartPosition, DesiredPosition)
&#9;local Force = 250
&#9;
&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.Idle)
&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.GrappleShot)
&#9;
&#9;HookShotArrow = BaseArrow:Clone()
&#9;HookShotArrow.Name = &quot;GrappleHook&quot;
&#9;Spawn(function()
&#9;&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = HookShotArrow, Transparency = 0, AutoUpdate = false})
&#9;end)

&#9;local Velocity = Direction.lookVector * Force&#9;
&#9;
&#9;local Rope = BasePart:Clone()
&#9;Rope.Anchored = true
&#9;Rope.CanCollide = false
&#9;Rope.Name = &quot;Rope&quot;
&#9;Rope.BrickColor = BrickColor.new(&quot;Institutional white&quot;)
&#9;Rope.Size = Vector3.new(0.2, 1, 0.2)
&#9;local RopeMesh = RbxUtility.Create(&quot;CylinderMesh&quot;){
&#9;&#9;Scale = Vector3.new(0, 0, 0),
&#9;&#9;Parent = Rope,
&#9;}
&#9;Spawn(function()
&#9;&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = Rope, Transparency = 0, AutoUpdate = false})
&#9;end)
&#9;
&#9;Rope.Parent = HookShotArrow
&#9;
&#9;local Mass = (HookShotArrow:GetMass() * Gravity)&#9;
&#9;
&#9;local BodyVelocity = RbxUtility.Create(&quot;BodyVelocity&quot;){
&#9;&#9;maxForce = Vector3.new(Mass, Mass, Mass),
&#9;&#9;velocity = Velocity,
&#9;&#9;Parent = HookShotArrow,
&#9;}
&#9;
&#9;HookShotArrow.Velocity = Velocity
&#9;
&#9;HookShotArrow.CFrame = Handle.CFrame + Direction.lookVector * ((Handle.Size.Z / 2) + (BaseArrow.Size.Z / 2))
&#9;HookShotArrow.CFrame = CFrame.new(HookShotArrow.Position, DesiredPosition)
&#9;
&#9;local BodyGyro = RbxUtility.Create(&quot;BodyGyro&quot;){
&#9;&#9;maxTorque = Vector3.new(math.huge, math.huge, math.huge),
&#9;&#9;cframe = Direction,
&#9;&#9;Parent = HookShotArrow,
&#9;}
&#9;
&#9;local Hooked = false
&#9;HookShotArrow.Touched:connect(function(Hit)
&#9;&#9;if not Hit or not Hit.Parent or Hit == Rope or Hooked then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local character = Hit.Parent
&#9;&#9;if character:IsA(&quot;Hat&quot;) or character:IsA(&quot;Tool&quot;) then
&#9;&#9;&#9;character = character.Parent
&#9;&#9;end
&#9;&#9;if character == Character then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;Hooked = true
&#9;&#9;local GrappleCFrame = CFrame.new(Hit.Position)
&#9;&#9;local C0 = Hit.CFrame:inverse() * GrappleCFrame
&#9;&#9;local C1 = HookShotArrow.CFrame:inverse() * GrappleCFrame
&#9;&#9;local GrappleWeld = RbxUtility.Create(&quot;Weld&quot;){
&#9;&#9;&#9;Part0 = Hit,
&#9;&#9;&#9;Part1 = HookShotArrow,
&#9;&#9;&#9;C0 = C0,
&#9;&#9;&#9;C1 = C1,
&#9;&#9;&#9;Parent = HookShotArrow,
&#9;&#9;}
&#9;&#9;local Speed = 100
&#9;&#9;local Mass = ((GetTotalMass(Character) * Gravity) * Speed)
&#9;&#9;HookedBodyVelocity = RbxUtility.Create(&quot;BodyVelocity&quot;){
&#9;&#9;&#9;maxForce = Vector3.new(Mass, Mass, Mass),
&#9;&#9;&#9;velocity = CFrame.new(Handle.Position, HookShotArrow.Position).lookVector * Speed,
&#9;&#9;&#9;Parent = Torso
&#9;&#9;}
&#9;end)&#9;
&#9;
&#9;HookShotArrow.Parent = Tool
&#9;
&#9;local RopeDisconnected = false
&#9;local RopeMovement
&#9;local function DisconnectRopeMovement()
&#9;&#9;if not RopeDisconnected then
&#9;&#9;&#9;if RopeMovement then
&#9;&#9;&#9;&#9;RopeMovement:disconnect()
&#9;&#9;&#9;end
&#9;&#9;&#9;RopeMovement = nil
&#9;&#9;&#9;BreakRope()
&#9;&#9;end
&#9;end
&#9;
&#9;RopeMovement = RunService.Stepped:connect(function()
&#9;&#9;local CanBreak = false
&#9;&#9;if not HookShotArrow or not HookShotArrow.Parent or not Rope or not Rope.Parent or not ToolEquipped then
&#9;&#9;&#9;CanBreak = true
&#9;&#9;end
&#9;&#9;if not CanBreak then
&#9;&#9;&#9;local Distance = (Torso.Position - HookShotArrow.Position).magnitude
&#9;&#9;&#9;if Distance &gt; MaxRopeDistance or (Hooked and Distance &lt;= 5) then
&#9;&#9;&#9;&#9;CanBreak = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if CanBreak then
&#9;&#9;&#9;DisconnectRopeMovement()
&#9;&#9;end
&#9;&#9;local StartPos = Handle.Position
&#9;&#9;local EndPos = HookShotArrow.Position
&#9;&#9;local Distance = (StartPos - EndPos).magnitude
&#9;&#9;RopeMesh.Scale = Vector3.new(1, Distance, 1)
&#9;&#9;Rope.CFrame = CFrame.new(((StartPos + EndPos) / 2), EndPos) * CFrame.Angles(-(math.pi / 2), 0, 0)
&#9;end)

end

function CreateDisplayArrow()
&#9;if DisplayArrow and DisplayArrow.Parent then
&#9;&#9;DisplayArrow:Destroy()
&#9;end
&#9;DisplayArrow = BaseArrow:Clone()
&#9;DisplayArrow.Name = &quot;DisplayArrow&quot;
&#9;ArrowWeld = RbxUtility.Create(&quot;Weld&quot;){
&#9;&#9;Part0 = LeftArm,
&#9;&#9;Part1 = DisplayArrow,
&#9;&#9;Parent = DisplayArrow,
&#9;}
&#9;DisplayArrow.Parent = Tool
&#9;Spawn(function()
&#9;&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = DisplayArrow, Transparency = 0, AutoUpdate = true})
&#9;end)
&#9;FocusArrow = RunService.Stepped:connect(function()
&#9;&#9;if CheckIfAlive() and ToolEquipped and DisplayArrow.Parent and ArrowWeld.Parent then
&#9;&#9;local ArrowCFrame = CFrame.new((LeftArm.CFrame * CFrame.new(0, -1, 0)).p, (Handle.Position + Vector3.new(0.125, 0, 0))) * CFrame.new(0, 0, -1.2)
&#9;&#9;&#9;ArrowWeld.C0 = LeftArm.CFrame:toObjectSpace(ArrowCFrame)
&#9;&#9;&#9;if (tick() - ChargeTable.Charge) &gt;= MaxCharge and not ChargeTable.FullyCharged then
&#9;&#9;&#9;&#9;ChargeTable.FullyCharged = true
&#9;&#9;&#9;&#9;local Fire = RbxUtility.Create(&quot;Fire&quot;){
&#9;&#9;&#9;&#9;&#9;Color = BrickColor.new(&quot;Gold&quot;).Color,
&#9;&#9;&#9;&#9;&#9;SecondaryColor = BrickColor.new(&quot;Gold&quot;).Color,
&#9;&#9;&#9;&#9;&#9;Heat = 10,
&#9;&#9;&#9;&#9;&#9;Size = 3,
&#9;&#9;&#9;&#9;&#9;Enabled = true,
&#9;&#9;&#9;&#9;&#9;Parent = DisplayArrow,
&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;end
&#9;&#9;elseif FocusArrow then
&#9;&#9;&#9;FocusArrow:disconnect()
&#9;&#9;end
&#9;end)
end

function Fire(StartPos, TargetPos, Damage)
&#9;local FakeStartPos = (Handle.CFrame * CFrame.new(BarrelOffset)).p
&#9;local Vec = (TargetPos - StartPos).unit
&#9;local Drop = false
&#9;local RayHit, RayPos = CastRay(StartPos, Vec, Range, {Character}, false)
&#9;local FakeVec = (RayPos - FakeStartPos).unit
&#9;local Arrow = BaseArrow:Clone()
&#9;if RayHit then
&#9;&#9;local character = RayHit.Parent
&#9;&#9;if character:IsA(&quot;Hat&quot;) or character:IsA(&quot;Tool&quot;) then
&#9;&#9;&#9;character = character.Parent
&#9;&#9;end
&#9;&#9;if character == Character then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;local GoldifyScript = character:FindFirstChild(&quot;Goldify&quot;)
&#9;&#9;if humanoid then
&#9;&#9;&#9;if humanoid.Health &gt; 0 and not GoldifyScript then
&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;humanoid:TakeDamage(Damage)
&#9;&#9;&#9;&#9;if Damage == MaxDamage then
&#9;&#9;&#9;&#9;&#9;local SolidifySound = Sounds.Solidify:Clone()
&#9;&#9;&#9;&#9;&#9;SolidifySound.Parent = Arrow
&#9;&#9;&#9;&#9;&#9;SolidifySound.Pitch = (math.random(5, 25) * 0.1)
&#9;&#9;&#9;&#9;&#9;SolidifySound:Play()
&#9;&#9;&#9;&#9;&#9;if not GoldifyScript then
&#9;&#9;&#9;&#9;&#9;&#9;GoldifyScript = Goldify:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;GoldifyScript.Disabled = false
&#9;&#9;&#9;&#9;&#9;&#9;GoldifyScript.Parent = character
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;Drop = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local HitSound = Arrow:FindFirstChild(&quot;Hit&quot;)
&#9;&#9;if HitSound then
&#9;&#9;&#9;HitSound.Pitch = (math.random(80, 120) / 100)
&#9;&#9;&#9;HitSound:Play()
&#9;&#9;end
&#9;&#9;local NewCF = CFrame.new(RayPos, (RayPos + FakeVec)) * CFrame.new(0, 0, (0.9 + (math.random(0, 1) * 0.4)))
&#9;&#9;Arrow.CFrame = NewCF
&#9;&#9;if not Drop then
&#9;&#9;&#9;local StickWeld = RbxUtility.Create(&quot;Weld&quot;){
&#9;&#9;&#9;&#9;Part0 = RayHit,
&#9;&#9;&#9;&#9;Part1 = Arrow,
&#9;&#9;&#9;&#9;C0 = (RayHit.CFrame:inverse() * NewCF),
&#9;&#9;&#9;&#9;C1 = (NewCF:inverse() * NewCF),
&#9;&#9;&#9;&#9;Parent = Arrow,
&#9;&#9;&#9;}
&#9;&#9;else
&#9;&#9;&#9;Arrow.Velocity = Vector3.new(0, 0, 0)
&#9;&#9;&#9;Arrow.RotVelocity = Vector3.new(0, 0, 0)
&#9;&#9;end
&#9;else
&#9;&#9;Arrow.CFrame = CFrame.new(RayPos, (RayPos + FakeVec))
&#9;&#9;Arrow.Velocity = (FakeVec * 300)
&#9;end
&#9;
&#9;Debris:AddItem(Arrow, (10 + (math.random() * 10)))
&#9;Arrow.Parent = game:GetService(&quot;Workspace&quot;)

&#9;Spawn(function()
&#9;&#9;DrawBeam(FakeStartPos, RayPos, BrickColor.new(&quot;Institutional white&quot;), 0.5)
&#9;end)
&#9;
&#9;if DisplayArrow and DisplayArrow.Parent then
&#9;&#9;DisplayArrow:Destroy()
&#9;end
end

function CheckIfAlive()
&#9;return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Head and Head.Parent and Torso and Torso.Parent and RightArm and RightArm.Parent and LeftArm and LeftArm.Parent) and true) or false)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Head = Character:FindFirstChild(&quot;Head&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;RightArm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;LeftArm = Character:FindFirstChild(&quot;Left Arm&quot;)
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Spawn(function()
&#9;&#9;CreateQuiver()
&#9;&#9;for i, v in pairs({RightArm, LeftArm}) do
&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;InvokeClient(&quot;SetLocalTransparencyModifier&quot;, {Object = v, Transparency = 0, AutoUpdate = false})
&#9;&#9;&#9;end)
&#9;&#9;end
&#9;end)
&#9;Spawn(function()
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Idle)
&#9;end)
&#9;ToolEquipped = true
end

function Unequipped()
&#9;for i, v in pairs({Quiver, DisplayArrow, HookShotArrow}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;MouseDown = false
&#9;ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
&#9;if player == Player and ToolEquipped and value and CheckIfAlive() then
&#9;&#9;if mode == &quot;KeyPress&quot; then
&#9;&#9;&#9;local Key = value.Key
&#9;&#9;&#9;local ByteKey = string.byte(Key)
&#9;&#9;&#9;local Down = value.Down
&#9;&#9;&#9;if Key == &quot;q&quot; and Down and not HookShotReloading then
&#9;&#9;&#9;&#9;if not HookShotArrow or not HookShotArrow.Parent then
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Tool:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;if v:IsA(&quot;BasePart&quot;) and v.Name == &quot;GrappleHook&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;local TargetPosition = InvokeClient(&quot;MousePosition&quot;)
&#9;&#9;&#9;&#9;&#9;FireHookShot(TargetPosition)
&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;BreakRope()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;elseif mode == &quot;MouseClick&quot; or mode == &quot;InputChanged&quot; then
&#9;&#9;&#9;local Down = value.Down
&#9;&#9;&#9;if Down and not MouseDown and Tool.Enabled then
&#9;&#9;&#9;&#9;MouseDown = true
&#9;&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Hold)
&#9;&#9;&#9;&#9;local FocusArrow
&#9;&#9;&#9;&#9;ChargeTable.Charge = tick()
&#9;&#9;&#9;&#9;ChargeTable.FullyCharged = false
&#9;&#9;&#9;&#9;ChargeTable.CalculatedCharge = nil
&#9;&#9;&#9;&#9;CreateDisplayArrow()
&#9;&#9;&#9;&#9;while MouseDown do
&#9;&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if ToolEquipped then
&#9;&#9;&#9;&#9;&#9;Tool.Enabled = false
&#9;&#9;&#9;&#9;&#9;if DisplayArrow and DisplayArrow.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;DisplayArrow:Destroy()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;ChargeTable.CalculatedCharge = Clamp((tick() - ChargeTable.Charge), 0, MaxCharge)
&#9;&#9;&#9;&#9;&#9;Sounds.Fire.Pitch = (0.6 + (0.8 * (ChargeTable.CalculatedCharge / MaxCharge)))
&#9;&#9;&#9;&#9;&#9;Sounds.Fire:Play()
&#9;&#9;&#9;&#9;&#9;local FireDamage = Round((GetPercentage(0, MaxCharge, ChargeTable.CalculatedCharge)), 0.5)
&#9;&#9;&#9;&#9;&#9;FireDamage = Clamp(((FireDamage &lt; BaseDamage and BaseDamage) or FireDamage), BaseDamage, MaxDamage)
&#9;&#9;&#9;&#9;&#9;Fire(DisplayArrow.Position, InvokeClient(&quot;MousePosition&quot;), FireDamage)
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.Hold)
&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Fire)
&#9;&#9;&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;&#9;&#9;wait(FireRate)
&#9;&#9;&#9;&#9;&#9;&#9;Tool.Enabled = true
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;elseif not Down and MouseDown then
&#9;&#9;&#9;&#9;MouseDown = false
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

for i, v in pairs(Tool:GetChildren()) do
&#9;if (v:IsA(&quot;BasePart&quot;) or v:IsA(&quot;Model&quot;)) and v ~= Handle then
&#9;&#9;v:Destroy()
&#9;end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ServerControl.OnServerInvoke = OnServerInvoke</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX1C682562ECC04DDF8C9465C81899E1B5">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Goldify</string>
					<ProtectedString name="Source">--Made by Luckymaxer

Character = script.Parent
Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)

BaseColor = BrickColor.new(&quot;Bright yellow&quot;)
Color = BaseColor.Color

Duration = 15

Classes = {
&#9;BasePart = {
&#9;&#9;BrickColor = BaseColor,
&#9;&#9;Material = Enum.Material.Plastic,
&#9;&#9;Reflectance = 0.5,
&#9;&#9;Anchored = true,
&#9;},
&#9;FileMesh = {
&#9;&#9;TextureId = &quot;&quot;,
&#9;},
&#9;DataModelMesh = {
&#9;&#9;VertexColor = Vector3.new(Color.r, Color.g, Color.b),
&#9;},
&#9;CharacterMesh = {
&#9;&#9;BaseTextureId = 0,
&#9;&#9;OverlayTextureId = 0,
&#9;},
&#9;Shirt = {
&#9;&#9;ShirtTemplate = &quot;&quot;,
&#9;},
&#9;Pants = {
&#9;&#9;PantsTemplate = &quot;&quot;,
&#9;},
&#9;FaceInstance = {
&#9;&#9;Texture = &quot;&quot;,
&#9;},
&#9;Sparkles = {
&#9;&#9;SparkleColor = Color,
&#9;},
&#9;Fire = {
&#9;&#9;Color = Color,
&#9;&#9;SecondaryColor = Color,
&#9;},
&#9;Smoke = {
&#9;&#9;Color = Color,
&#9;}
}

Objects = {}
RemovedObjects = {}
FakeParts = {}
Hats = {}
Tools = {}

function Decorate(Object)
&#9;local ObjectData = {
&#9;&#9;Object = nil,
&#9;&#9;Properties = {},
&#9;}
&#9;for i, v in pairs(Classes) do
&#9;&#9;if Object:IsA(i) then
&#9;&#9;&#9;if Object:IsA(&quot;CharacterMesh&quot;) then
&#9;&#9;&#9;&#9;local Mesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;&#9;Mesh.MeshType = Enum.MeshType.FileMesh
&#9;&#9;&#9;&#9;Mesh.MeshId = (&quot;http://www.roblox.com/asset/?id=&quot; .. Object.MeshId)
&#9;&#9;&#9;&#9;for ii, vv in pairs(Character:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;if vv:IsA(&quot;BasePart&quot;) and Object.BodyPart.Name == string.gsub(vv.Name, &quot; &quot;, &quot;&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;Mesh.Parent = vv
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(RemovedObjects, {Object = Object, NewObject = Mesh, Parent = Object.Parent})
&#9;&#9;&#9;&#9;&#9;&#9;Object.Parent = nil
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;ObjectData.Object = Object
&#9;&#9;&#9;&#9;for ii, vv in pairs(v) do
&#9;&#9;&#9;&#9;&#9;local PropertyValue = nil
&#9;&#9;&#9;&#9;&#9;local PropertyValueSet = false
&#9;&#9;&#9;&#9;&#9;pcall(function()
&#9;&#9;&#9;&#9;&#9;&#9;PropertyValue = Object[ii]
&#9;&#9;&#9;&#9;&#9;&#9;PropertyValueSet = true
&#9;&#9;&#9;&#9;&#9;&#9;Object[ii] = vv
&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;if PropertyValueSet then
&#9;&#9;&#9;&#9;&#9;&#9;ObjectData.Properties[ii] = PropertyValue
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;table.insert(Objects, ObjectData)
end

function Redesign(Parent)
&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;Decorate(v)
&#9;&#9;Redesign(v)
&#9;end
end

for i, v in pairs(Character:GetChildren()) do --Create fake hats and tools, and goldify them
&#9;if v:IsA(&quot;Hat&quot;) or v:IsA(&quot;Tool&quot;) then
&#9;&#9;local FakeObject = v:Clone()
&#9;&#9;Decorate(FakeObject)
&#9;&#9;table.insert(((v:IsA(&quot;Hat&quot;) and Hats) or Tools), v)
&#9;&#9;for ii, vv in pairs(FakeObject:GetChildren()) do
&#9;&#9;&#9;if vv:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;local FakePart = vv:Clone()
&#9;&#9;&#9;&#9;FakePart.Name = v.Name
&#9;&#9;&#9;&#9;table.insert(FakeParts, FakePart)
&#9;&#9;&#9;&#9;FakePart.Parent = Character
&#9;&#9;&#9;&#9;FakePart.CFrame = vv.CFrame
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

if Humanoid and Humanoid.Parent then
&#9;Humanoid:UnequipTools()
end

for i, v in pairs({Hats, Tools}) do
&#9;for ii, vv in pairs(v) do
&#9;&#9;vv.Parent = nil
&#9;end
end

Redesign(Character) --Goldify the player

wait(Duration)

for i, v in pairs(Objects) do --Ungoldify the player
&#9;for ii, vv in pairs(v.Properties) do
&#9;&#9;v.Object[ii] = vv
&#9;end
end
for i, v in pairs(RemovedObjects) do
&#9;if v.NewObject and v.NewObject.Parent then
&#9;&#9;v.NewObject:Destroy()
&#9;end
&#9;v.Object.Parent = v.Parent
end
for i, v in pairs(FakeParts) do
&#9;if v and v.Parent then
&#9;&#9;v:Destroy()
&#9;end
end
for i, v in pairs(Hats) do
&#9;v.Parent = Character
end
for i, v in pairs(Tools) do
&#9;if Humanoid and Humanoid.Parent then
&#9;&#9;Humanoid:EquipTool(v)
&#9;else
&#9;&#9;v.Parent = Character
&#9;end
end

script:Destroy()</ProtectedString>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>