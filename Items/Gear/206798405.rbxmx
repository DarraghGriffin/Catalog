<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX6D291741036549DDBC35C142565DF1B4">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>-0.5</X>
				<Y>-0.649999976</Y>
				<Z>0</Z>
				<R00>-0</R00>
				<R01>1</R01>
				<R02>0</R02>
				<R10>8.64761569e-006</R10>
				<R11>0</R11>
				<R12>1</R12>
				<R20>1</R20>
				<R21>0</R21>
				<R22>-8.64761569e-006</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">LavaGun</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=204508521</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX9C123F35D84E4537B4CF3E2461A445F5">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-5.53847694</X>
					<Y>28.9858227</Y>
					<Z>18.212122</Z>
					<R00>0.0166158099</R00>
					<R01>-0.875176191</R01>
					<R02>0.483519435</R02>
					<R10>0.999861896</R10>
					<R11>0.0143923732</R11>
					<R12>-0.00830918644</R12>
					<R20>0.000313009776</R20>
					<R21>0.483590722</R21>
					<R22>0.875294507</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.5</X>
					<Y>3</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXA46AFDDA56C745A79DA90C9E19956ACB">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=204508453</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=204508483</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBXD30BD67F907345C8BCD4B1A6EB9DABC3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)
Mesh = Handle:WaitForChild(&quot;Mesh&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)
RunService = game:GetService(&quot;RunService&quot;)

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.Locked = true
BasePart.CanCollide = true
BasePart.Anchored = false

BaseLaser = BasePart:Clone()
BaseLaser.Name = &quot;Laser&quot;
BaseLaser.BrickColor = BrickColor.new(&quot;Really red&quot;)
BaseLaser.Material = Enum.Material.CorrodedMetal
BaseLaser.Size = Vector3.new(1, 1, 1)
BaseLaser.CanCollide = false
BaseLaserMesh = Instance.new(&quot;CylinderMesh&quot;)
BaseLaserMesh.Parent = BaseLaser

ProjectileNames = {&quot;Water&quot;, &quot;Arrow&quot;, &quot;Projectile&quot;, &quot;Effect&quot;, &quot;Rail&quot;, &quot;Laser&quot;, &quot;Bullet&quot;}

DefaultDistance = 25
MaxDistance = 200

MaxChargeTime = 5
ChargeTick = 0

DefaultCharge = 25
MaxCharge = 100

DefaultSize = 0.25
MaxSize = 1

DefaultDamage = 5
MaxDamage = 20

MaxFireTime = 3

DefaultReloadTime = 1
MaxReloadTime = 5

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Mesh.VertexColor = Vector3.new(1, 1, 1)
Tool.Enabled = true

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function CheckTableForString(Table, String)
&#9;for i, v in pairs(Table) do
&#9;&#9;if string.lower(v) == string.lower(String) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function Clamp(Number, Min, Max)
&#9;return math.max(math.min(Max, Number), Min)
end

function GetPercentage(Start, End, Number)
&#9;return (((Number - Start) / (End - Start)) * 100)
end

function Round(Number, RoundDecimal)
&#9;local WholeNumber, Decimal = math.modf(Number)
&#9;return ((Decimal &gt;= RoundDecimal and math.ceil(Number)) or (Decimal &lt; RoundDecimal and math.floor(Number)))
end

function CheckIntangible(Hit)
&#9;if Hit and Hit.Parent then
&#9;&#9;if Hit.Transparency &gt; 0.8 or CheckTableForString(ProjectileNames, Hit.Name) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
&#9;local RayHit, RayPos, RayNormal = game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
&#9;if RayHit and CheckIntangible(RayHit) then
&#9;&#9;if DelayIfHit then
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;&#9;RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
&#9;end
&#9;return RayHit, RayPos, RayNormal
end

function PositionPart(cframe, x, y, z)
&#9;local PartCloneY = cframe
&#9;PartCloneY = cframe * CFrame.Angles(-math.rad(90), 0, 0)
&#9;PartCloneY = PartCloneY - PartCloneY.lookVector * y
&#9;local PartCloneZ = PartCloneY + cframe.lookVector * z
&#9;local PartCloneX = PartCloneZ * CFrame.Angles(0, math.rad(90), 0)
&#9;PartCloneX = PartCloneX - PartCloneX.lookVector * x
&#9;return PartCloneX * CFrame.Angles((math.pi / 2), 0, (math.pi / 2))
end

function HandleHit(Hit, Damage, StartPosition, TargetPosition)
&#9;if not Hit or not Hit.Parent then
&#9;&#9;return
&#9;end
&#9;local character = Hit.Parent
&#9;if character:IsA(&quot;Hat&quot;) or character:IsA(&quot;Tool&quot;) then
&#9;&#9;character = character.Parent
&#9;end
&#9;if character == Character then
&#9;&#9;return
&#9;end
&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not humanoid then
&#9;&#9;if StartPosition and TargetPosition then
&#9;&#9;&#9;local FirePart = BasePart:Clone()
&#9;&#9;&#9;FirePart.Name = &quot;Effect&quot;
&#9;&#9;&#9;FirePart.Size = Vector3.new(0.2, 0.2, 0.2)
&#9;&#9;&#9;FirePart.Transparency = 1
&#9;&#9;&#9;FirePart.CanCollide = false
&#9;&#9;&#9;FirePart.Anchored = true
&#9;&#9;&#9;local Fire = Instance.new(&quot;Fire&quot;)
&#9;&#9;&#9;Fire.Heat = 3
&#9;&#9;&#9;Fire.Size = 5
&#9;&#9;&#9;Fire.Enabled = true
&#9;&#9;&#9;Fire.Parent = FirePart
&#9;&#9;&#9;Debris:AddItem(FirePart, 5)
&#9;&#9;&#9;FirePart.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;FirePart.CFrame = CFrame.new(TargetPosition, StartPosition) * CFrame.Angles(0, (math.pi / 2), 0)
&#9;&#9;end
&#9;&#9;return
&#9;end
&#9;if humanoid.Health == 0 then
&#9;&#9;return
&#9;end
&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;if player and (not player.Neutral and player.TeamColor == Player.TeamColor) then
&#9;&#9;return
&#9;end
&#9;UntagHumanoid(humanoid)
&#9;TagHumanoid(humanoid, Player)
&#9;humanoid:TakeDamage(Damage)
&#9;if humanoid.Health == 0 then
&#9;&#9;for i, v in pairs(character:GetChildren()) do
&#9;&#9;&#9;if v:IsA(&quot;Hat&quot;) or v:IsA(&quot;Clothing&quot;) then
&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;elseif v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;v.BrickColor = BrickColor.new(&quot;Really black&quot;)
&#9;&#9;&#9;&#9;v.Material = Enum.Material.Slate
&#9;&#9;&#9;&#9;local Smoke = Instance.new(&quot;Smoke&quot;)
&#9;&#9;&#9;&#9;Smoke.Opacity = 0.25
&#9;&#9;&#9;&#9;Smoke.Size = 0.1
&#9;&#9;&#9;&#9;Smoke.RiseVelocity = 0
&#9;&#9;&#9;&#9;Smoke.Color = BrickColor.new(&quot;Really black&quot;).Color
&#9;&#9;&#9;&#9;Smoke.Enabled = true
&#9;&#9;&#9;&#9;Smoke.Parent = v
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function CheckIfAlive()
&#9;return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;ToolEquipped = true
end

function Unequipped()
&#9;ToolEquipped = false
&#9;MouseDown = false
end

function OnServerInvoke(player, mode, value)
&#9;if player == Player and ToolEquipped and value and CheckIfAlive() then
&#9;&#9;if mode == &quot;MouseClick&quot; then
&#9;&#9;&#9;local Down = value.Down
&#9;&#9;&#9;if Down and not MouseDown then
&#9;&#9;&#9;&#9;if not Tool.Enabled or not CheckIfAlive() or not ToolEquipped then
&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;MouseDown = true
&#9;&#9;&#9;&#9;ChargeTick = tick()
&#9;&#9;&#9;&#9;while MouseDown and ToolEquipped and CheckIfAlive() do
&#9;&#9;&#9;&#9;&#9;if (tick() - ChargeTick) &gt;= MaxChargeTime then
&#9;&#9;&#9;&#9;&#9;&#9;Mesh.VertexColor = Vector3.new(1, (math.random(0, 50) * 0.01), (math.random(0, 25) * 0.01))
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;wait(0.1)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;Mesh.VertexColor = Vector3.new(1, 1, 1)
&#9;&#9;&#9;elseif not Down and MouseDown then
&#9;&#9;&#9;&#9;MouseDown = false
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;Tool.Enabled = false
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;local CurrentCharge = math.abs(tick() - ChargeTick)
&#9;&#9;&#9;&#9;local ChargePercent = Clamp(GetPercentage(0, MaxChargeTime, CurrentCharge), 0, MaxCharge)
&#9;&#9;&#9;&#9;local ChargePercentToDecimal = (ChargePercent * 0.01)
&#9;&#9;&#9;&#9;local ChargeDistance = Clamp((MaxDistance * ChargePercentToDecimal), DefaultDistance, MaxDistance)
&#9;&#9;&#9;&#9;local ActivationTime = (MaxFireTime * ChargePercentToDecimal)
&#9;&#9;&#9;&#9;local ActivationSize = Clamp((MaxSize * ChargePercentToDecimal), DefaultSize, MaxSize)
&#9;&#9;&#9;&#9;local ActivationDamage = Clamp((MaxDamage * ChargePercentToDecimal), DefaultDamage, MaxDamage)
&#9;&#9;&#9;&#9;local ChargeReload = Clamp((MaxReloadTime * ChargePercentToDecimal), DefaultReloadTime, MaxReloadTime)
&#9;&#9;&#9;&#9;local ActivationTick = tick()
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;local Laser = BaseLaser:Clone()
&#9;&#9;&#9;&#9;local LaserMesh = Laser.Mesh
&#9;&#9;&#9;&#9;LaserMesh.Scale = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;Debris:AddItem(Laser, (ActivationTime + 2))
&#9;&#9;&#9;&#9;Laser.Parent = Handle
&#9;&#9;&#9;&#9;local LaserWeld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;&#9;LaserWeld.Part0 = Handle
&#9;&#9;&#9;&#9;LaserWeld.Part1 = Laser
&#9;&#9;&#9;&#9;LaserWeld.Parent = Laser
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;local TempLaser = Laser:Clone()
&#9;&#9;&#9;&#9;local TempLaserMesh = TempLaser.Mesh
&#9;&#9;&#9;&#9;local TempLaserWeld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;&#9;TempLaserWeld.Part0 = Handle
&#9;&#9;&#9;&#9;TempLaserWeld.Part1 = TempLaser
&#9;&#9;&#9;&#9;TempLaserWeld.Parent = TempLaser
&#9;&#9;&#9;&#9;TempLaser.Parent = Laser
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;while (tick() - ActivationTick) &lt; ActivationTime and CheckIfAlive() and ToolEquipped and (Laser and Laser.Parent) do
&#9;&#9;&#9;&#9;&#9;local TickTime = (tick() - ActivationTick)
&#9;&#9;&#9;&#9;&#9;local ChargePercentage = GetPercentage(0, ActivationTime, (ActivationTime - TickTime))
&#9;&#9;&#9;&#9;&#9;local ChargePercentageToDecimal = (ChargePercentage * 0.01)
&#9;&#9;&#9;&#9;&#9;local ChargeSize = (ActivationSize * ChargePercentageToDecimal)
&#9;&#9;&#9;&#9;&#9;local ChargeDamage = Clamp((ActivationDamage * ChargePercentageToDecimal), DefaultDamage, MaxDamage)
&#9;&#9;&#9;&#9;&#9;local ChargeTransparency = (1 - ChargePercentageToDecimal)
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local StartPosition = PositionPart(Handle.CFrame, 0.25, -(Handle.Size.Y / 2), 0)
&#9;&#9;&#9;&#9;&#9;local TargetPosition = InvokeClient(&quot;MousePosition&quot;)
&#9;&#9;&#9;&#9;&#9;local Direction = CFrame.new(StartPosition.p, TargetPosition).lookVector
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local TotalDistance = 0
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local RayHit, RayPos, RayNormal = CastRay(StartPosition.p, Direction, ChargeDistance, {Character}, false)
&#9;&#9;&#9;&#9;&#9;TotalDistance = (TotalDistance + (StartPosition.p - RayPos).magnitude)
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;if RayHit then
&#9;&#9;&#9;&#9;&#9;&#9;if TotalDistance &lt; ChargeDistance and RayHit.Reflectance &gt;= 0.5 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;HandleHit(RayHit, ChargeDamage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local ReflectedDirection = (Direction - 2 * Direction:Dot(RayNormal) * RayNormal)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local RayHit2, RayPos2, RayNormal2 = CastRay(RayPos, ReflectedDirection, (ChargeDistance - TotalDistance), {Character}, false)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if RayHit2 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;HandleHit(RayHit2, ChargeDamage, RayPos, RayPos2)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local TempDistance = (RayPos - RayPos2).magnitude
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TotalDistance = (TotalDistance + TempDistance)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Vec = (RayPos - RayPos2)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Pos = (CFrame.new(RayPos) * CFrame.new(0, 0, 0)).p
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local NewCFrame = CFrame.new(Pos, (Pos + Vec))
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TempLaserWeld.C0 = Handle.CFrame:toObjectSpace(NewCFrame) * CFrame.new(0, 0, (TempDistance / 2)) * CFrame.Angles((math.pi / 2), 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TempLaserWeld.C1 = CFrame.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TempLaser.Transparency = Laser.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TempLaserMesh.Scale = Vector3.new(ChargeSize, TempDistance, ChargeSize)
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if ChargeTransparency &lt; 0.75 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;HandleHit(RayHit, ChargeDamage, StartPosition.p, RayPos)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;HandleHit(RayHit, ChargeDamage)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TempLaser.Transparency = 1
&#9;&#9;&#9;&#9;&#9;&#9;&#9;LaserMesh.Scale = Vector3.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;&#9;local Distance = (StartPosition.p - RayPos).magnitude
&#9;&#9;&#9;&#9;&#9;local Vec = (StartPosition.p - RayPos)
&#9;&#9;&#9;&#9;&#9;local Pos = (StartPosition * CFrame.new(0, 0, 0)).p
&#9;&#9;&#9;&#9;&#9;local NewCFrame = CFrame.new(Pos, (Pos + Vec))
&#9;&#9;&#9;&#9;&#9;LaserWeld.C0 = Handle.CFrame:toObjectSpace(NewCFrame) * CFrame.new(0, 0, (Distance / 2)) * CFrame.Angles((math.pi / 2), 0, 0)
&#9;&#9;&#9;&#9;&#9;LaserWeld.C1 = CFrame.new(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;LaserMesh.Scale = Vector3.new(ChargeSize, Distance, ChargeSize)
&#9;&#9;&#9;&#9;&#9;Laser.Transparency = ChargeTransparency
&#9;&#9;&#9;&#9;&#9;wait(0.01)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if Laser and Laser.Parent then
&#9;&#9;&#9;&#9;&#9;Laser:Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;wait(ChargeReload)
&#9;&#9;&#9;&#9;
&#9;&#9;&#9;&#9;Tool.Enabled = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX575AF44127854505810184E2BF3DDDB8">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ToolEquipped = false

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({ObjectLocalTransparencyModifier}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;Animations = {}
end

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function OnClientInvoke(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;SetLocalTransparencyModifier&quot; and Value and ToolEquipped then
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ObjectFound = false
&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;if v == Value then
&#9;&#9;&#9;&#9;&#9;ObjectFound = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not ObjectFound then
&#9;&#9;&#9;&#9;table.insert(LocalObjects, Value)
&#9;&#9;&#9;&#9;if ObjectLocalTransparencyModifier then
&#9;&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.LocalTransparencyModifier = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(LocalObjects, i)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ClientControl.OnClientInvoke = OnClientInvoke</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX3EA3A2874AF44783A1FDE680DAF15206">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX01C64094BBB94926B7695D7726F1DCF8">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-3.51640749</X>
					<Y>29.9175663</Y>
					<Z>18.777544</Z>
					<R00>0.391538054</R00>
					<R01>-0.31468752</R01>
					<R02>0.864678979</R02>
					<R10>-0</R10>
					<R11>0.939703107</R11>
					<R12>0.341991454</R12>
					<R20>-0.920161963</R20>
					<R21>-0.133902669</R21>
					<R22>0.367929488</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-5.24576521</X>
					<Y>29.2335835</Y>
					<Z>18.0416851</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>