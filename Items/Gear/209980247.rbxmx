<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX114B890144B840D8A0F6DFA8B9C78866">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.400000006</Y>
				<Z>0.75</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">AssassinCrossbow</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=209276071</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX569A8BF350B14829B0291DE9BF7DF0A4">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.0800266266</X>
					<Y>32.3294907</Y>
					<Z>0.182870865</Z>
					<R00>0.258819103</R00>
					<R01>-1.49011612e-008</R01>
					<R02>0.965925574</R02>
					<R10>-2.86540924e-009</R10>
					<R11>0.999999642</R11>
					<R12>-2.98023224e-008</R12>
					<R20>-0.965925694</R20>
					<R21>7.4505806e-009</R21>
					<R22>0.258819103</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>3.5</X>
					<Y>0.5</Y>
					<Z>3.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX662D0F85B1954D6D96215957399BA29B">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=209275932</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=209276006</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX2B91DD9FBCB04282BCA3E55B37E9B165">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=209527634</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX9C3F9D1CEA474A75BEC2B1F6D237B368">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Fire</string>
					<float name="Pitch">1.10000002</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=209527622</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX914070323E8E4D1F9355DF75EEBA9EA8">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=193427897</url></Content>
				<string name="Name">StealthPose</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX4C6771442D684EABA06814C4CC50A6DA">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=187825276</url></Content>
				<string name="Name">IdlePose</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX567484CCC7B64BB3B73919838B40065F">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=193342492</url></Content>
				<string name="Name">Release</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXE1194548F60A42A5BB1CF89DCEFFC7F9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ToolEquipped = false

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;Animations = {}
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function OnClientInvoke(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(Value)
&#9;elseif Mode == &quot;SetLocalTransparencyModifier&quot; and Value and ToolEquipped then
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ObjectFound = false
&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;if v == Value then
&#9;&#9;&#9;&#9;&#9;ObjectFound = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not ObjectFound then
&#9;&#9;&#9;&#9;table.insert(LocalObjects, Value)
&#9;&#9;&#9;&#9;if ObjectLocalTransparencyModifier then
&#9;&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.LocalTransparencyModifier = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(LocalObjects, i)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ClientControl.OnClientInvoke = OnClientInvoke</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX56A6A486B7304E69A99872C60B09963D">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)
Mesh = Handle:WaitForChild(&quot;Mesh&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

BaseUrl = &quot;http://www.roblox.com/asset/?id=&quot;

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Material = Enum.Material.Plastic
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true

MeshData = {
&#9;CrossbowAndArrow = 209275932,
&#9;Crossbow = 209275901,
&#9;Arrow = 209275768,
&#9;Texture = 209276006
}

for i, v in pairs(MeshData) do
&#9;MeshData[i] = (BaseUrl .. tostring(v))
end

BaseArrow = BasePart:Clone()
BaseArrow.Name = &quot;Arrow&quot;
BaseArrow.Size = Vector3.new(0.5, 0.2, 2)
ArrowMesh = Instance.new(&quot;SpecialMesh&quot;)
ArrowMesh.MeshType = Enum.MeshType.FileMesh
ArrowMesh.MeshId = MeshData.Arrow
ArrowMesh.TextureId = MeshData.Texture
ArrowMesh.Scale = Vector3.new(1, 1, 1)
ArrowMesh.VertexColor = Vector3.new(1, 1, 1)
ArrowMesh.Parent = BaseArrow

Animations = {
&#9;IdlePose = {Animation = Tool:WaitForChild(&quot;IdlePose&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
&#9;StealthPose = {Animation = Tool:WaitForChild(&quot;StealthPose&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
&#9;Release = {Animation = Tool:WaitForChild(&quot;Release&quot;), FadeTime = nil, Weight = nil, Speed = 2, Duration = nil}
}

Sounds = {
&#9;Fire = Handle:WaitForChild(&quot;Fire&quot;),
&#9;Hit = Handle:WaitForChild(&quot;Hit&quot;),
}

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Range = 350
FireRate = 1

Damage = {
&#9;Min = 15,
&#9;Max = 45
}

Multiplier = 1.25

Parts = {}

Rate = (1 / 60)

BarrelOffset = Vector3.new(-0.05, 0.5, -1.5)
WindVec = Vector3.new(2, -1, 1).unit

Gravity = 196.20
ProjectileNames = {&quot;Water&quot;, &quot;Arrow&quot;, &quot;Projectile&quot;, &quot;Effect&quot;, &quot;Rail&quot;, &quot;Laser&quot;, &quot;Bullet&quot;}

MouseDown = false
ToolEquipped = false

Tool.Enabled = true

function GetVector(cframe, Direction)
&#9;local px, py, pz, xx, yx, zx, xy, yy, zy, xz, yz, zz = cframe:components()
&#9;
&#9;local Position = Vector3.new(px, py, pz)
&#9;local Right = Vector3.new(xx, xy, xz)
&#9;local Top = Vector3.new(yx, yy, yz)
&#9;local Back = Vector3.new(zx, zy, zz)
&#9;
&#9;return (
&#9;&#9;(Direction == Enum.NormalId.Top and Top) or
&#9;&#9;(Direction == Enum.NormalId.Back and Back) or
&#9;&#9;(Direction == Enum.NormalId.Right and Right)
&#9;)
end

function IsTeamMate(Player1, Player2)
&#9;return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function Clamp(Number, Min, Max)
&#9;return math.max(math.min(Max, Number), Min)
end

function GetPercentage(Start, End, Number)
&#9;return (((Number - Start) / (End - Start)) * 100)
end

function Round(Number, RoundDecimal)
&#9;local WholeNumber, Decimal = math.modf(Number)
&#9;return ((Decimal &gt;= RoundDecimal and math.ceil(Number)) or (Decimal &lt; RoundDecimal and math.floor(Number)))
end

function CheckTableForString(Table, String)
&#9;for i, v in pairs(Table) do
&#9;&#9;if string.lower(v) == string.lower(String) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function CheckIntangible(Hit)
&#9;if Hit and Hit.Parent then
&#9;&#9;if Hit.Transparency &gt; 0.8 or CheckTableForString(ProjectileNames, Hit.Name) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function CastRay(StartPos, Vec, Length, IgnoreList, DelayIfHit)
&#9;local RayHit, RayPos, RayNormal = game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), IgnoreList)
&#9;if RayHit and CheckIntangible(RayHit) then
&#9;&#9;if DelayIfHit then
&#9;&#9;&#9;wait()
&#9;&#9;end
&#9;&#9;RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), IgnoreList, DelayIfHit)
&#9;end
&#9;return RayHit, RayPos, RayNormal
end

function DrawBeam(StartPos, EndPos, Color, FadeDelay)
&#9;local Distance = (StartPos - EndPos).magnitude
&#9;local Laser = BasePart:Clone()
&#9;Laser.Name = &quot;Effect&quot;
&#9;Laser.Size = Vector3.new(0.2, 0.2, 0.2)
&#9;Laser.Transparency = 5
&#9;Laser.BrickColor = Color
&#9;Laser.Anchored = true
&#9;Laser.CanCollide = false
&#9;local Mesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;Mesh.MeshType = Enum.MeshType.Head
&#9;Mesh.Scale = Vector3.new(1, (Distance * 5), 1)
&#9;Mesh.Parent = Laser
&#9;Laser.CFrame = CFrame.new(StartPos, EndPos) * CFrame.new(0, 0, (-Distance / 2)) * CFrame.Angles((math.pi / 2), 0, 0)
&#9;Debris:AddItem(Laser, (FadeDelay * 3))
&#9;Laser.Parent = game:GetService(&quot;Workspace&quot;)
&#9;local Frames = math.floor(FadeDelay / Rate)
&#9;for Frame = 1, Frames do
&#9;&#9;wait(Rate)
&#9;&#9;local Percent = (Frame / Frames)
&#9;&#9;Laser.CFrame = Laser.CFrame + WindVec * Rate
&#9;&#9;Laser.Transparency = (0.5 + (Percent * 0.5))
&#9;end
&#9;wait(1)
&#9;if Laser and Laser.Parent then
&#9;&#9;Laser:Destroy()
&#9;end
end

function Fire(StartPos, TargetPos)
&#9;local FakeStartPos = (Handle.CFrame * CFrame.new(BarrelOffset)).p
&#9;local Vec = (TargetPos - StartPos).unit
&#9;local Drop = false
&#9;local RayHit, RayPos, RayNormal = CastRay(StartPos, Vec, Range, {Character}, false)
&#9;local FakeVec = (RayPos - FakeStartPos).unit
&#9;local Arrow = BaseArrow:Clone()
&#9;if RayHit then
&#9;&#9;local Distance = (StartPos - RayPos).magnitude
&#9;&#9;local DamageValue = Round(Clamp(GetPercentage(0, (Range / 2), Distance), Damage.Min, Damage.Max), 0.5)
&#9;&#9;DamageValue = ((RayHit.Name == &quot;Head&quot; and (DamageValue * Multiplier)) or DamageValue)
&#9;&#9;local character = RayHit.Parent
&#9;&#9;if character:IsA(&quot;Hat&quot;) or character:IsA(&quot;Tool&quot;) then
&#9;&#9;&#9;character = character.Parent
&#9;&#9;end
&#9;&#9;if character == Character then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;&#9;if player and IsTeamMate(Player, player) then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;humanoid:TakeDamage(DamageValue)
&#9;&#9;end
&#9;&#9;local HitSound = Sounds.Hit:Clone()
&#9;&#9;HitSound.Pitch = (math.random(80, 123) / 100)
&#9;&#9;HitSound:Play()
&#9;&#9;Arrow.CanCollide = false
&#9;&#9;local NewCF = CFrame.new(RayPos, (RayPos + FakeVec)) * CFrame.new(0, 0, (0.9 + (math.random(0, 1) * 0.4)))
&#9;&#9;Arrow.CFrame = NewCF
&#9;&#9;local StickWeld = Instance.new(&quot;Weld&quot;)
&#9;&#9;StickWeld.Part0 = RayHit
&#9;&#9;StickWeld.Part1 = Arrow
&#9;&#9;StickWeld.C0 = (RayHit.CFrame:inverse() * NewCF)
&#9;&#9;StickWeld.C1 = (NewCF:inverse() * NewCF)
&#9;&#9;StickWeld.Parent = Arrow
&#9;else
&#9;&#9;Arrow.CFrame = CFrame.new(RayPos, (RayPos + FakeVec))
&#9;&#9;Arrow.Velocity = (FakeVec * 300)
&#9;end
&#9;
&#9;Debris:AddItem(Arrow, (10 + (math.random() * 10)))
&#9;Arrow.Parent = game:GetService(&quot;Workspace&quot;)

&#9;Spawn(function()
&#9;&#9;DrawBeam(FakeStartPos, RayPos, BrickColor.new(&quot;Institutional white&quot;), 0.5)
&#9;end)
&#9;
end

function CheckObjectClass(Object, ClassNames)
&#9;for i, v in pairs(ClassNames) do
&#9;&#9;if Object:IsA(v) then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function GetAllChildren(Parent, Classes)
&#9;Objects = {}
&#9;local function GetChildren(Parent)
&#9;&#9;for i, v in pairs(Parent:GetChildren()) do
&#9;&#9;&#9;if CheckObjectClass(v, Classes) then
&#9;&#9;&#9;&#9;table.insert(Objects, v)
&#9;&#9;&#9;end
&#9;&#9;&#9;GetChildren(v)
&#9;&#9;end
&#9;end
&#9;GetChildren(Parent)
&#9;return Objects
end

function SetUpPoseMonitor()
&#9;for i, v in pairs(Torso:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BodyGyro&quot;) then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;BodyGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;BodyGyro.maxTorque = Vector3.new(0, 0, 0)
&#9;BodyGyro.Parent = Torso
&#9;while BodyGyro and BodyGyro.Parent and ToolEquipped and CheckIfAlive() do
&#9;&#9;local Directions = {
&#9;&#9;&#9;Left = {Direction = (GetVector(Torso.CFrame, Enum.NormalId.Right) * -1), Length = (Torso.Size.X * 1.5)},
&#9;&#9;&#9;Right = {Direction = (GetVector(Torso.CFrame, Enum.NormalId.Right) * 1), Length = (Torso.Size.X * 1.5)},
&#9;&#9;&#9;Back = {Direction = (GetVector(Torso.CFrame, Enum.NormalId.Back) * 1), Length = (Torso.Size.Z * 1.5)},
&#9;&#9;}
&#9;&#9;local RayData = {}
&#9;&#9;for i, v in pairs(Directions) do
&#9;&#9;&#9;local RayHit, RayPos, RayNormal = CastRay(Torso.Position, v.Direction, v.Length, {Character}, false)
&#9;&#9;&#9;if RayHit then
&#9;&#9;&#9;&#9;table.insert(RayData, {RayHit = RayHit, RayPos = RayPos, RayNormal = RayNormal})
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;if #RayData &gt; 0 then
&#9;&#9;&#9;table.sort(RayData, (function(a, b)
&#9;&#9;&#9;&#9;return ((Torso.Position - a.RayPos).magnitude &lt; (Torso.Position - b.RayPos).magnitude)
&#9;&#9;&#9;end))
&#9;&#9;&#9;local RayInfo = RayData[1]
&#9;&#9;&#9;local Direction = (Torso.CFrame + RayInfo.RayNormal * 2).p
&#9;&#9;&#9;BodyGyro.cframe = CFrame.new(Torso.Position, Vector3.new(Direction.X, Torso.Position.Y, Direction.Z))
&#9;&#9;&#9;if BodyGyro.maxTorque == Vector3.new(0, 0, 0) then
&#9;&#9;&#9;&#9;for i, v in pairs(GetAllChildren(Character, {&quot;BasePart&quot;})) do
&#9;&#9;&#9;&#9;&#9;if v.Name ~= &quot;HumanoidRootPart&quot; then
&#9;&#9;&#9;&#9;&#9;&#9;table.insert(Parts, {Part = v, BrickColor = v.BrickColor})
&#9;&#9;&#9;&#9;&#9;&#9;v.BrickColor = RayInfo.RayHit.BrickColor
&#9;&#9;&#9;&#9;&#9;&#9;v.Transparency = ((v.Name == &quot;Head&quot; and 1) or 0.95)
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;InvokeClient(&quot;DisableJump&quot;, true)
&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.IdlePose)
&#9;&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.StealthPose)
&#9;&#9;&#9;end
&#9;&#9;&#9;BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
&#9;&#9;else
&#9;&#9;&#9;if BodyGyro.maxTorque == Vector3.new(math.huge, math.huge, math.huge) then
&#9;&#9;&#9;&#9;for i, v in pairs(Parts) do
&#9;&#9;&#9;&#9;&#9;if v and v.Part and v.Part.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;v.Part.BrickColor = v.BrickColor
&#9;&#9;&#9;&#9;&#9;&#9;v.Part.Transparency = 0
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;Parts = {}
&#9;&#9;&#9;&#9;InvokeClient(&quot;DisableJump&quot;, false)
&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.StealthPose)
&#9;&#9;&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.IdlePose)
&#9;&#9;&#9;end
&#9;&#9;&#9;BodyGyro.maxTorque = Vector3.new(0, 0, 0)&#9;&#9;
&#9;&#9;end
&#9;&#9;wait(Rate)
&#9;end
end

function CheckIfAlive()
&#9;return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Head and Head.Parent and Torso and Torso.Parent) and true) or false)
end

function Activated()
&#9;if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Tool.Enabled = false
&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Release)
&#9;Mesh.MeshId = MeshData.Crossbow
&#9;Sounds.Fire:Play()
&#9;Fire(Handle.Position, InvokeClient(&quot;MousePosition&quot;))
&#9;wait(FireRate)
&#9;Mesh.MeshId = MeshData.CrossbowAndArrow
&#9;Tool.Enabled = true
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Head = Character:FindFirstChild(&quot;Head&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;Spawn(function()
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.IdlePose)
&#9;end)
&#9;Spawn(function()
&#9;&#9;SetUpPoseMonitor()
&#9;end)
&#9;ToolEquipped = true
end

function Unequipped()
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;for i, v in pairs(Torso:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BodyGyro&quot;) then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Parts) do
&#9;&#9;if v and v.Part and v.Part.Parent then
&#9;&#9;&#9;v.Part.BrickColor = v.BrickColor
&#9;&#9;&#9;v.Part.Transparency = 0
&#9;&#9;end
&#9;end
&#9;Parts = {}
&#9;MouseDown = false
&#9;ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
&#9;if player == Player and ToolEquipped and value and CheckIfAlive() then
&#9;end
end

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ServerControl.OnServerInvoke = OnServerInvoke</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX28C791C6A82F40EAA9789844F1315AFE">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX7FB8870843C44598B78647A5ED1CEF26">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-1.9555757</X>
					<Y>34.1470337</Y>
					<Z>-2.67960858</Z>
					<R00>-0.914954782</R00>
					<R01>0.263637453</R01>
					<R02>-0.305537283</R02>
					<R10>-0</R10>
					<R11>0.757111788</R11>
					<R12>0.653285325</R12>
					<R20>0.403556347</R20>
					<R21>0.597726524</R21>
					<R22>-0.692723036</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.928976178</X>
					<Y>31.9520073</Y>
					<Z>-0.352072239</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>