<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX7B072E095E3244F1BCA0CDBA1B818D12">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-2.375</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">RidiculousSharkSword</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=211684007</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX2B880023947440B4BBD87B16A18FDD32">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-36.7786713</X>
					<Y>38.1456299</Y>
					<Z>3.99694633</Z>
					<R00>0.612995982</R00>
					<R01>-0.547850013</R01>
					<R02>-0.569294631</R02>
					<R10>0.000133286536</R10>
					<R11>0.720619142</R11>
					<R12>-0.693330884</R12>
					<R20>0.790086031</R20>
					<R21>0.424933195</R21>
					<R22>0.441809684</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.25</X>
					<Y>8</Y>
					<Z>0.75</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX05F8A53826A44DE58534E7F85AAC9E0B">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=211683906</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=211683941</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Fire" referent="RBXB440AD5DD8BB4FAB9BF0EC257E3320E5">
				<Properties>
					<Color3 name="Color">4278233855</Color3>
					<bool name="Enabled">false</bool>
					<string name="Name">Fire</string>
					<Color3 name="SecondaryColor">4278190335</Color3>
					<float name="heat_xml">25</float>
					<float name="size_xml">5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX2627B6CE99E44DBB864E4A79248695B1">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Bite</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=212200200</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX06D031E6F8914B8E9DD5DD378AC80A69">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Slash</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
					<float name="Volume">0.699999988</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXB677E69EA2454E1E8361926394685B56">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXE29DF0F4BD1C4743A0273F5EE20F3DB5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)
Fire = Handle:WaitForChild(&quot;Fire&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)
InsertService = game:GetService(&quot;InsertService&quot;)

BaseUrl = &quot;http://www.roblox.com/asset/?id=&quot;

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

TsunamiModel = InsertService:LoadAsset(212226090)
TsunamiWave = TsunamiModel:GetChildren()[1]:Clone()
if TsunamiModel and TsunamiModel.Parent then
&#9;TsunamiModel:Destroy()
end

Animations = {
&#9;LeftSlash = {Animation = Tool:WaitForChild(&quot;LeftSlash&quot;), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = 0.5, Damage = {Min = 15, Max = 20}},
&#9;RightSlash = {Animation = Tool:WaitForChild(&quot;RightSlash&quot;), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = 0.5, Damage = {Min = 15, Max = 20}},
&#9;Slash1 = {Animation = Tool:WaitForChild(&quot;Slash1&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.5, Damage = {Min = 20, Max = 25}},
&#9;Slash2 = {Animation = Tool:WaitForChild(&quot;Slash2&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.5, Damage = {Min = 20, Max = 30}},
&#9;Slash3 = {Animation = Tool:WaitForChild(&quot;Slash3&quot;), FadeTime = nil, Weight = nil, Speed = 3, Duration = 0.5, Damage = {Min = 25, Max = 35}},
&#9;Charge = {Animation = Tool:WaitForChild(&quot;Charge&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
&#9;Slash = Handle:WaitForChild(&quot;Slash&quot;),
&#9;Bite = Handle:WaitForChild(&quot;Bite&quot;)
}

TouchDamage = {Min = 10, Max = 10}

Shark = BasePart:Clone()
Shark.Name = &quot;Shark&quot;
Shark.Size = Vector3.new(1, 2.2, 7)
SharkMesh = Instance.new(&quot;SpecialMesh&quot;)
SharkMesh.MeshType = Enum.MeshType.FileMesh
SharkMesh.MeshId = (BaseUrl .. &quot;82821384&quot;)
SharkMesh.TextureId = (BaseUrl .. &quot;82844051&quot;)
SharkMesh.Scale = Vector3.new(5, 5, 5)
SharkMesh.Parent = Shark

ToolEquipped = false
MouseDown = false
FullyCharged = false
SpecialActive = false
SpecialReloadTime = 20

Clicks = 0
FirstClick = false

Gravity = 196.20
Rate = (1 / 60)

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Fire.Enabled = false
Tool.Enabled = true

function RayCast(Position, Direction, MaxDistance, IgnoreList)
&#9;local IgnoreList = ((type(IgnoreList) == &quot;table&quot; and IgnoreList) or {IgnoreList})
&#9;return game:GetService(&quot;Workspace&quot;):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList)
end

function IsTeamMate(Player1, Player2)
&#9;return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function CheckTableForInstance(Table, Instance)
&#9;for i, v in pairs(Table) do
&#9;&#9;if v == Instance then
&#9;&#9;&#9;return true
&#9;&#9;end
&#9;end
&#9;return false
end

function Blow(Hit)
&#9;if not Hit or not Hit.Parent or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;
&#9;local character = Hit.Parent
&#9;
&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;if player and IsTeamMate(Player, player) then
&#9;&#9;return
&#9;end
&#9;
&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if character == Character or not humanoid or humanoid.Health == 0 then
&#9;&#9;return
&#9;end
&#9;
&#9;local RightArm = Character:FindFirstChild(&quot;Right Arm&quot;)
&#9;if not RightArm then
&#9;&#9;return
&#9;end
&#9;local RightGrip = RightArm:FindFirstChild(&quot;RightGrip&quot;)
&#9;if not RightGrip or (RightGrip.Part0 ~= RightArm and RightGrip.Part1 ~= RightArm) then
&#9;&#9;return
&#9;end
&#9;
&#9;UntagHumanoid(humanoid)
&#9;TagHumanoid(humanoid, Player)
&#9;
&#9;local DamageValue = ((CurrentAnimation and CurrentAnimation.Damage) or TouchDamage)
&#9;local DamageAmount = math.random(DamageValue.Min, DamageValue.Max)
&#9;
&#9;humanoid:TakeDamage(DamageAmount)
&#9;
end

function Attack(PossibleAnims, PossibleSounds)
&#9;if PossibleAnims and #PossibleAnims &gt; 0 then
&#9;&#9;if PossibleSounds and #PossibleSounds &gt; 0 then
&#9;&#9;&#9;PossibleSounds[math.random(1, #PossibleSounds)]:Play()
&#9;&#9;end 
&#9;&#9;CurrentAnimation = PossibleAnims[math.random(1, #PossibleAnims)]
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, CurrentAnimation)
&#9;&#9;if CurrentAnimation.Duration and CurrentAnimation.Duration &gt; 0 then
&#9;&#9;&#9;wait(CurrentAnimation.Duration)
&#9;&#9;&#9;CurrentAnimation = nil
&#9;&#9;end
&#9;end
end

function Activated()
&#9;if not Tool.Enabled or not ToolEquipped then
&#9;&#9;return
&#9;end
&#9;Clicks = (Clicks + 1)
&#9;if not FirstClick then
&#9;&#9;FirstClick = true
&#9;&#9;local CurrentlyEquipped = true
&#9;&#9;ToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;&#9;CurrentlyEquipped = false
&#9;&#9;end)
&#9;&#9;wait(0.15)
&#9;&#9;if ToolUnequipped then
&#9;&#9;&#9;ToolUnequipped:disconnect()
&#9;&#9;end
&#9;&#9;if not CurrentlyEquipped then
&#9;&#9;&#9;return
&#9;&#9;end
&#9;&#9;Tool.Enabled = false
&#9;&#9;local AttackAnims = {}
&#9;&#9;local AttackSounds = {}
&#9;&#9;if MouseDown and Clicks == 1 and not SpecialActive then
&#9;&#9;&#9;AttackAnims = {Animations.Charge}
&#9;&#9;&#9;Spawn(function()
&#9;&#9;&#9;&#9;if not SpecialActive then
&#9;&#9;&#9;&#9;&#9;local ChargeTick = tick()
&#9;&#9;&#9;&#9;&#9;while MouseDown and ToolEquipped and CheckIfAlive() and not FullyCharged do
&#9;&#9;&#9;&#9;&#9;&#9;if (tick() - ChargeTick) &gt;= 3 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;FullyCharged = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Fire.Enabled = true
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;wait()
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;&#9;else
&#9;&#9;&#9;AttackSounds = {Sounds.Slash}
&#9;&#9;&#9;AttackAnims = {Animations.LeftSlash, Animations.RightSlash, Animations.Slash1, Animations.Slash2, Animations.Slash3}
&#9;&#9;end
&#9;&#9;Attack(AttackAnims, AttackSounds)
&#9;&#9;FirstClick = false
&#9;&#9;Clicks = 0
&#9;&#9;Tool.Enabled = true
&#9;end
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;local CurrentlyEquipped = true
&#9;EquippedToolUnequipped = Tool.Unequipped:connect(function()
&#9;&#9;CurrentlyEquipped = false
&#9;end)
&#9;if EquippedToolUnequipped then
&#9;&#9;EquippedToolUnequipped:disconnect()
&#9;end
&#9;if not CurrentlyEquipped then
&#9;&#9;return
&#9;end
&#9;ToolEquipped = true
end

function Unequipped()
&#9;Clicks = 0
&#9;FirstClick = false
&#9;FullyCharged = true
&#9;Fire.Enabled = false
&#9;for i, v in pairs({EquippedToolUnequipped, ToolUnequipped}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs(Animations) do
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, v)
&#9;end
&#9;ToolEquipped = false
end

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
&#9;if player == Player and ToolEquipped and CheckIfAlive() then
&#9;&#9;if Mode == &quot;MouseClick&quot; then
&#9;&#9;&#9;local Down = Value.Down
&#9;&#9;&#9;if Down and not MouseDown then
&#9;&#9;&#9;&#9;MouseDown = true
&#9;&#9;&#9;&#9;Activated()
&#9;&#9;&#9;elseif not Down and MouseDown then
&#9;&#9;&#9;&#9;MouseDown = false
&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.Charge)
&#9;&#9;&#9;&#9;if FullyCharged and not SpecialActive then
&#9;&#9;&#9;&#9;&#9;if CurrentAnimation == Animations.Charge and FullyCharged then
&#9;&#9;&#9;&#9;&#9;&#9;SpecialActive = true
&#9;&#9;&#9;&#9;&#9;&#9;FullyCharged = false
&#9;&#9;&#9;&#9;&#9;&#9;Fire.Enabled = false
&#9;&#9;&#9;&#9;&#9;&#9;local RayHit, RayPos, RayNormal = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2), {Character})
&#9;&#9;&#9;&#9;&#9;&#9;if not RayHit then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;local Duration = 5
&#9;&#9;&#9;&#9;&#9;&#9;Humanoid.WalkSpeed = 0
&#9;&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;DisableJump&quot;, true)
&#9;&#9;&#9;&#9;&#9;&#9;Character.Archivable = true
&#9;&#9;&#9;&#9;&#9;&#9;local CharacterClone = Character:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;Character.Archivable = false
&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(CharacterClone:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v:IsA(&quot;Tool&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;local AttackSounds = {}
&#9;&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.Charge)
&#9;&#9;&#9;&#9;&#9;&#9;local AttackAnims = {}
&#9;&#9;&#9;&#9;&#9;&#9;Attack(AttackAnims, AttackSounds)
&#9;&#9;&#9;&#9;&#9;&#9;wait(0.125)
&#9;&#9;&#9;&#9;&#9;&#9;if not ToolEquipped then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;local TsunamiWaveClone = TsunamiWave:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;TsunamiWaveClone.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not Hit or not Hit.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local character = Hit.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character:IsA(&quot;Hat&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;character = Hit.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character == Character then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if player and IsTeamMate(Player, player) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(30)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;local Offset = (Torso.CFrame - Vector3.new(0, ((CharacterClone:GetModelSize().Y / 2) + (TsunamiWaveClone.Size.Y / 2) - 0), 0)) + Vector3.new(0, 1, 0)
&#9;&#9;&#9;&#9;&#9;&#9;Offset = CFrame.new(Offset.p, (Torso.CFrame + Torso.CFrame.lookVector * 2).p) * CFrame.Angles((math.pi / 2), -(math.pi / 2), 0)
&#9;&#9;&#9;&#9;&#9;&#9;local PX, PY, PZ, XX, XY, XZ, YX, YY, YZ, ZX, ZY, ZZ = Offset:components()
&#9;&#9;&#9;&#9;&#9;&#9;Offset = CFrame.new(PX, PY, PZ, XX, XY, XZ, 0, YY, YZ, ZX, ZY, ZZ) * CFrame.Angles(math.pi, math.pi, 0)
&#9;&#9;&#9;&#9;&#9;&#9;TsunamiWaveClone.CFrame = Offset
&#9;&#9;&#9;&#9;&#9;&#9;local Weld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;Weld.Part0 = Torso
&#9;&#9;&#9;&#9;&#9;&#9;Weld.Part1 = TsunamiWaveClone
&#9;&#9;&#9;&#9;&#9;&#9;Weld.C0 = CFrame.new(0, -((TsunamiWaveClone.Size.Y / 2) + (CharacterClone:GetModelSize().Y / 2) - 0), 6) * CFrame.Angles(0, -(math.pi / 2), 0)
&#9;&#9;&#9;&#9;&#9;&#9;Weld.Parent = TsunamiWaveClone
&#9;&#9;&#9;&#9;&#9;&#9;Debris:AddItem(TsunamiWaveClone, Duration)
&#9;&#9;&#9;&#9;&#9;&#9;local BodyPosition = Instance.new(&quot;BodyPosition&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.maxForce = Vector3.new(math.huge, math.huge, 0)
&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.position = Offset.p
&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.Parent = TsunamiWaveClone
&#9;&#9;&#9;&#9;&#9;&#9;local BodyGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.maxTorque = Vector3.new(0, math.huge, 0)
&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.cframe = Offset * CFrame.Angles(0, 0, 0)
&#9;&#9;&#9;&#9;&#9;&#9;local PlayerGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;PlayerGyro.maxTorque = Vector3.new(math.huge, 0, math.huge)
&#9;&#9;&#9;&#9;&#9;&#9;Debris:AddItem(PlayerGyro, Duration)
&#9;&#9;&#9;&#9;&#9;&#9;PlayerGyro.Parent = Torso
&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.Parent = TsunamiWaveClone
&#9;&#9;&#9;&#9;&#9;&#9;TsunamiWaveClone.CFrame = Offset
&#9;&#9;&#9;&#9;&#9;&#9;TsunamiWaveClone.Anchored = false
&#9;&#9;&#9;&#9;&#9;&#9;TsunamiWaveClone.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;local SharksAvailable = 5
&#9;&#9;&#9;&#9;&#9;&#9;local SharkRadius = {
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Min = Vector3.new((TsunamiWave.Size.X + 10), (TsunamiWave.Size.Y + 10), (TsunamiWave.Size.Z + 10)),
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Max = Vector3.new((TsunamiWave.Size.X + 10), (TsunamiWave.Size.Y / 2), (TsunamiWave.Size.Z + 10))
&#9;&#9;&#9;&#9;&#9;&#9;}
&#9;&#9;&#9;&#9;&#9;&#9;local Humanoids = {}
&#9;&#9;&#9;&#9;&#9;&#9;local IgnoreObjects = {Character, TsunamiWaveClone}
&#9;&#9;&#9;&#9;&#9;&#9;while TsunamiWaveClone and TsunamiWaveClone.Parent and ToolEquipped do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if math.abs(TsunamiWaveClone.Position.Y - Offset.p.Y + 1.5) &lt; TsunamiWaveClone.Size.Y then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TsunamiWaveClone.CFrame = TsunamiWaveClone.CFrame + Vector3.new(0, (0.01 / 5 / Rate), 0)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.position = TsunamiWaveClone.Position
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if SharksAvailable &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Parts = game:GetService(&quot;Workspace&quot;):FindPartsInRegion3WithIgnoreList(Region3.new((TsunamiWaveClone.Position - SharkRadius.Min), (TsunamiWaveClone.Position + SharkRadius.Max)), IgnoreObjects, 100)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local CurrentHumanoids = {}
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i, v in pairs(Parts) do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local character = v.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character:IsA(&quot;Hat&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;character = character.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not player or (player and not IsTeamMate(Player, player)) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 and not CheckTableForInstance(Humanoids, humanoid) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(CurrentHumanoids, humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(Humanoids, humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if #CurrentHumanoids &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for i = 1, #CurrentHumanoids do
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if SharksAvailable &lt;= 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Index = math.random(1, #CurrentHumanoids)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local humanoid = CurrentHumanoids[Index]
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if humanoid and humanoid.Parent and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local character = humanoid.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local head = character:FindFirstChild(&quot;Head&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if head then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SharksAvailable = (SharksAvailable - 1)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(CurrentHumanoids, Index)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.insert(IgnoreObjects, character)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local SharkClone = Shark:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SharkClone.CanCollide = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Bite = Sounds.Bite:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Bite.Parent = SharkClone
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SharkClone.CFrame = TsunamiWaveClone.CFrame
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Direction = CFrame.new(SharkClone.Position, head.Position)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SharkClone.CFrame = Direction
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Velocity = Direction.lookVector * 100
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Mass = (Shark:GetMass() * Gravity)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BodyGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.cframe = Direction
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyGyro.Parent = SharkClone
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local BodyVelocity = Instance.new(&quot;BodyVelocity&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.maxForce = Vector3.new(Mass, Mass, Mass)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.velocity = Velocity
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity.Parent = SharkClone
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SharkClone.Velocity = Velocity
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Bitten = false
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SharkClone.Touched:connect(function(Hit)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if not Hit or not Hit.Parent or Bitten then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local character = Hit.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character:IsA(&quot;Hat&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;character = Hit.Parent
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if character == Character then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if player and IsTeamMate(Player, player) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Bitten = true
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;humanoid:TakeDamage(50)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if BodyVelocity and BodyVelocity.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyVelocity:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Bite:Play()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Debris:AddItem(SharkClone, 5)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SharkClone.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local NewPosition = (TsunamiWaveClone.CFrame + (TsunamiWaveClone.CFrame * CFrame.Angles(0, (math.pi / 2), 0)).lookVector * 2)
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TsunamiWaveClone.CFrame = NewPosition
&#9;&#9;&#9;&#9;&#9;&#9;&#9;BodyPosition.position = TsunamiWaveClone.Position
&#9;&#9;&#9;&#9;&#9;&#9;&#9;wait(Rate)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;if TsunamiWaveClone and TsunamiWaveClone.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;TsunamiWaveClone:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;Humanoid.WalkSpeed = 16
&#9;&#9;&#9;&#9;&#9;&#9;InvokeClient(&quot;DisableJump&quot;, false)
&#9;&#9;&#9;&#9;&#9;&#9;wait(SpecialReloadTime)
&#9;&#9;&#9;&#9;&#9;&#9;SpecialActive = false
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end)

Handle.Touched:connect(Blow)

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX4D8BEF566A724F6197932D7DB7025933">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=212175593</url></Content>
				<string name="Name">Charge</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX8B45A5AF71144EE8BFF2260011805867">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=212177755</url></Content>
				<string name="Name">Slash3</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX43295A87F21A4272887239DA97937599">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ToolEquipped = false

function SetAnimation(mode, value)
&#9;if mode == &quot;PlayAnimation&quot; and value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
&#9;&#9;table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
&#9;elseif mode == &quot;StopAnimation&quot; and value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function DisableJump(Boolean)
&#9;if PreventJump then
&#9;&#9;PreventJump:disconnect()
&#9;end
&#9;if Boolean then
&#9;&#9;PreventJump = Humanoid.Changed:connect(function(Property)
&#9;&#9;&#9;if Property ==  &quot;Jump&quot; then
&#9;&#9;&#9;&#9;Humanoid.Jump = false
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

function CheckIfAlive()
&#9;return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
&#9;Mouse.Move:connect(function()
&#9;&#9;InvokeServer(&quot;MouseMove&quot;, {Position = Mouse.Hit.p, Target = Mouse.Target})
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end&#9;Animations = {}
end

function InvokeServer(mode, value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(mode, value)
&#9;&#9;return ServerReturn
&#9;end)
end

function OnClientInvoke(mode, value)
&#9;if mode == &quot;PlayAnimation&quot; and value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, value)
&#9;elseif mode == &quot;StopAnimation&quot; and value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, value)
&#9;elseif mode == &quot;PlaySound&quot; and value then
&#9;&#9;value:Play()
&#9;elseif mode == &quot;StopSound&quot; and value then
&#9;&#9;value:Stop()
&#9;elseif mode == &quot;MousePosition&quot; then
&#9;&#9;return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
&#9;elseif mode == &quot;DisableJump&quot; then
&#9;&#9;DisableJump(value)
&#9;elseif mode == &quot;SetLocalTransparencyModifier&quot; and value and ToolEquipped then
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ObjectFound = false
&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;if v == value then
&#9;&#9;&#9;&#9;&#9;ObjectFound = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not ObjectFound then
&#9;&#9;&#9;&#9;table.insert(LocalObjects, value)
&#9;&#9;&#9;&#9;if ObjectLocalTransparencyModifier then
&#9;&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local CurrentTransparency = v.Object.LocalTransparencyModifier
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if ((not v.AutoUpdate and (CurrentTransparency == 1 or  CurrentTransparency == 0)) or v.AutoUpdate) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.LocalTransparencyModifier = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(LocalObjects, i)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX184C9A59C9B542F395F337907394DE4B">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=74894663</url></Content>
				<string name="Name">LeftSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX03C0E750B82F44F796D360BEC6D7AA82">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=74813494</url></Content>
				<string name="Name">RightSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXDD2F1165C0E64C55A2A5B325FC9C6208">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=212099530</url></Content>
				<string name="Name">Slash2</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX2317E63725BB48ABACF57B570E9071EA">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=212068929</url></Content>
				<string name="Name">Slash1</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX7157D35B66F9462B84576707B8DC251D">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-39.8240509</X>
					<Y>38.5576897</Y>
					<Z>0.56616658</Z>
					<R00>-0.757876217</R00>
					<R01>0.0340708941</R01>
					<R02>-0.651508152</R02>
					<R10>-1.86264537e-009</R10>
					<R11>0.998635411</R11>
					<R12>0.0522240587</R12>
					<R20>0.652398467</R20>
					<R21>0.0395793729</R21>
					<R22>-0.756841898</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-37.6349907</X>
					<Y>38.3822174</Y>
					<Z>3.10914707</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>