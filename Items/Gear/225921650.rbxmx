<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX06985A7814D24803B3E4FB51FA0B0E1B">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.0920474753</X>
				<Y>0.778598666</Y>
				<Z>5.42925775e-008</Z>
				<R00>2.2106228e-008</R00>
				<R01>-0.117404379</R01>
				<R02>0.993084192</R02>
				<R10>8.54181437e-008</R10>
				<R11>-0.993084192</R11>
				<R12>-0.117404379</R12>
				<R20>1</R20>
				<R21>8.74227766e-008</R21>
				<R22>-1.19248806e-008</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">OrbitalFluteStrike</string>
			<Content name="TextureId"><url>rbxassetid://223105379</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Script" referent="RBX242F4B237BB1462B81B75F43FC4D0A82">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Server</string>
				<ProtectedString name="Source"><![CDATA[local Tool = script.Parent
local Remote = Tool:WaitForChild("Remote")
local Handle = Tool:WaitForChild("Handle")

local FriendlyFire = false

local AttackAble = true
local AttackReloadTime = 25

--returns the wielding player of this tool
function getPlayer()
	local char = Tool.Parent
	return game:GetService("Players"):GetPlayerFromCharacter(char)
end

--helpfully checks a table for a specific value
function contains(t, v)
	for _, val in pairs(t) do
		if val == v then
			return true
		end
	end
	return false
end

--tags a human for the ROBLOX KO system
function tagHuman(human)
	local tag = Instance.new("ObjectValue")
	tag.Value = getPlayer()
	tag.Name = "creator"
	tag.Parent = human
	game:GetService("Debris"):AddItem(tag)
end

--used by checkTeams
function sameTeam(otherHuman)
	local player = getPlayer()
	local otherPlayer = game:GetService("Players"):GetPlayerFromCharacter(otherHuman.Parent)
	if player and otherPlayer then
		if player == otherPlayer then
			return true
		end
		if otherPlayer.Neutral then
			return false
		end
		return player.TeamColor == otherPlayer.TeamColor
	end
	return false
end

--use this to determine if you want this human to be harmed or not, returns boolean
function checkTeams(otherHuman)
	return not (sameTeam(otherHuman) and not FriendlyFire)
end

function getFlute()
	local root = Tool.Parent:FindFirstChild("HumanoidRootPart")
	if root then
		local flute = Handle:Clone()
		flute.CanCollide = true
		flute.Transparency = 0
		flute.Size = Vector3.new(1, 10, 1)
		flute.CFrame = CFrame.new(root.Position + Vector3.new(0, 1024, 0))
		flute.Mesh.Scale = Vector3.new(1, 1, 1)
		
		Instance.new("Fire", flute)
		
		flute.Parent = Tool.Parent
		return flute
	end
end

function globalWarn()
	local warning = Handle.Warning:Clone()
	warning.Parent = workspace
	warning:Play()
	game:GetService("Debris"):AddItem(warning)
end

function onLeftDown()
	if not AttackAble then return end
	
	AttackAble = false
	Handle.Transparency = 1
	delay(AttackReloadTime, function()
		AttackAble = true
		Handle.Transparency = 0
	end)
	
	globalWarn()
	
	local flute = getFlute()
	
	local touchedConnection
	
	local function onFluteTouched(part)
		local e = Instance.new("Explosion")
		e.Position = flute.Position
		e.BlastRadius = 12
		e.Hit:connect(function(part)
			if part.Parent and part.Parent:FindFirstChild("Humanoid") then
				local human = part.Parent.Humanoid
				tagHuman(human)
			end
		end)
		e.Parent = workspace
		
		flute.Anchored = true
		flute.CanCollide = false
		flute.Transparency = 1
		flute.Fire.Enabled = false
		
		flute.Explosion:Play()
		game:GetService("Debris"):AddItem(flute)
		
		touchedConnection:disconnect()
	end
	
	touchedConnection = flute.Touched:connect(onFluteTouched)
	
	Remote:FireClient(getPlayer(), "FluteLaunch", flute)
	Remote:FireClient(getPlayer(), "PlayAnimation", "FlutePlay")
end

function onRemote(player, func, ...)
	if player ~= getPlayer() then return end
	
	if func == "LeftDown" then
		onLeftDown()
	end
end

Remote.OnServerEvent:connect(onRemote)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXB6C62B38B3CC42D980F2784C39D289F2">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Client</string>
				<ProtectedString name="Source"><![CDATA[local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local Mouse = Player:GetMouse()
local Tool = script.Parent
local Remote = Tool:WaitForChild("Remote")
local Tracks = {}
local InputType = Enum.UserInputType
local RenderStepped = game:GetService("RunService").RenderStepped

local BeganConnection, EndedConnection

function playAnimation(animName, ...)
	if Tracks[animName] then
		Tracks[animName]:Play()
	else
		local anim = Tool:FindFirstChild(animName)
		if anim and Tool.Parent and Tool.Parent:FindFirstChild("Humanoid") then
			Tracks[animName] = Tool.Parent.Humanoid:LoadAnimation(anim)
			playAnimation(animName, ...)
		end
	end
end

function stopAnimation(animName)
	if Tracks[animName] then
		Tracks[animName]:Stop()
	end
end

function inputBegan(input)
	if input.UserInputType == InputType.MouseButton1 then
		Remote:FireServer("LeftDown")
	end
end

function inputEnded(input)
	if input.UserInputType == InputType.MouseButton1 then
		Remote:FireServer("LeftUp")
	end
end

function getFluteFrame(flute)
	return flute.CFrame * CFrame.Angles(-math.pi/2, 0, 0) * CFrame.new(0, 2, 8)
end

function fade(outTime, pauseTime, inTime)
	local sg = Instance.new("ScreenGui")
	sg.Parent = Player.PlayerGui
	
	local fg = Instance.new("Frame")
	fg.Size = UDim2.new(3, 0, 3, 0)
	fg.Position = UDim2.new(-1, 0, -1, 0)
	fg.BackgroundColor3 = Color3.new(0, 0, 0)
	fg.BackgroundTransparency = 1
	fg.Parent = sg
	
	spawn(function()
		local t = tick()
		
		while fg.BackgroundTransparency > 0 do
			local now = tick()
			local dt = now - t
			t = now
			
			fg.BackgroundTransparency = fg.BackgroundTransparency - (1 / outTime) * dt
			
			RenderStepped:wait()
		end
		
		wait(pauseTime)
		
		while fg.BackgroundTransparency < 1 do
			local now = tick()
			local dt = now - t
			t = now
			
			fg.BackgroundTransparency = fg.BackgroundTransparency + (1 / inTime) * dt
			
			RenderStepped:wait()
		end
		
		sg:Destroy()
	end)
end

function onFluteLaunch(flute)
	local origCam = workspace.CurrentCamera:Clone()
	
	local bv = Instance.new("BodyVelocity", flute)
	bv.maxForce = Vector3.new(1e9, 1e9, 1e9)
	bv.velocity = Vector3.new()
	
	local bg = Instance.new("BodyGyro", flute)
	bg.maxTorque = Vector3.new(1e9, 1e9, 1e9)
	
	local speed = 8
	local maxSpeed = 256
	local acceleration = 32
	
	local cam = Instance.new("Camera")
	cam.CameraType = "Scriptable"
	cam.CoordinateFrame = origCam.CoordinateFrame
	cam.Parent = workspace
	workspace.CurrentCamera = cam
	
	cam:Interpolate(getFluteFrame(flute), CFrame.new(), 1.5)
	fade(0.75, 0.8, 0.25)
	wait(1.5)

	local sound = flute.Thrust
	sound.Parent = workspace
	sound:Play()
	
	--remove the sound on death
	local connection
	connection = Player.Character.Humanoid.Died:connect(function()
		sound:Destroy()
		connection:disconnect()
	end)
	
	local t = tick()
	while flute.Parent and not flute.Anchored do
		local now = tick()
		local dt = now - t
		t = now
		
		local left = (Mouse.ViewSizeX - Mouse.ViewSizeY) / 2
		local nx = (Mouse.X - left) / Mouse.ViewSizeY - 0.5
		local ny = Mouse.Y / Mouse.ViewSizeY - 0.5
		
		bg.cframe = CFrame.Angles(-ny, 0, nx)
		bv.velocity = (flute.CFrame * CFrame.Angles(-math.pi/2, 0, 0)).lookVector * speed
		cam.CoordinateFrame = getFluteFrame(flute)
		
		speed = speed + acceleration * dt
		if speed > maxSpeed then
			speed = maxSpeed
		end
		
		sound.Pitch = 0.5 + (speed / maxSpeed)
		
		RenderStepped:wait()
	end
	
	sound:Destroy()
	
	wait(1.5)
	
	origCam.Parent = workspace
	origCam.CameraType = "Custom"
	origCam.CameraSubject = Player.Character.Humanoid
	workspace.CurrentCamera = origCam
end

function onRemote(func, ...)
	if func == "PlayAnimation" then
		playAnimation(...)
	elseif func == "StopAnimation" then
		stopAnimation(...)
	elseif func == "FluteLaunch" then
		onFluteLaunch(...)
	end
end

function onEquip()
	BeganConnection = UIS.InputBegan:connect(inputBegan)
	EndedConnection = UIS.InputEnded:connect(inputEnded)
end

function onUnequip()
	if BeganConnection then
		BeganConnection:disconnect()
		BeganConnection = nil
	end
	
	if EndedConnection then
		EndedConnection:disconnect()
		EndedConnection = nil
	end
end

Tool.Equipped:connect(onEquip)
Tool.Unequipped:connect(onUnequip)
Remote.OnClientEvent:connect(onRemote)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="RemoteEvent" referent="RBXBFD2147BA37243F7A870421EDC5CFCE5">
			<Properties>
				<string name="Name">Remote</string>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXA2CB115CED9F4AB1A29216FA547CF531">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-10</X>
					<Y>9.89999962</Y>
					<Z>-2</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0.707106709</R11>
					<R12>0.707106709</R12>
					<R20>0</R20>
					<R21>-0.707106709</R21>
					<R22>0.707106709</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX40CA8EAB9ED1418B9E771D0296AA1181">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxassetid://223104924</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.25</X>
						<Y>0.25</Y>
						<Z>0.25</Z>
					</Vector3>
					<Content name="TextureId"><url>rbxassetid://223104978</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXA8BFB85D48C44EB099A4DAAF82EDC60E">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Warning</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxassetid://225627419</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX88CA6533C8D14DCD83A3BD5A774514DA">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Thrust</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxassetid://97179624</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXA6E98E231A574A758A82ADFAC3E01FD6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Explosion</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxassetid://55224766</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX881066A2B5834354BE23B3896286FEB7">
			<Properties>
				<Content name="AnimationId"><url>rbxassetid://225631595</url></Content>
				<string name="Name">FlutePlay</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX84AC6D8883B24651BD7B071862D6E449">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-8.88718414</X>
					<Y>11.1226711</Y>
					<Z>-1.08990324</Z>
					<R00>0.640298367</R00>
					<R01>-0.482147425</R01>
					<R02>0.597956419</R02>
					<R10>-0</R10>
					<R11>0.778461099</R11>
					<R12>0.627692878</R12>
					<R20>-0.768126309</R20>
					<R21>-0.401910722</R21>
					<R22>0.498447359</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-9.79607868</X>
					<Y>10.1685772</Y>
					<Z>-1.84754384</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>