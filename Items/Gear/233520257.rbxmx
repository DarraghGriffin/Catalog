<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX23C60275B0E7408F83E22B9498DD4348">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>2.125</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>-0</R10>
				<R11>8.10044585e-005</R11>
				<R12>1</R12>
				<R20>0</R20>
				<R21>-1</R21>
				<R22>8.10044585e-005</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">EasterPeriastron</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=230849839</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXF48262C128184DE094A490B934460C80">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.5</X>
					<Y>0.400000006</Y>
					<Z>0</Z>
					<R00>-4.08438394e-009</R00>
					<R01>0.711314917</R01>
					<R02>-0.702873468</R02>
					<R10>-1.18549384e-008</R10>
					<R11>-0.702873468</R11>
					<R12>-0.711314917</R12>
					<R20>-1</R20>
					<R21>5.42723999e-009</R21>
					<R22>1.13034027e-008</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>0.5</Y>
					<Z>5.25</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2172D6C7ABB9426A811F674CFD069E99">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=230849680</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=230849755</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX1372DB48F190402E8BE5375437090415">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Slash</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
					<float name="Volume">0.699999988</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXD868B2BB8280486E9E54E6681CB9A319">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Plop</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=228086083</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXD442B2A6473C4600A42F5E2BC23BB413">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=54611484</url></Content>
				<string name="Name">Slash1</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX0595B560AFE34D679AD0786B5BCC7DD8">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=54432537</url></Content>
				<string name="Name">Slash2</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXD4CED7125E2C4E0EBB8ABB8AD7E401F3">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=54584713</url></Content>
				<string name="Name">Slash3</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX94C9999EF3404266A54922A510137772">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX920E97B561E841478D0D6F5628CE3CE0">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")
InsertService = game:GetService("InsertService")

EggScript = script:WaitForChild("EggScript")

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

EggModel = InsertService:LoadAsset(232678528)
Egg = EggModel:GetChildren()[1]:Clone()
if EggModel and EggModel.Parent then
	EggModel:Destroy()
end

Animations = {
	Slash1 = {Animation = Tool:WaitForChild("Slash1"), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = 1, Damage = {Min = 15, Max = 20}},
	Slash2 = {Animation = Tool:WaitForChild("Slash2"), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = 1, Damage = {Min = 12, Max = 16}},
	Slash3 = {Animation = Tool:WaitForChild("Slash3"), FadeTime = nil, Weight = nil, Speed = 1, Duration = 1, Damage = {Min = 14, Max = 22}},
}

Sounds = {
	Slash = Handle:WaitForChild("Slash"),
	Plop = Handle:WaitForChild("Plop"),
}

TouchDamage = {Min = 6, Max = 8}

DashEnabled = true
AttackEnabled = true
ToolEquipped = false

Special = {
	Enabled = true,
	Active = false,
	Triggered = false,
	Reloading = false,
	ReloadTime = 15,
}

LastClick = 0

Gravity = 196.20
Rate = (1 / 60)

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

Tool.Enabled = true

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Instance.new("ObjectValue")
	Creator_Tag.Name = "creator"
	Creator_Tag.Value = player
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function GetAllConnectedParts(Object)
	local Parts = {}
	local function GetConnectedParts(Object)
		for i, v in pairs(Object:GetConnectedParts()) do
			local Ignore = false
			for ii, vv in pairs(Parts) do
				if v == vv then
					Ignore = true
				end
			end
			if not Ignore then
				table.insert(Parts, v)
				GetConnectedParts(v)
			end
		end
	end
	GetConnectedParts(Object)
	return Parts
end

function CreateSparkles(Create)
	for i, v in pairs(Handle:GetChildren()) do
		if v:IsA("BasePart") then
			v:Destroy()
		end
	end
	if Create then
		local SparklesPart = BasePart:Clone()
		SparklesPart.Name = "SparklesPart"
		SparklesPart.Transparency = 1
		SparklesPart.CanCollide = false
		local Sparkles = Instance.new("Sparkles")
		Sparkles.SparkleColor = Color3.new((85 / 255), (255 / 255), (127 / 255))
		Sparkles.Enabled = true
		Sparkles.Parent = SparklesPart
		local SparklesWeld = Instance.new("Weld")
		SparklesWeld.Part0 = Handle
		SparklesWeld.Part1 = SparklesPart
		SparklesWeld.C0 = SparklesWeld.C0 * CFrame.Angles(-(math.pi / 2), 0, 0)
		SparklesWeld.Parent = SparklesPart
		SparklesPart.Parent = Handle
	end
end

function CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end

function Blow(Hit)
	if not Hit or not Hit.Parent or not CheckIfAlive() then
		return
	end
	
	local character = Hit.Parent
	
	local player = Players:GetPlayerFromCharacter(character)
	if player and IsTeamMate(Player, player) then
		return
	end
	
	local humanoid = character:FindFirstChild("Humanoid")
	if character == Character or not humanoid or humanoid.Health == 0 then
		return
	end
	
	local RightArm = Character:FindFirstChild("Right Arm")
	if not RightArm then
		return
	end
	local RightGrip = RightArm:FindFirstChild("RightGrip")
	if not RightGrip or (RightGrip.Part0 ~= RightArm and RightGrip.Part1 ~= RightArm) then
		return
	end
	
	if CurrentAnimation and Special.Active and Special.Triggered then
		for i, v in pairs(character:GetChildren()) do
			if v:IsA("ForceField") then
				return
			end
		end
		Sounds.Plop:Play()
		Special.Active = false
		CreateSparkles(false)
		local EggScriptClone = character:FindFirstChild(EggScript.Name)
		if EggScriptClone then
			return
		end
		humanoid.MaxHealth = 9000
		humanoid.Health = humanoid.MaxHealth
		EggScriptClone = EggScript:Clone()
		EggScriptClone.Disabled = false
		local head = character:FindFirstChild("Head")
		if head then
			for i, v in pairs(character:GetChildren()) do
				if v:IsA("Hat") then
					local handle = v:FindFirstChild("Handle")
					if handle then
						local HandleClone = handle:Clone()
						HandleClone.Name = "Hat"
						HandleClone.CanCollide = false
						local HatWeld = Instance.new("Motor6D")
						HatWeld.Part0 = head
						HatWeld.Part1 = HandleClone
						HatWeld.C0 = CFrame.new(0, 0.5, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						HatWeld.C1 = v.AttachmentPoint
						HatWeld.Parent = HandleClone
						HandleClone.Parent = character
					end
					v:Destroy()
				end
			end
		end
		local torso = character:FindFirstChild("Torso")
		if torso then
			humanoid:UnequipTools()
			for i, v in pairs(humanoid:GetChildren()) do
				if v:IsA("Animator") then
					v:Destroy()
				end
			end
			for i, v in pairs(torso:GetChildren()) do
				if v:IsA("Motor") then
					v.MaxVelocity = 0
					v.DesiredAngle = 0
					v.CurrentAngle = 0
				end
			end
			local Size = character:GetModelSize()
			local Position = character:GetModelCFrame()
			Size = {Size.X, Size.Y, Size.Z}
			table.sort(Size, (function(a, b)
				return a > b
			end))
			local EggSize = (Size[1] * 1.45)
			EggSize = Vector3.new((EggSize - 2), EggSize, (EggSize - 2))
			local EggClone = Egg:Clone()
			EggClone.Size = EggSize
			EggClone.Anchored = true
			local BodyGyro = Instance.new("BodyGyro")
			BodyGyro.Parent = EggClone
			local BodyPosition = Instance.new("BodyPosition")
			BodyPosition.maxForce = Vector3.new(math.huge, 0, math.huge)
			BodyPosition.position = Position.p
			BodyPosition.Parent = EggClone
			EggClone.CFrame = Position
			local Weld = Instance.new("Motor6D")
			Weld.Name = "Weld"
			Weld.Part0 = torso
			Weld.Part1 = EggClone
			Weld.C0 = Position:inverse()
			Weld.C1 = EggClone.CFrame:inverse()
			Weld.Parent = EggClone
			local EggValue = Instance.new("ObjectValue")
			EggValue.Name = "Egg"
			EggValue.Value = EggClone
			EggValue.Parent = EggScriptClone
			EggScriptClone.Parent = character
			EggClone.Parent = character
			EggClone.CFrame = (EggClone.CFrame + CFrame.new(Torso.Position, Vector3.new(EggClone.Position.X, Torso.Position.Y, EggClone.Position.Z)).lookVector * ((EggSize.X / 2) + 1))
		end
	else
	
		UntagHumanoid(humanoid)
		TagHumanoid(humanoid, Player)
		
		local DamageValue = ((CurrentAnimation and CurrentAnimation.Damage) or TouchDamage)
		local DamageAmount = math.random(DamageValue.Min, DamageValue.Max)
		
		humanoid:TakeDamage(DamageAmount)
	end
	
end

function Attack(PossibleAnims, PossibleSounds)
	if PossibleAnims and #PossibleAnims > 0 then
		if PossibleSounds and #PossibleSounds > 0 then
			PossibleSounds[math.random(1, #PossibleSounds)]:Play()
		end 
		CurrentAnimation = PossibleAnims[math.random(1, #PossibleAnims)]
		InvokeClient("PlayAnimation", CurrentAnimation)
		if CurrentAnimation.Duration and CurrentAnimation.Duration > 0 then
			if not Special.Enabled and Special.Active then
				Special.Triggered = true
			end
			wait(CurrentAnimation.Duration)
			if Special.Triggered then
				CreateSparkles(false)
				Special.Triggered = false
				Special.Active = false
				Delay(Special.ReloadTime, (function()
					Special.Reloading = false
					Special.Enabled = true
				end))
			end
			CurrentAnimation = nil
		end
	end
end

function Dash()
	DashEnabled = false
	local MousePosition = InvokeClient("MousePosition").Position
	local Direction = CFrame.new(Torso.Position, Vector3.new(MousePosition.X, Torso.Position.Y, MousePosition.Z))
	Torso.CFrame = Direction
	local Parts = GetAllConnectedParts(Torso)
	local Mass = 0
	for i, v in pairs(Parts) do
		Mass = (Mass + v:GetMass())
	end
	Mass = (Mass * Gravity * 100)
	local BodyVelocity = Instance.new("BodyVelocity")
	BodyVelocity.maxForce = Vector3.new(Mass, 0, Mass)
	BodyVelocity.velocity = Direction.lookVector * 100
	Debris:AddItem(BodyVelocity, 0.5)
	BodyVelocity.Parent = Torso
	local BodyGyro = Instance.new("BodyGyro")
	BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
	BodyGyro.cframe = Direction
	Debris:AddItem(BodyGyro, 0.5)
	BodyGyro.Parent = Torso
	wait(2)
	DashEnabled = true
end

function Activated()
	if not AttackEnabled or not ToolEquipped then
		return
	end
	AttackEnabled = false
	RunService.Stepped:wait()
	local Time = tick()
	if (Time - LastClick) < 0.25 and DashEnabled and not Tool.Enabled and not Special.Active then
		Spawn(Dash)
	elseif Tool.Enabled then
		Spawn(function()
			Tool.Enabled = false
			local AttackAnims = {Animations.Slash1, Animations.Slash2, Animations.Slash3}
			local AttackSounds = {Sounds.Slash}
			Attack(AttackAnims, AttackSounds)
			Tool.Enabled = true
		end)
	end
	LastClick = Time
	AttackEnabled = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	for i, v in pairs({ToolUnequipped}) do
		if v then
			v:disconnect()
		end
	end
	if not Special.Enabled and Special.Active and not Special.Reloading then
		Special.Enabled = true
		Special.Active = false
	end
	CreateSparkles(false)
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
	if Mode == "KeyPress" then
		local Key = Value.Key
		local Down = Value.Down
		if Key == "q" and Down and Special.Enabled and not Special.Active and not Special.Reloading and not CurrentAnimation then
			Special.Enabled = false
			Special.Active = true
			CreateSparkles(true)
		end
	end
end)

Handle.Touched:connect(Blow)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX42F72E1A91744A79980CAD5BFD4E8A19">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">EggScript</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Character = script.Parent

Players = game:GetService("Players")

Egg = script:WaitForChild("Egg").Value

Player = Players:GetPlayerFromCharacter(Character)
Humanoid = Character:WaitForChild("Humanoid")
Torso = Character:WaitForChild("Torso")

function RayCast(Position, Direction, MaxDistance, IgnoreList)
	local IgnoreList = ((type(IgnoreList) == "table" and IgnoreList) or {IgnoreList})
	return game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList)
end

if Player then
	local Backpack = Player:FindFirstChild("Backpack")
	if Backpack then
		Backpack:ClearAllChildren()
		for i, v in pairs(Character:GetChildren()) do
			if v:IsA("Tool") then
				v:Destroy()
			end
		end
	end
end

Humanoid.PlatformStand = true
Humanoid.AutoRotate = false

DisableScript = script:WaitForChild("DisableScript")

DisableScriptClone = DisableScript:Clone()
DisableScriptClone.Disabled = false
DisableScriptClone.Parent = Humanoid

Humanoid.WalkSpeed = 0

ResizeModule = require(201433042)
ScaleCharacter = ResizeModule.ScaleCharacter

Rate = (1 / 60)

for i = 1, 125 do
	if Humanoid.Health == 0 then
		break
	end
	local TorsoCFrame = Torso.CFrame
	ScaleCharacter(Character, 0.985, {MaintainCFrame = true})
	Torso.CFrame = TorsoCFrame
	local RayHit, RayPos, RayNormal = RayCast(Egg.Position, Vector3.new(0, -1, 0), ((Egg.Size.Y / 2) + 0.25), {Character})
	if not RayHit then
		Torso.CFrame = (Torso.CFrame * CFrame.new(0, -0.1, 0))
	end
	wait(Rate)
end

for i, v in pairs(Character:GetChildren()) do
	if v:IsA("BasePart") or v:IsA("Tool") then
		v:Destroy()
	end
end

Humanoid.Health = 0]]></ProtectedString>
				</Properties>
				<Item class="LocalScript" referent="RBX485223171FE34EE4A9D5700C978B5E99">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DisableScript</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Humanoid = script.Parent

Humanoid.PlatformStand = true
Humanoid.AutoRotate = false

Humanoid.Changed:connect(function(Property)
	if Property == "Jump" then
		Humanoid.Jump = false
	elseif Property == "PlatformStand" then
		Humanoid.PlatformStand = true
	elseif Property == "AutoRotate" then
		Humanoid.AutoRotate = false
	end
end)]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX585502CAF5A14F1497F9DE6A3BD02BC1">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-0.691136479</X>
					<Y>0.026593782</Y>
					<Z>2.94415307</Z>
					<R00>0.999902546</R00>
					<R01>-0.00124147697</R01>
					<R02>-0.0139105972</R02>
					<R10>-0</R10>
					<R11>0.996041238</R11>
					<R12>-0.0888935253</R12>
					<R20>0.013965887</R20>
					<R21>0.0888848603</R21>
					<R22>0.995944023</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.649848938</X>
					<Y>0.290435433</Y>
					<Z>-0.01187253</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXBCB985790A444B788297CE2A652A6F63">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
ContextActionService = game:GetService("ContextActionService")
UserInputService = game:GetService("UserInputService")

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
	Mouse.Move:connect(function()
		InvokeServer("MouseMove", {Position = Mouse.Hit.p, Target = Mouse.Target})
	end)
	if UserInputService.TouchEnabled then
		ContextActionService:BindActionToInputTypes("Eggify!", (function() InvokeServer("KeyPress", {Key = "q", Down = true}) end), true)
		ContextActionService:SetTitle("Eggify!", "Eggify!")
	end
end

function Unequipped()
	LocalObjects = {}
	if UserInputService.TouchEnabled then
		ContextActionService:UnbindAction("Eggify!")
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or  CurrentTransparency == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
	</Item>
</roblox>