<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX24C17B6A657043EEBC49B27A723AE151">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">false</bool>
			<CoordinateFrame name="Grip">
				<X>-0.349999994</X>
				<Y>1.70000005</Y>
				<Z>0</Z>
				<R00>8.10005167e-006</R00>
				<R01>0</R01>
				<R02>-1</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>1</R20>
				<R21>0</R21>
				<R22>8.10005167e-006</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">GearRecycler</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=233694605</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXF219014433A94BB38707999E81628FF6">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.0113009997</X>
					<Y>6.26942968</Y>
					<Z>0.0664099976</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.75</X>
					<Y>1.25</Y>
					<Z>0.75</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXBD224FE39B36491588B96987890CD96B">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=233694481</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>3</X>
						<Y>3</Y>
						<Z>3</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=233694557</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="StringValue" referent="RBX842B268767DE4D00BFDBBCCB35269198">
			<Properties>
				<string name="Name">NotRecyclable</string>
				<string name="Value"></string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX22B0B841A44E4DDFB7DAEB5DE3E9D39B">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>3.22058606</X>
					<Y>7.79619503</Y>
					<Z>1.7208302</Z>
					<R00>0.486666918</R00>
					<R01>-0.378631324</R01>
					<R02>0.787269771</R02>
					<R10>-1.4901163e-008</R10>
					<R11>0.901191592</R11>
					<R12>0.433421075</R12>
					<R20>-0.873587728</R20>
					<R21>-0.210931718</R21>
					<R22>0.438580036</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>0.449388385</X>
					<Y>6.27054834</Y>
					<Z>0.177023917</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX6D928AE878FF4A3A9F5C3D68DCF9E815">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ControllerScript = script:WaitForChild("ControllerScript")
Remover = script:WaitForChild("Remover")

BaseUrl = "http://www.roblox.com/asset/?id="

Grips = {
	Display = CFrame.new(-0.35, 1.7, 0, 8.10005167e-006, 0, -1, 0, 1, 0, 1, -0, 8.10005167e-006),
	Equipped = CFrame.new(-0.35, -0.125, 0, 8.10005167e-006, 0, -1, 0, 1, 0, 1, -0, 8.10005167e-006)
}

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

GearRecycler = BasePart:Clone()
GearRecycler.Name = "GearRecycler"
GearRecycler.Size = Vector3.new(0.75, 1.25, 0.75)
GearRecyclerMesh = Instance.new("SpecialMesh")
GearRecyclerMesh.MeshType = Enum.MeshType.FileMesh
GearRecyclerMesh.MeshId = (BaseUrl .. "233694481")
GearRecyclerMesh.TextureId = (BaseUrl .. "233694557")
GearRecyclerMesh.Scale = Vector3.new(1, 1, 1)
GearRecyclerMesh.Parent = GearRecycler

ReloadTime = 5

ToolEquipped = false

Tool.Grip = Grips.Equipped
Mesh.Scale = Vector3.new(1, 1, 1)
Handle.Transparency = 0
Tool.Enabled = true

function Activated()
	if not Tool.Enabled or not ToolEquipped then
		return
	end
	Tool.Enabled = false
	local GearRecyclerName = (Player.Name .. "'s" .. GearRecycler.Name)
	local GearRecyclerClone = game:GetService("Workspace"):FindFirstChild(GearRecyclerName)
	if GearRecyclerClone then
		GearRecyclerClone:Destroy()
		Handle.Transparency = 0
	else
		Handle.Transparency = 1
		local GearRecyclerClone = GearRecycler:Clone()
		GearRecyclerClone.Name = GearRecyclerName
		GearRecyclerClone.CFrame = Handle.CFrame
		LastGearRecycler = GearRecyclerClone
		local Creator = Instance.new("ObjectValue")
		Creator.Name = "Creator"
		Creator.Value = Player
		Creator.Parent = GearRecyclerClone
		local ControllerScriptClone = ControllerScript:Clone()
		ControllerScriptClone.Disabled = false
		ControllerScriptClone.Parent = GearRecyclerClone
		local RemoverClone = Remover:Clone()
		RemoverClone.Disabled = false
		RemoverClone.Parent = GearRecyclerClone
		GearRecyclerClone.Parent = game:GetService("Workspace")
	end
	wait(ReloadTime)
	if not LastGearRecycler or not LastGearRecycler.Parent then
		Handle.Transparency = 0
	end
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
end

Tool.Changed:connect(function(Property)
	if Property == "Parent" then
		Handle.Transparency = (((Tool.Parent:IsA("Backpack") or Players:GetPlayerFromCharacter(Tool.Parent)) and (((not LastGearRecycler or not LastGearRecycler.Parent) and 0) or 1)) or 0)
		if not Tool.Parent:IsA("Backpack") and not Players:GetPlayerFromCharacter(Tool.Parent) and LastGearRecycler and LastGearRecycler.Parent then
			LastGearRecycler:Destroy()
			Handle.Transparency = 0
		end
	end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX84E1BB2A1BD84E38B5CE5FF8BB920A28">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ControllerScript</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Part = script.Parent
Mesh = Part:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

GearModule = require(236215724)
SwapGear = GearModule.SwapGear

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Creator = Part:FindFirstChild("Creator")

StickTime = 3

Size = {
	Min = {
		Size = Vector3.new(0.75, 1.25, 0.75),
		Scale = Vector3.new(1, 1, 1)
	},
	Max = {
		Size = Vector3.new(2.25, 3.75, 2.25),
		Scale = Vector3.new(3.25, 3.25, 3.25)
	}
}

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

Rate = (1 / 60)
ProjectileNames = {"GearRecycler"}
Grounded = false

Part.Size = Size.Min.Size
Mesh.Scale = Size.Min.Scale

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function CheckIntangible(Hit)
	if Hit and Hit.Parent then
		if not Hit.CanCollide or CheckTableForString(ProjectileNames, Hit.Name) or Hit.Parent:IsA("Hat") or Hit.Parent:IsA("Tool") or Hit.Parent:FindFirstChild("Humanoid") then
			return true
		end
	end
	return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function IsFlipped(Object)
	local Vector1 = Object.CFrame:vectorToWorldSpace(Vector3.FromNormalId(Enum.NormalId.Top))
	local Vector2 = Vector3.new(0, 1, 0)
	local Angle = math.acos(Vector1:Dot(Vector2))
	return (Angle > ((math.pi / 4) + 0.01))
end

function Stick(Hit)
	if Grounded then
		return
	end
	Grounded = true
	Part.Velocity = Vector3.new(0, 0, 0)
	Part.RotVelocity = Vector3.new(0, 0, 0)
	local Weld
	local WeldData = {}
	if Hit and Hit.Object and Hit.Object.Parent and Hit.RayData then
		local OriginalCFrame = Part.CFrame
		local AngleX, AngleY, AngleZ = Part.CFrame:toEulerAnglesXYZ()
		local PartCFrame = CFrame.new(OriginalCFrame.p, (OriginalCFrame + Hit.RayData.RayNormal * 2).p) * CFrame.Angles(-(math.pi / 2), 0, 0)
		local BodyGyro = Create("BodyGyro"){
			maxTorque = Vector3.new(math.huge, 0, math.huge),
			cframe = PartCFrame,
			Parent = Part,
		}
		local BodyPosition = Create("BodyPosition"){
			maxForce = Vector3.new(math.huge, 0, math.huge),
			position = OriginalCFrame.p,
			Parent = Part,
		}
		local BodyVelocity = Create("BodyVelocity"){
			maxForce = Vector3.new(0, math.huge, 0),
			velocity = Vector3.new(0, -10, 0),
			Parent = Part,
		}
	end
	Part.Velocity = Vector3.new(0, 0, 0)
	Part.RotVelocity = Vector3.new(0, 0, 0)
	local Frames = 10
	for i = 1, Frames do
		local Increase = (1 / Frames)
		local OriginalCFrame = Part.CFrame
		Part.Size = ((Size.Max.Size / Frames) * i)
		Part.Mesh.Scale = ((Size.Max.Scale / Frames) * i)
		Part.CFrame = OriginalCFrame * CFrame.new(0, (Size.Max.Size.Y / Frames), 0)
		wait(Rate)
	end
	local TextDisplay = BasePart:Clone()
	TextDisplay.Name = "Part"
	TextDisplay.Transparency = 1
	TextDisplay.Size = Vector3.new(1.5, 0.2, 2.5)
	TextDisplay.CanCollide = false
	local SurfaceGui = Create("SurfaceGui"){
		Name = "InteractiveGui",
		Face = Enum.NormalId.Top,
		Enabled = true,
		Active = true,
		Create("TextLabel"){
			BackgroundTransparency = 1,
			BorderSizePixel = 0,
			Position = UDim2.new(0, 0, 0, 0),
			Size = UDim2.new(1, 0, 1, 0),
			Font = Enum.Font.Legacy,
			FontSize = Enum.FontSize.Size48,
			TextColor3 = BrickColor.new("Institutional white").Color,
			TextScaled = true,
			TextWrapped = true,
			Text = "Insert Gear Here",
			Active = true,
			Parent = SurfaceGui,
		}
	}
	SurfaceGui.Parent = TextDisplay
	local Weld = Create("Weld"){
		Part0 = Part,
		Part1 = TextDisplay,
		C0 = CFrame.new(0.5, 1.325, 0) * CFrame.Angles(0, 0, -(math.pi / 4)),
		Parent = TextDisplay,
	}
	TextDisplay.Parent = Part
	local Tick = tostring(tick())
	TextDisplay.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent or IsFlipped(Part) then
			return
		end
		local tool = Hit.Parent
		if not tool:IsA("Tool") then
			return
		end
		local NotRecyclable = tool:FindFirstChild("NotRecyclable")
		if NotRecyclable or tool.Name == "GearRecycler" then
			return
		end
		local RecycledGear = tool:FindFirstChild("RecycledGear")
		if RecycledGear and RecycledGear.Value == Tick then
			return
		end
		local character = tool.Parent
		local player = Players:GetPlayerFromCharacter(character)
		if player then
			local humanoid = character:FindFirstChild("Humanoid")
			if not humanoid or humanoid.Health == 0 then
				return
			end
			local NewGear = SwapGear({Player = player, Gear = tool, Equip = true})
			RecycledGear = Create("StringValue"){
				Name = "RecycledGear",
				Value = Tick,
				Parent = NewGear,
			}
		end
	end)
end

function StickTouched(Part)
	local PartTouched
	PartTouched = Part.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent or Grounded then
			return
		end
		local character = Hit.Parent
		local player = Players:GetPlayerFromCharacter(character)
		local humanoid = character:FindFirstChild("Humanoid")
		if player or humanoid then
			return
		end
		--[[if not Hit:IsGrounded() then
			return
		end]]
		local RayHit, RayPos, RayNormal = CastRay(Part.Position, CFrame.new(Part.Position, (Part.CFrame * CFrame.new(0, -1, 0)).p).lookVector, ((Part.Size.Y / 2) + 0.5), {Part}, false)
		if RayHit then
			Spawn(function()
				Stick({Object = Hit, RayData = {RayPos = RayPos, RayNormal = RayNormal}})
			end)
			if PartTouched then
				PartTouched:disconnect()
			end
		end
	end)
	wait(StickTime)
	if PartTouched then
		PartTouched:disconnect()
	end
	if not Grounded then
		Spawn(function()
			Stick()
		end)
	end
end

StickTouched(Part)

Spawn(function()
	local StickTick = tick()
	while (tick() - StickTick) < StickTime and not Grounded do
		wait(Rate)
	end
end)]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXAEF17C720AAC4559BCE0773D6E0E38D8">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Remover</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Part = script.Parent

Debris = game:GetService("Debris")

Creator = Part:FindFirstChild("Creator")

function DestroyModel()
	Debris:AddItem(Part, 1)
end

if not Creator then
	DestroyModel()
	return
end

Creator = Creator.Value

if not Creator or not Creator:IsA("Player") or not Creator.Parent then
	DestroyModel()
	return
end

Character = Creator.Character
if not Character then
	DestroyModel()
	return
end

Creator.Changed:connect(function(Property)
	if Property == "Parent" and not Creator.Parent then
		DestroyModel()
	end
end)

Character.Changed:connect(function(Property)
	if Property == "Parent" and not Character.Parent then
		DestroyModel()
	end
end)
]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX637A8CDA4BA34694AE6EF824269C0415">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
	</Item>
</roblox>