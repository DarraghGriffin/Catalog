<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX321470CCA6E44C2997625EB288BBF06D">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>1.59590721</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">ClubBoatesDiscoBall</string>
			<Content name="TextureId"><url>rbxassetid://247474462</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Script" referent="RBXB197FD529EFC456D84E81DB2006F8D05">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Server</string>
				<ProtectedString name="Source"><![CDATA[local Tool = script.Parent
local Remote = Tool:WaitForChild("Remote")
local Handle = Tool:WaitForChild("Handle")

local FriendlyFire = false

local DanceScene = nil

local Player

--returns the wielding player of this tool
function getPlayer()
	local char = Tool.Parent
	return game:GetService("Players"):GetPlayerFromCharacter(char)
end

--helpfully checks a table for a specific value
function contains(t, v)
	for _, val in pairs(t) do
		if val == v then
			return true
		end
	end
	return false
end

--tags a human for the ROBLOX KO system
function tagHuman(human)
	local tag = Instance.new("ObjectValue")
	tag.Value = getPlayer()
	tag.Name = "creator"
	tag.Parent = human
	game:GetService("Debris"):AddItem(tag)
end

--used by checkTeams
function sameTeam(otherHuman)
	local player = getPlayer()
	local otherPlayer = game:GetService("Players"):GetPlayerFromCharacter(otherHuman.Parent)
	if player and otherPlayer then
		if player == otherPlayer then
			return true
		end
		if otherPlayer.Neutral then
			return false
		end
		return player.TeamColor == otherPlayer.TeamColor
	end
	return false
end

--use this to determine if you want this human to be harmed or not, returns boolean
function checkTeams(otherHuman)
	return not (sameTeam(otherHuman) and not FriendlyFire)
end

function createDiscoBall(danceScene)
	local discoBall = Handle:Clone()
	discoBall.Name = "DiscoBall"
	discoBall.Anchored = true
	discoBall.CanCollide = false
	discoBall.Transparency = 0	
	discoBall.CFrame = CFrame.new(0, 14, 0)
	discoBall.Mesh.Scale = Vector3.new(1, 1, 1) * 2.5
	discoBall.Parent = danceScene
	
	danceScene.PrimaryPart = discoBall
	
	spawn(function()
		local rotSpeed = math.pi
		while DanceScene ~= nil do
			discoBall.CFrame = discoBall.CFrame * CFrame.Angles(0, rotSpeed * wait(), 0)
		end
	end)
end

function createDanceFloor(danceScene)
	local tile = Instance.new("Part")
	tile.Anchored = true
	tile.CanCollide = false
	tile.FormFactor = "Custom"
	tile.Material = "SmoothPlastic"
	
	local tiles = {}
	local tileSize = 3
	local floorSize = 6
	local offset = -floorSize/2
	for tx = 0, floorSize do
		for tz = 0, floorSize do
			local x = (tx + offset) * tileSize
			local z = (tz + offset) * tileSize
			local pos = Vector3.new(x, 0, z)
			local newTile = tile:Clone()
			newTile.Size = Vector3.new(tileSize, 0.2, tileSize)
			newTile.CFrame = CFrame.new(pos)
			newTile.Parent = danceScene
			table.insert(tiles, newTile)
		end
	end
	
	spawn(function()
		local tileSwitchTime = 0.25
		while DanceScene ~= nil do
			for _, tile in pairs(tiles) do
				tile.BrickColor = BrickColor.palette(math.random(0, 63))
			end
			wait(tileSwitchTime)
		end
	end)
end

function getRoot()
	local char = Tool.Parent
	if char then
		return char:FindFirstChild("HumanoidRootPart")
	end
end

function createDanceScene()
	DanceScene = Instance.new("Model")
	createDiscoBall(DanceScene)
	createDanceFloor(DanceScene)
	
	local root = getRoot()
	if root then
		local pos = root.Position + Vector3.new(0, DanceScene.DiscoBall.Position.Y - 3, 0)
		DanceScene:SetPrimaryPartCFrame(CFrame.new(pos))
		DanceScene.Parent = workspace
	end
end

function destroyDanceScene()
	if DanceScene then
		DanceScene:Destroy()
		DanceScene = nil
	end
end

function hideHandle()
	Handle.Transparency = 1
end

function getHuman()
	local char = Tool.Parent
	if char then
		return char:FindFirstChild("Humanoid")
	end
end

function disableMovement()
	local human = getHuman()
	if human then
		local normalHumanWalkSpeed = 16
		human.WalkSpeed = human.WalkSpeed - normalHumanWalkSpeed
		
		spawn(function()
			while DanceScene ~= nil do
				wait()
			end
			human.WalkSpeed = human.WalkSpeed + normalHumanWalkSpeed
		end)
	end
end

function onEquip()
	Player = getPlayer()
	createDanceScene()
	hideHandle()
	disableMovement()
	Remote:FireClient(getPlayer(), "PlayAnimation", "Dance")
end

function onUnequip()
	destroyDanceScene()
	Remote:FireClient(Player, "StopAnimation", "Dance")
end

Tool.Equipped:connect(onEquip)
Tool.Unequipped:connect(onUnequip)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX4344DFAAA69D4AD5874BCFD401695967">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Client</string>
				<ProtectedString name="Source"><![CDATA[local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local Mouse = Player:GetMouse()
local Tool = script.Parent
local Remote = Tool:WaitForChild("Remote")
local Tracks = {}
local InputType = Enum.UserInputType

local BeganConnection, EndedConnection

function playAnimation(animName, ...)
	if Tracks[animName] then
		Tracks[animName]:Play()
	else
		local anim = Tool:FindFirstChild(animName)
		if anim and Tool.Parent and Tool.Parent:FindFirstChild("Humanoid") then
			Tracks[animName] = Tool.Parent.Humanoid:LoadAnimation(anim)
			playAnimation(animName, ...)
		end
	end
end

function stopAnimation(animName)
	if Tracks[animName] then
		Tracks[animName]:Stop()
	end
end

function inputBegan(input)
	if input.UserInputType == InputType.MouseButton1 then
		Remote:FireServer("LeftDown")
	end
end

function inputEnded(input)
	if input.UserInputType == InputType.MouseButton1 then
		Remote:FireServer("LeftUp")
	end
end

function onRemote(func, ...)
	if func == "PlayAnimation" then
		playAnimation(...)
	elseif func == "StopAnimation" then
		stopAnimation(...)
	end
end

function onEquip()
	BeganConnection = UIS.InputBegan:connect(inputBegan)
	EndedConnection = UIS.InputEnded:connect(inputEnded)
end

function onUnequip()
	if BeganConnection then
		BeganConnection:disconnect()
		BeganConnection = nil
	end
	
	if EndedConnection then
		EndedConnection:disconnect()
		EndedConnection = nil
	end
end

Tool.Equipped:connect(onEquip)
Tool.Unequipped:connect(onUnequip)
Remote.OnClientEvent:connect(onRemote)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="RemoteEvent" referent="RBX0DCACC92EB2140BBA1034BD69A668998">
			<Properties>
				<string name="Name">Remote</string>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX41BE5A3460EA4DB2A16D3094C20494DF">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>47.8999977</Y>
					<Z>-29</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX374FF41DB4514094BC15CF21A328C36B">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxassetid://247474243</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>rbxassetid://247474379</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX158654F7EEB8440B9D1AA261C08268E4">
			<Properties>
				<Content name="AnimationId"><url>rbxassetid://248263260</url></Content>
				<string name="Name">Dance</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX3150692EB4374628BE979ABD6DAB2DA9">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-1.26310778</X>
					<Y>48.937355</Y>
					<Z>-31.2410126</Z>
					<R00>-0.88120544</R00>
					<R01>0.137006178</R01>
					<R02>-0.452444762</R02>
					<R10>1.49011612e-008</R10>
					<R11>0.957082093</R11>
					<R12>0.289816946</R12>
					<R20>0.472733468</R20>
					<R21>0.25538826</R21>
					<R22>-0.843385994</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.5030002</X>
					<Y>48.4504623</Y>
					<Z>-29.8241234</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>