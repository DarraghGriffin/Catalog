<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXB89B4454105C4FE5A0823972FBC35618">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0.100000001</Z>
				<R00>0.0747899488</R00>
				<R01>-0.997199297</R01>
				<R02>0</R02>
				<R10>0.997199297</R10>
				<R11>0.0747899488</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">PunkGuitar</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=252850142</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX5F34E252E0B7443780A5F5CC990D04B1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-6.10000038</X>
					<Y>15.0000048</Y>
					<Z>1.90734863e-006</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>1</R02>
					<R10>-0.784867465</R10>
					<R11>-0.619663119</R11>
					<R12>0</R12>
					<R20>0.619663119</R20>
					<R21>-0.784867465</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>5.75</X>
					<Y>2.25</Y>
					<Z>0.300000012</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX5F7A8373885949728B43932345C23489">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=252850023</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>2</X>
						<Y>2</Y>
						<Z>2</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=252850083</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX9EA33990FB334BA29A6E61EAF9D275CB">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">ChordSound</string>
					<float name="Pitch">2.5</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=99170537</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX8577FCF556B64E4FAE636B1FAE1E2C1D">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Module = require(185791213)

NoteData = {
	Chords = {
		{Key = "z", Sound = {Normal = 99170172, Sharp = 99189531}},
		{Key = "x", Sound = {Normal = 99170311, Sharp = 99189711}},
		{Key = "c", Sound = {Normal = 99170354, Sharp = 99189785}},
		{Key = "v", Sound = {Normal = 99170403, Sharp = 99190216}},
		{Key = "b", Sound = {Normal = 99170481, Sharp = 99189905}},
		{Key = "n", Sound = {Normal = 99170537, Sharp = 99190021}},
		{Key = "m", Sound = {Normal = 99170583, Sharp = 99190550}}
	},
	Pitches = {
		{Key = "g", Pitch = 2},
		{Key = "h", Pitch = 2.25},
		{Key = "j", Pitch = 2.5},
		{Key = "k", Pitch = 2.75},
		{Key = "l", Pitch = 3},
	}
}

Grips = {
	Hold = CFrame.new(0, 0, 0.1, 0.075, -1, 0, 1, 0.075, -0, 0, 0, 1),
	Play = CFrame.new(-1.5, 0.25, 0.300000012, -0.00119718851, -0.536525667, 0.843883157, 0.9541592, 0.251959264, 0.161544785, -0.299297124, 0.805392265, 0.511629283),
	Unequipped = CFrame.new(1.5, -1, 0.7, -0.707106709, 8.10044585e-005, -0.707106769, -0.707106769, 1.31134158e-007, 0.707106709, 5.73715224e-005, 1, 5.71860728e-005)
}

Animations = {
	Hold = {Animation = Tool:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
	Pluck = {Animation = Tool:WaitForChild("Pluck"), FadeTime = nil, Weight = nil, Speed = 6, Duration = nil}
}

Sounds = {
	ChordSound = Handle:WaitForChild("ChordSound"),
}

ChordDuration = 1

IsPlayingMusic = false
CurrentNote = 1
CurrentPitch = NoteData.Pitches[5]

ToolEquipped = false

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if not Tool.Enabled or not ToolEquipped then
		return
	end
	if Mode == "KeyPress" and Value then
		local Key = string.lower(Value.Key)
		local ByteKey = string.byte(Key)
		local Down = Value.Down
		if Key == "0" or ByteKey == 48 then
			ShiftDown = Down
		else
			if Down then
				if IsPlayingMusic then
					for i, v in pairs(NoteData.Chords) do
						if v.Key == Key then
							local Duration = 1
							local Chord = v
							local SoundId = ((not ShiftDown and v.Sound.Normal) or v.Sound.Sharp)
							local Pitch = CurrentPitch.Pitch
							Spawn(function()
								Module.PlaySound(Handle, {Sound = Sounds.ChordSound, SoundId = SoundId, MakeNew = true}, ((Chord.Pitch and Chord.Pitch) or (CurrentPitch and CurrentPitch.Pitch) or nil), ChordDuration)
								InvokeClient("PlayAnimation", Animations.Pluck)
							end)
							return
						end
					end
				end
				for i, v in pairs(NoteData.Pitches) do
					if v.Key == Key then
						CurrentPitch = v
						return
					end
				end
			end
		end
	elseif Mode == "PlayingMode" then
		return IsPlayingMusic
	end
end)

Tool.Grip = Grips.Hold
Tool.Enabled = true

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function Activated()
	if not Tool.Enabled or not CheckIfAlive() or not ToolEquipped then
		return
	end
	Tool.Enabled = false
	IsPlayingMusic = not IsPlayingMusic
	if IsPlayingMusic then
		Tool.Grip = Grips.Play
		Spawn(function()
			InvokeClient("PlayAnimation", Animations.Hold)
		end)
	else
		Tool.Grip = Grips.Hold
		for i, v in pairs(Animations) do
			Spawn(function()
				InvokeClient("StopAnimation", v)
			end)
		end
	end
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Backpack = Player:FindFirstChild("Backpack")
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	Tool.Grip = Grips.Hold
	Spawn(function()
		ControlGui = Module.DisplayControls(
			Player,
			"Keys H, J, K, and L change pitch Keys Z, X, C, V, B, N, M play notes",
			nil,
			{
				TextColor3 = Color3.new((85 / 255), (255 / 255), (255 / 255)),
				TextStrokeColor3 = Color3.new((85 / 255), (170 / 255), (255 / 255)),
				TextStrokeTransparency = 0.25
			}
		)
		ControlGui.Frame.BackgroundColor3 = Color3.new((170 / 255), (170 / 255), (255 / 255))
	end)
	ToolEquipped = true
end

function Unequipped()
	ShiftDown = false
	IsPlayingMusic = false
	Debris:AddItem(ControlGui, 0)
	ToolEquipped = false
end

Tool.Changed:connect(function(Property)
	if Property == "Parent" then
		if FakeGuitar and FakeGuitar.Parent then
			FakeGuitar:Destroy()
		end
		if Tool.Grip == Grips.Play then
			if Backpack and Backpack.Parent and Tool.Parent == Backpack then
				FakeGuitar = Handle:Clone()
				FakeGuitar.Name = "FakeGuitar"
				FakeGuitar.CanCollide = false
				local GuitarWeld = Instance.new("Weld")
				GuitarWeld.Part0 = Torso
				GuitarWeld.Part1 = FakeGuitar
				GuitarWeld.C0 = CFrame.new(0, -1, 0, 1, 0, -0, 0, 0, 1, 0, -1, -0)
				GuitarWeld.C1 = Grips.Unequipped
				GuitarWeld.Parent = FakeGuitar
				FakeGuitar.Parent = Character
				Backpack = nil
			else
				if FakeGuitar and FakeGuitar.Parent then
					FakeGuitar:Destroy()
				end
			end
		end
	end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX1D6D552810CB4BF4AD478BE1BF56B59A">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

Camera = game:GetService("Workspace").CurrentCamera

BaseUrl = "http://www.roblox.com/asset/?id="

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ShiftDown = false
ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	Mouse.KeyDown:connect(function(Key)
		local ByteKey = string.byte(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	ShiftDown = false
	LocalObjects = {}
	Debris:AddItem(CurrentGui, 0)
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or  CurrentTransparency == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXC1EC0D34A830480282B0AECD8049EE16">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=192900081</url></Content>
				<string name="Name">Pluck</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX769E4AA45B2F4F7282D85DFDD16A64FF">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=192906348</url></Content>
				<string name="Name">Hold</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX9FDF5FE245AF4D08B8DD3266FB754E52">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-9.63368988</X>
					<Y>15.1055717</Y>
					<Z>0.0917969644</Z>
					<R00>-0.0149215478</R00>
					<R01>0.0487631336</R01>
					<R02>-0.99869895</R02>
					<R10>5.82076679e-011</R10>
					<R11>0.998810232</R11>
					<R12>0.0487685576</R12>
					<R20>0.999888778</R20>
					<R21>0.000727702281</R21>
					<R22>-0.0149037922</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-7.07702255</X>
					<Y>14.9807243</Y>
					<Z>0.129950643</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>