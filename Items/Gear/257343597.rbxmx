<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX943383732D2D4C3684374038915FDEF6">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-1</Y>
				<Z>-0.25</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">OctopusCannon</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=254915899</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX595817CA31324503AC4E96ECFB72D6BA">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-58.0463753</X>
					<Y>5.67703056</Y>
					<Z>-16.8950424</Z>
					<R00>0.582898796</R00>
					<R01>-0.195949838</R01>
					<R02>-0.78856343</R02>
					<R10>6.65486994e-007</R10>
					<R11>0.970486224</R11>
					<R12>-0.241155386</R12>
					<R20>0.812544703</R20>
					<R21>0.140568674</R21>
					<R22>0.565695465</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>4</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXFE836ED02E87481FA153690C95821A18">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=254915821</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.25</X>
						<Y>1.25</Y>
						<Z>1.25</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=254915864</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX558361BD55E049B3B367999398695DC0">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Fire</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><null></null></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX7A88DEEAE46046888ECD8D5C39F4DD76">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX806B5419A6594A1C97AF949577D91E0C">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")
ContentProvider = game:GetService("ContentProvider")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputButton = Instance.new("ImageButton")
InputButton.Name = "InputButton"
InputButton.Image = ""
InputButton.BackgroundTransparency = 1
InputButton.ImageTransparency = 1
InputButton.Size = UDim2.new(1, 0, 1, 0)
InputButton.Parent = InputCheck

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local function StopAnimation(Animation)
		for i, v in pairs(Animations) do
			if v.Animation == Animation then
				v.AnimationTrack:Stop(value.EndFadeTime)
				if v.TrackStopped then
					v.TrackStopped:disconnect()
				end
				table.remove(Animations, i)
			end
		end
	end
	if mode == "PlayAnimation" then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				if value.Speed then
					v.AnimationTrack:AdjustSpeed(value.Speed)
					return
				elseif value.Weight or value.FadeTime then
					v.AnimationTrack:AdjustWeight(value.Weight, value.FadeTime)
					return
				else
					StopAnimation(value.Animation, false)
				end
			end
		end
		local AnimationMonitor = Create("Model"){}
		local TrackEnded = Create("StringValue"){Name = "Ended"}
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		local TrackStopped
		if not value.Manual then
			TrackStopped = AnimationTrack.Stopped:connect(function()
				if TrackStopped then
					TrackStopped:disconnect()
				end
				StopAnimation(value.Animation, true)
				TrackEnded.Parent = AnimationMonitor
			end)
		end
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack, TrackStopped = TrackStopped})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
		if TrackStopped then
			AnimationMonitor:WaitForChild(TrackEnded.Name)
		end
		return TrackEnded.Name
	elseif mode == "StopAnimation" and value then
		StopAnimation(value.Animation)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Player:GetMouse()
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if PlayerGui then
			if UserInputService.TouchEnabled then
				InputCheckClone = InputCheck:Clone()
				InputCheckClone.InputButton.InputBegan:connect(function()
					InvokeServer("Button1Click", {Down = true})
				end)
				InputCheckClone.InputButton.InputEnded:connect(function()
					InvokeServer("Button1Click", {Down = false})
				end)
				InputCheckClone.Parent = PlayerGui
			end
		end
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("Animation") then
				ContentProvider:Preload(v.AnimationId)
			end
		end
	end)
end

function Unequipped()
	LocalObjects = {}
	if InputCheckClone and InputCheckClone.Parent then
		InputCheckClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX6D20F231565645F99BAF59221CE00CB1">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-55.5932884</X>
					<Y>7.5813694</Y>
					<Z>-17.5081291</Z>
					<R00>-0.0296060182</R00>
					<R01>-0.730114579</R01>
					<R02>0.682683051</R02>
					<R10>9.31322575e-010</R10>
					<R11>0.682982504</R11>
					<R12>0.730434775</R12>
					<R20>-0.999561667</R20>
					<R21>0.0216252655</R21>
					<R22>-0.0202203896</R22>
				</CoordinateFrame>
				<float name="FieldOfView">52.5</float>
				<CoordinateFrame name="Focus">
					<X>-56.7470093</X>
					<Y>6.3469491</Y>
					<Z>-17.4739571</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX3B915F25ED5F4057AA61CABEDC1372B2">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

BaseUrl = "http://www.roblox.com/asset/?id="

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

ProjectileScript = script:WaitForChild("ProjectileScript")

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

BaseProjectile = BasePart:Clone()
BaseProjectile.Name = "Projectile"
BaseProjectile.Size = Vector3.new(0.2, 0.2, 1)
BaseProjectile.BrickColor = BrickColor.new("Really black")
BaseProjectile.CanCollide = false
BaseProjectile.Anchored = true
BaseProjectileMesh = Create("SpecialMesh"){
	Name = "Mesh",
	MeshId = (BaseUrl .. "2697549"),
	TextureId = "",
	Scale = Vector3.new(0.2, 0.2, 0.3),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseProjectile,
}

Projectiles = {
	Vector3.new(-0.35, -0.25, -2.125),
	Vector3.new(-0.2125, -0.375, -1.95),
	Vector3.new(-0.125, -0.325, -2.175),
	Vector3.new(-0.0625, -0.1375, -1.95),
	Vector3.new(0.045, -0.35, -2.165),
	Vector3.new(0.275, -0.3, -2.1),
	Vector3.new(0.245, -0.165, -2),
	Vector3.new(0.405, -0.3, -2),
}

Sounds = {
	Fire = Handle:WaitForChild("Fire"),
}

Gravity = 196.20

ReloadTime = 4
Damage = 8

ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Tool.Enabled = true

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	local MousePosition = InvokeClient("MousePosition")
	if MousePosition then
		Sounds.Fire:Play()
		MousePosition = MousePosition.Position
		local CreatedProjectiles = {}
		for i, v in pairs(Projectiles) do
			local Offset = (Handle.CFrame * CFrame.new(v))
			local Direction = CFrame.new(Offset.p, MousePosition)
			local Orientation = (Direction * CFrame.Angles(0, 0, 0))
			local Projectile = BaseProjectile:Clone()
			Projectile.CFrame = Orientation
			table.insert(CreatedProjectiles, Projectile)
		end
		local CenterModel = Create("Model"){Name = "CenterModel"}
		for i, v in pairs(CreatedProjectiles) do
			local FakePart = v:Clone()
			FakePart.Parent = CenterModel
		end
		local ModelCFrame = CenterModel:GetModelCFrame()
		ModelCFrame = (ModelCFrame + ModelCFrame.lookVector * 3)
		for i, v in pairs(CreatedProjectiles) do
			local Direction = CFrame.new(v.Position, ModelCFrame.p)
			v.CFrame = Direction
			local Values = {
				{Name = "Creator", Class = "ObjectValue", Value = Player},
				{Name = "Damage", Class = "NumberValue", Value = Damage},
			}
			for ii, vv in pairs(Values) do
				local Value = Create(vv.Class){
					Name = vv.Name,
					Value = vv.Value,
					Parent = v,
				}
			end
			local ProjectileScriptCopy = ProjectileScript:Clone()
			ProjectileScriptCopy.Disabled = false
			ProjectileScriptCopy.Parent = v
			Debris:AddItem(v, 3)
			v.Parent = game:GetService("Workspace")
		end
		wait(ReloadTime)
	end
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBXCCB81A348D434E74831C9647976748A6">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ProjectileScript</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Projectile = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Creator = Projectile:WaitForChild("Creator")
Damage = Projectile:WaitForChild("Damage")

Sounds = {
	Splat = script:WaitForChild("Splat"),
}

BaseUrl = "http://www.roblox.com/asset/?id="

SplatScript = script:WaitForChild("SplatScript")
HitScript = script:WaitForChild("HitScript")

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

InkBlotch1 = BasePart:Clone()
InkBlotch1.Size = Vector3.new(1, 0.2, 1)
InkBlotch1Mesh = Create("SpecialMesh"){
	Name = "Mesh",
	MeshId = (BaseUrl .. "78575004"),
	TextureId = "",
	Scale = Vector3.new(0.75, 1, 0.75),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = InkBlotch1,
}

InkBlotch2 = BasePart:Clone()
InkBlotch2.Size = Vector3.new(1, 0.2, 1)
InkBlotch2Mesh = Create("SpecialMesh"){
	Name = "Mesh",
	MeshId = (BaseUrl .. "153993912"),
	TextureId = "",
	Scale = Vector3.new(0.75, 1, 0.75),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = InkBlotch2,
}

InkBlotches = {InkBlotch1, InkBlotch2}

Images = {118259001, 118261268}

Rate = (1 / 60)

IgnoreHit = false

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function SplatInk(Player)
	if not Player or not Player:IsA("Player") then
		return
	end
	local PlayerGui = Player:FindFirstChild("PlayerGui")
	if not PlayerGui then
		return
	end
	local SplatGui = Create("ScreenGui"){
		Name = "SplatGui",
	}
	for i = 1, math.random(2, 5) do
		local Image = Create("ImageLabel"){
			Name = "Ink",
			BackgroundTransparency = 1,
			Size = UDim2.new(0, math.random(125, 600), 0, math.random(125, 600)),
			Position = UDim2.new((math.random(-100, 1000) * 0.001), 0, (math.random(-100, 1000) * 0.001), 0),
			Image = (BaseUrl .. Images[math.random(1, #Images)]),
			Rotation = math.random(0, 360),
			Parent = SplatGui,
		}
	end
	Debris:AddItem(SplatGui, 5)
	SplatGui.Parent = PlayerGui
end

function Touched(Hit)
	if not Hit or not Hit.Parent or Hit.Name == Projectile.Name or IgnoreHit then
		return
	end
	local Player = Creator.Value
	if not Player or not Player:IsA("Player") then
		return
	end
	local Character = Player.Character
	local character = Hit.Parent
	if character:IsA("Hat") or character:IsA("Tool") then
		character = character.Parent
	end
	if character == Character then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player == Player then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if humanoid then
		if not IsTeamMate(Player, player) and humanoid.Health > 0 then
			if player then
				SplatInk(player)
			end
			local HitScriptClone = character:FindFirstChild(HitScript.Name)
			if not HitScriptClone then
				HitScriptClone = HitScript:Clone()
				local Duration = Create("NumberValue"){
					Name = "Duration",
					Value = math.huge,
					Parent = HitScriptClone,
				}
				HitScriptClone.Disabled = false
				HitScriptClone.Parent = character
			end
			HitScriptClone:FindFirstChild("Duration").Value = 3
			UntagHumanoid(humanoid)
			TagHumanoid(humanoid, Player)
			humanoid:TakeDamage(Damage.Value)
		end
	else
		local RayHit, RayPos, RayNormal = CastRay(Projectile.Position, Projectile.CFrame.lookVector, (Projectile.Size.Z * 3), {Character, Projectile}, false)
		if RayHit then
			local Ink = InkBlotches[math.random(1, #InkBlotches)]:Clone()
			Ink.Name = "Effect"
			Ink.BrickColor = BrickColor.new("Really black")
			Ink.Material = Enum.Material.Ice
			Ink.Reflectance = 0.2
			Ink.Size = Vector3.new((math.random(750, 1500) * 0.001), 0.2, (math.random(750, 1500) * 0.001))
			Ink.Mesh.Scale = (Ink.Mesh.Scale * Vector3.new(Ink.Size.X, 0, Ink.Size.Z))
			Ink.CanCollide = false
			local Sound = Sounds.Splat:Clone()
			Sound.Parent = Ink
			local PartCFrame = CFrame.new(RayPos, (CFrame.new(RayPos) + RayNormal * 2).p) * CFrame.Angles(-(math.pi / 2), (math.random(-360, 360) * 0.01), 0)
			PartCFrame = (PartCFrame * CFrame.new(0, (Ink.Size.Y / 4), 0))
			local Weld = Create("Motor"){
				Name = "Stick",
				Part0 = Ink,
				Part1 = Hit,
				C0 = PartCFrame:inverse(),
				C1 = Hit.CFrame:inverse(),
				Parent = Ink,
			}
			local SplatScriptClone = SplatScript:Clone()
			local CreatorValue = Create("ObjectValue"){
				Name = "Creator",
				Value = Creator.Value,
				Parent = Ink,
			}
			SplatScriptClone.Disabled = false
			SplatScriptClone.Parent = Ink
			Debris:AddItem(Ink, 5)
			Ink.Parent = game:GetService("Workspace")
			Sound:Play()
		end
	end
	IgnoreHit = true
	if Projectile and Projectile.Parent then
		Projectile:Destroy()
		Debris:AddItem(Projectile, 0)
	end
end

while not IgnoreHit do
	local Player = Creator.Value
	local Character
	if Player and Player:IsA("Player") then
		Character = Player.Character
	end
	local RayHit, RayPos, RayNormal = CastRay(Projectile.Position, Projectile.CFrame.lookVector, (Projectile.Size.Z * 2), {Character, Projectile}, false)
	if RayHit then
		Touched(RayHit)
	else
		Projectile.CFrame = (Projectile.CFrame + Projectile.CFrame.lookVector * 2)
	end
	wait(Rate)
end]]></ProtectedString>
				</Properties>
				<Item class="Script" referent="RBXDD3F1C6795B3431CB4411CF02F177CF4">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">HitScript</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Character = script.Parent

Debris = game:GetService("Debris")

Duration = script:FindFirstChild("Duration")

BaseUrl = "http://www.roblox.com/asset/?id="

Rate = (1 / 60)

NewFace = (BaseUrl .. "255037803")

if Duration then
	Head = Character:FindFirstChild("Head")
	if Head then
		Face = Head:FindFirstChild("face")
		if Face then
			OriginalFace = Face.Texture
			Face.Texture = NewFace
		end
	end
end

while Duration.Value > 0 do
	local Time = wait(Rate)
	Duration.Value = (Duration.Value - Time)
end

if Face then
	Face.Texture = OriginalFace
end

Debris:AddItem(script, 0.25)]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="Script" referent="RBX3106DB014BC746249B1E5E4FCA455BEA">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">SplatScript</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Part = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Creator = Part:WaitForChild("Creator")

BaseUrl = "http://www.roblox.com/asset/?id="

SplatTouchScript = script:WaitForChild("SplatTouchScript")

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

Part.Touched:connect(function(Hit)
	if not Hit or not Hit.Parent or Hit.Name == Part.Name then
		return
	end
	local Player = Creator.Value
	if not Player or not Player:IsA("Player") then
		return
	end
	local Character = Player.Character
	local character = Hit.Parent
	if character:IsA("Hat") or character:IsA("Tool") then
		character = character.Parent
	end
	if character == Character then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player == Player then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if not IsTeamMate(Player, player) and humanoid and humanoid.Health > 0 then
		local SplatTouchScriptClone = character:FindFirstChild(SplatTouchScript.Name)
		if not SplatTouchScriptClone then
			SplatTouchScriptClone = SplatTouchScript:Clone()
			local Duration = Create("NumberValue"){
				Name = "Duration",
				Value = math.huge,
				Parent = SplatTouchScriptClone,
			}
			SplatTouchScriptClone.Disabled = false
			SplatTouchScriptClone.Parent = character
		end
		SplatTouchScriptClone:FindFirstChild("Duration").Value = 5
	end
end)]]></ProtectedString>
					</Properties>
					<Item class="Script" referent="RBX50298E2E33324F9FB6671273913C7203">
						<Properties>
							<bool name="Disabled">true</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">SplatTouchScript</string>
							<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Character = script.Parent

Debris = game:GetService("Debris")

Duration = script:FindFirstChild("Duration")

BaseUrl = "http://www.roblox.com/asset/?id="

Rate = (1 / 60)

if Duration then
	Humanoid = Character:FindFirstChild("Humanoid")
	if Humanoid then
		Humanoid.WalkSpeed = 6
	end
end

while Duration.Value > 0 do
	local Time = wait(Rate)
	Duration.Value = (Duration.Value - Time)
end

if Humanoid then
	Humanoid.WalkSpeed = 16
end

Debris:AddItem(script, 0.25)]]></ProtectedString>
						</Properties>
					</Item>
				</Item>
				<Item class="Sound" referent="RBXD2C1D159A4204C21B25F6D908C6F2631">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Splat</string>
						<float name="Pitch">1</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222152</url></Content>
						<float name="Volume">0.5</float>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
</roblox>