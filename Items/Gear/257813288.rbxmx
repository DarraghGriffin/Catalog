<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX542349A76A2A446F975B290446E51257">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>1.5</X>
				<Y>1</Y>
				<Z>-1.89999998</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">NeonMysteryCape</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=250281816</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX4A224A4C820F4FE486695853846E0779">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-36.1200294</X>
					<Y>72.7200623</Y>
					<Z>-24.7299404</Z>
					<R00>0.892623782</R00>
					<R01>-0.450801969</R01>
					<R02>-1.04565277e-006</R02>
					<R10>0.450802088</R10>
					<R11>0.892623901</R11>
					<R12>2.89060108e-006</R12>
					<R20>-3.78516745e-007</R20>
					<R21>-3.07476944e-006</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX35C293398F5C412DA178B846B778A2CF">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=250281794</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=250281839</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX71F65C89F94C4C55A11AFFE6879F7367">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXB040CE3C8663472E97710D2F18172599">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=257279573</url></Content>
				<string name="Name">Flying</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX686758EC3AF7427898AAE9ABEB6354E5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://wwww.roblox.com/asset/?id="

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

--[[BaseEnchantmentCircle = BasePart:Clone()
BaseEnchantmentCircle.Name = "EnchantmentCircle"
BaseEnchantmentCircle.Transparency = 1
BaseEnchantmentCircle.Size = Vector3.new(9.8, 0.2, 9.8)
BaseEnchantmentCircle.CanCollide = false
for i, v in pairs({"Top", "Bottom"}) do
	local EnchantmentDecal = Create("Decal"){
		Name = "Decal",
		Transparency = 0,
		Texture = (BaseUrl .. "212259445"),
		Face = Enum.NormalId[v],
		Parent = BaseEnchantmentCircle,
	}
end]]

SpeedForParticle = 10

ReloadTime = 3

Sparkles = {}

Rate = (1 / 60)

MouseDown = false
ToolEquipped = false

Tool.Enabled = true

function SetUpCloak(CreateNew)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	if not CreateNew then
		return
	end
	ParticlePart = BasePart:Clone()
	ParticlePart.Name = "ParticlePart"
	ParticlePart.Transparency = 1
	ParticlePart.CanCollide = false
	ParticleWeld = Create("Weld"){
		Name = "Weld",
		Part0 = Torso,
		Part1 = ParticlePart,
		C0 = (CFrame.new(0, -3.5, 0) * CFrame.Angles((math.pi / 4), 0, 0)),
		C1 = CFrame.new(0, 0, 0),
		Parent = ParticlePart,
	}
	for i = 1, 5 do
		local Sparkle = Create("Sparkles"){
			Name = "Sparkles",
			Enabled = (Torso.Velocity.magnitude > SpeedForParticle),
			SparkleColor = Color3.new(math.random(), math.random(), math.random()),
			Parent = ParticlePart,
		}
		table.insert(Sparkles, Sparkle)
	end
	Cloak = Handle:Clone()
	Cloak.Name = "Cloak"
	Cloak.Transparency = 0
	Cloak.CanCollide = false
	CloakWeld = Create("Weld"){
		Name = "Weld",
		Part0 = Torso,
		Part1 = Cloak,
		C0 = ((CFrame.new(0, -1, 0, 1, 0, -0, 0, 0, 1, 0, -1, -0) + Vector3.new(1.5, 1.5, -1.5)) * CFrame.Angles((math.pi / 2), 0, 0)),
		C1 = Tool.Grip,
		Parent = Cloak,
	}
	for i, v in pairs({Cloak, ParticlePart}) do
		v.Parent = Tool
	end
	Spawn(function()
		while ParticlePart and ParticlePart.Parent and ToolEquipped and CheckIfAlive() do
			local Enabled = (Torso.Velocity.Magnitude > SpeedForParticle and Humanoid:GetState().Name == "Freefall")
			for i, v in pairs(Sparkles) do
				v.SparkleColor = Color3.new(math.random(-12, 22), math.random(-12, 22), math.random(-12, 22))
				v.Enabled = Enabled
			end
			wait(0.5)
		end
	end)
	--[[Spawn(function()
		EnchantmentCircle = BaseEnchantmentCircle:Clone()
		local SpinVelocity = Create("BodyAngularVelocity"){
			angularvelocity = Vector3.new(0, 1, 0),
			maxTorque = Vector3.new(0, math.huge, 0),
			Parent = EnchantmentCircle,
		}
		local SpinPosition = Create("BodyPosition"){
			maxForce = Vector3.new(math.huge, math.huge, math.huge),
			Parent = EnchantmentCircle,
		}
		EnchantmentCircle.CFrame = (Torso.CFrame * CFrame.new(0, -3, 0))
		SpinPosition.position = EnchantmentCircle.CFrame.p
		EnchantmentCircle.Parent = Tool
		local StartTime = tick()
		while EnchantmentCircle and EnchantmentCircle.Parent and ToolEquipped and CheckIfAlive() do
			if math.abs(Torso.Velocity.Y) < 15 and Humanoid:GetState().Name ~= "Freefall" then
				SpinPosition.position = (Torso.CFrame * CFrame.new(0, -3, 0)).p
			end
			wait(Rate)
		end
		if EnchantmentCircle and EnchantmentCircle.Parent then
			EnchantmentCircle:Destroy()
		end
	end)]]
end

function Activated()
	if not Tool.Enabled or not CheckIfAlive() or not ToolEquipped or MouseDown then
		return
	end
	MouseDown = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		SetUpCloak(true)
	end)
	Handle.Transparency = 1
	ToolEquipped = true
end

function Unequipped()
	Sparkles = {}
	Spawn(function()
		SetUpCloak(false)
	end)
	Handle.Transparency = 0
	ToolEquipped = false
end

SetUpCloak(false)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX539B9CFB7A0F46FD85836B669E20DAAE">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://wwww.roblox.com/asset/?id="

Animations = {
	Flying = {Animation = Tool:WaitForChild("Flying"), FadeTime = nil, Weight = nil, Speed = 0.5, Manual = true},
}

AnimationTracks = {}

Gravity = 196.20
JumpHeightPercentage = 0.25

Gliding = false
SpaceDown = false

LastTeleport = 0

BaseSpeed = 16
IncreasedSpeed = (BaseSpeed * 1.5)
FlightSpeed = (BaseSpeed * 3)

ToolEquipped = false

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local function StopAnimation(Animation)
		for i, v in pairs(AnimationTracks) do
			if v.Animation == Animation then
				v.AnimationTrack:Stop(value.EndFadeTime)
				if v.TrackStopped then
					v.TrackStopped:disconnect()
				end
				table.remove(AnimationTracks, i)
			end
		end
	end
	if mode == "PlayAnimation" then
		for i, v in pairs(AnimationTracks) do
			if v.Animation == value.Animation then
				if value.Speed then
					v.AnimationTrack:AdjustSpeed(value.Speed)
					return
				elseif value.Weight or value.FadeTime then
					v.AnimationTrack:AdjustWeight(value.Weight, value.FadeTime)
					return
				else
					StopAnimation(value.Animation, false)
				end
			end
		end
		local AnimationMonitor = Create("Model"){}
		local TrackEnded = Create("StringValue"){Name = "Ended"}
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		local TrackStopped
		if not value.Manual then
			TrackStopped = AnimationTrack.Stopped:connect(function()
				if TrackStopped then
					TrackStopped:disconnect()
				end
				StopAnimation(value.Animation, true)
				TrackEnded.Parent = AnimationMonitor
			end)
		end
		table.insert(AnimationTracks, {Animation = value.Animation, AnimationTrack = AnimationTrack, TrackStopped = TrackStopped})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
		if TrackStopped then
			AnimationMonitor:WaitForChild(TrackEnded.Name)
		end
		return TrackEnded.Name
	elseif mode == "StopAnimation" and value then
		StopAnimation(value.Animation)
	end
end

function GetAllConnectedParts(Object)
	local Parts = {}
	local function GetConnectedParts(Object)
		for i, v in pairs(Object:GetConnectedParts()) do
			local Ignore = false
			for ii, vv in pairs(Parts) do
				if v == vv then
					Ignore = true
				end
			end
			if not Ignore then
				table.insert(Parts, v)
				GetConnectedParts(v)
			end
		end
	end
	GetConnectedParts(Object)
	return Parts
end

function SetGravityEffect(Table)
	local Table = (Table or {})
	local Multiplier = (Table.Multiplier or 1)
	if not GravityEffect or not GravityEffect.Parent then
		GravityEffect = Create(Table.Class or "BodyForce"){
			Name = "GravityCoilEffect",
		}
		for i, v in pairs(Table.Properties or {}) do
			pcall(function()
				GravityEffect[i] = v
			end)
		end
	end
	local TotalMass = 0
	local ConnectedParts = GetAllConnectedParts(Torso)
	for i, v in pairs(ConnectedParts) do
		if v:IsA("BasePart") then
			TotalMass = (TotalMass + v:GetMass())
		end
	end
	local TotalMass = ((TotalMass * Gravity) * Multiplier)
	if GravityEffect:IsA("BodyVelocity") then
		GravityEffect.maxForce = Vector3.new(0, TotalMass, 0)
	elseif GravityEffect:IsA("BodyForce") then
		GravityEffect.force = Vector3.new(0, TotalMass, 0)
	end
	GravityEffect.Parent = Torso
	return GravityEffect
end

function HandleGravityEffect(Enabled, Table)
	if not CheckIfAlive() then
		return
	end
	for i, v in pairs(Torso:GetChildren()) do
		if v:IsA("BodyForce") or v:IsA("BodyVelocity") then
			Debris:AddItem(v, 0)
		end
	end
	for i, v in pairs({ToolUnequipped1, DescendantAdded, DescendantRemoving}) do
		if v then
			v:disconnect()
		end
	end
	if Enabled then
		CurrentlyEquipped = true
		ToolUnequipped1 = Tool.Unequipped:connect(function()
			CurrentlyEquipped = false
		end)
		SetGravityEffect(Table)
		DescendantAdded = Character.DescendantAdded:connect(function()
			if not CurrentlyEquipped or not CheckIfAlive() then
				return
			end
			SetGravityEffect(Table)
		end)
		DescendantRemoving = Character.DescendantRemoving:connect(function()
			if not CurrentlyEquipped or not CheckIfAlive() then
				return
			end
			SetGravityEffect(Table)
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Activated()
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local Time = tick()
	local Camera = game:GetService("Workspace").CurrentCamera
	if (Time - LastTeleport) > 2 then
		local Dir = Camera.CoordinateFrame.p - Torso.CFrame.p
		Dir = Vector3.new(Dir.X, 0, Dir.Z).unit
		local BodyPosition = Create("BodyPosition"){
			maxForce = Vector3.new(math.huge, 0, math.huge),
			position = (Torso.CFrame.p - Dir * 40),
		}
		Debris:AddItem(BodyPosition, 0.5)
		BodyPosition.Parent = Torso
		LastTeleport = Time
	end
end

function IsFreeFalling()
	return (CheckIfAlive() and Humanoid:GetState() == Enum.HumanoidStateType.Freefall)
end

function KeyPressed(Key, Down)
	if Key == " " then
		SpaceDown = Down
		local CurrentState = Humanoid:GetState().Name
		local RayHit, RayPos, RayNormal = CastRay(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2 + 0.2), {Character}, false)
		if SpaceDown and not Gliding and RayHit and CurrentState ~= "None" and CurrentState ~= "Freefall" and CurrentState ~= "FallingDown" and CurrentState ~= "GettingUp" then
			if BodyForce and BodyForce.Parent then
				Debris:AddItem(GravityEffect, 0)
			end
			BodyForce = SetGravityEffect({Multiplier = 4})
			Debris:AddItem(BodyForce, 0.2)
		elseif SpaceDown and not Gliding and IsFreeFalling() then
			Gliding = true
			HandleGravityEffect(true, {Class = "BodyVelocity", Properties = {P = 500, velocity = Vector3.new(0, -5, 0)}})
			for i, v in pairs({BodyForce, BodyGyro}) do
				if v and v.Parent then
					Debris:AddItem(v, 0)
				end
			end
			Torso.Velocity = Vector3.new(0, 0, 0)
			Torso.RotVelocity = Vector3.new(0, 0, 0)
			Humanoid.WalkSpeed = FlightSpeed
			Humanoid.AutoRotate = false
			BodyGyro = Create("BodyGyro"){
				maxTorque = Vector3.new(math.huge, math.huge, math.huge),
				P = (10 ^ 5),
				Parent = Torso,
			}
			SetAnimation("PlayAnimation", Animations.Flying)
			while IsFreeFalling() and SpaceDown and Gliding and ToolEquipped do
				local Camera = game:GetService("Workspace").CurrentCamera
				local Velocity = Torso.Velocity
				Velocity = Vector3.new(Velocity.X, 0, Velocity.Z)
				local FlightDirection = Camera.CoordinateFrame.lookVector
				if Velocity.Magnitude > 10 then
					FlightDirection = Velocity.Unit
				end
				FlightDirection = (FlightDirection * Vector3.new(1, 0, 1))
				local FlightCFrame = (CFrame.new(Torso.Position, (Torso.CFrame + FlightDirection * 2).p) * CFrame.Angles(-(math.pi / 2), (math.pi * 2), 0))
				if tostring(FlightCFrame.p.X) ~= "-1.#IND" and FlightCFrame.p.Y ~= "-1.#IND" and FlightCFrame.p.Z ~= "-1.#IND" then
					BodyGyro.cframe = FlightCFrame
				end
				wait()
			end
			SetAnimation("StopAnimation", Animations.Flying)
			Humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
			Humanoid.AutoRotate = true
			if CheckIfAlive() then
				Humanoid.WalkSpeed = ((ToolEquipped and IncreasedSpeed) or BaseSpeed)
			end
			Gliding = false
			HandleGravityEffect(false)
			Debris:AddItem(BodyGyro, 0)
		end
	end
end

function Equipped(Mouse)
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		Humanoid.WalkSpeed = IncreasedSpeed
		Mouse.KeyDown:connect(function(Key)
			KeyPressed(Key, true)
		end)
		Mouse.KeyUp:connect(function(Key)
			KeyPressed(Key, false)
		end)
		for i, v in pairs({HumanoidDied}) do
			if v then
				v:disconnect()
			end
		end
		HumanoidDied = Humanoid.Died:connect(function()
			if GravityEffect and GravityEffect.Parent then
				Debris:AddItem(GravityEffect, 0)
			end
		end)
		local CurrentlyEquipped = true
		if ToolUnequipped2 then
			ToolUnequipped2:disconnect()
		end
		ToolUnequipped2 = Tool.Unequipped:connect(function()
			CurrentlyEquipped = false
		end)
	end)
	ToolEquipped = true
end

function Unequipped()
	SpaceDown = false
	if CheckIfAlive() then
		Humanoid.WalkSpeed = BaseSpeed
		Humanoid.AutoRotate = true
		Humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
	end
	for i, v in pairs(AnimationTracks) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({HumanoidDied, ToolUnequipped2, BodyForce, BodyGyro, ToolUnequipped1, DescendantAdded, DescendantRemoving}) do
		if tostring(v) == "Connection" then
			v:disconnect()
		elseif type(v) == "userdata" and v and v.Parent then
			Debris:AddItem(v, 0)
		end
	end
	HandleGravityEffect(false)
	ToolEquipped = false
end

--Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX4599D7B5FCEE4988AD410D0F6060F3BD">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-32.1548004</X>
					<Y>74.5077133</Y>
					<Z>-26.5771561</Z>
					<R00>-0.47334516</R00>
					<R01>-0.337456822</R01>
					<R02>0.813675106</R02>
					<R10>-0</R10>
					<R11>0.923710227</R11>
					<R12>0.383091837</R12>
					<R20>-0.880877078</R20>
					<R21>0.181334674</R21>
					<R22>-0.437233746</R22>
				</CoordinateFrame>
				<float name="FieldOfView">52.5</float>
				<CoordinateFrame name="Focus">
					<X>-33.7577591</X>
					<Y>73.7530136</Y>
					<Z>-25.7157955</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>