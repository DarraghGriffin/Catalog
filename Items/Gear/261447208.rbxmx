<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX7FDDF7DF109B4E48996EE4ED59A3BAF0">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0.5</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">MetallicEarthOrb</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=261406129</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX9DEBBA42444B4F329698FB08704D3FF7">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.197327003</X>
					<Y>6.65140915</Y>
					<Z>0.0363859981</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXEC8C7AB8D1784C999624D8FDC796FE81">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=261484475 </url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.5</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=261464028</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX1F71D02DE642403A8584F1E87447A113">
				<Properties>
					<float name="EmitterSize">10</float>
					<bool name="Looped">false</bool>
					<string name="Name">LightningSound</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1</float>
					<bool name="Playing">false</bool>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=72585619</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX0D603D70974940E5B6B6D019E1811C18">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid">{95495741-ABDB-4FD9-AD30-AD8EEB30670F}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer
--Updated for R15 avatar by StarWars

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Goldify = script:WaitForChild("Goldify")

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Instance.new("Part")
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.CanCollide = true
BasePart.Locked = true
BasePart.Anchored = false

Orb = BasePart:Clone()
Orb.Name = "Earth"
Orb.Size = Vector3.new(1.5, 1.5, 1.5)
OrbMesh = Instance.new("SpecialMesh")
OrbMesh.MeshType = Enum.MeshType.FileMesh
OrbMesh.MeshId = (BaseUrl .. "230850974")
OrbMesh.TextureId = (BaseUrl .. "261464028")
OrbMesh.Scale = Vector3.new(0.75, 0.75, 0.75)
OrbMesh.VertexColor = Vector3.new(1, 1, 1)
OrbMesh.Parent = Orb

Sounds = {
	LightningSound = Handle:WaitForChild("LightningSound"),
}

ToolEquipped = false

Damage = 40
ReloadTime = 10

Gravity = 196.20
Rate = (1 / 60)

ProjectileNames = {"Lightning", "Lava", "Magma"}

Tool.Enabled = true

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Instance.new("ObjectValue")
	Creator_Tag.Name = "creator"
	Creator_Tag.Value = player
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function CheckIntangible(Hit)
	if Hit and Hit.Parent then
		if not Hit.CanCollide or CheckTableForString(ProjectileNames, Hit.Name) or Hit.Parent:IsA("Hat") or Hit.Parent:IsA("Tool") then
			return true
		end
	end
	return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function LightningStrike(Source, Destination)
	local MaxSegLength = 15
	local MinSegLength = 3
	local MaxOffset = 4
	local LastDistance = 0
	local Points = {Source}
	local Direction = (Destination - Source).unit
	local Distance = (Source - Destination).magnitude
	
	while (Distance - LastDistance) > MaxSegLength do
		LastDistance = (LastDistance + ((math.random() * (MaxSegLength - MinSegLength)) + MinSegLength))
		local NewVector = (Source + (LastDistance * Direction) + Vector3.new(math.random(), math.random(), math.random()))
		table.insert(Points, NewVector)
		wait(Rate)
	end	
	table.insert(Points, Destination)
	
	local Parts = {}
	
	local LightningModel = Instance.new("Model")
	LightningModel.Name = "LightningModel"
	Debris:AddItem(LightningModel, 5)
	LightningModel.Parent = game:GetService("Workspace")	
	
	local ObjectHit
	for Index, i in pairs(Points) do
		local LastPart = BasePart:Clone()
		LastPart.BrickColor = BrickColor.new("Light grey metallic")
		LastPart.Material = Enum.Material.Plastic
		for i, v in pairs({"Top", "Bottom", "Left", "Right", "Front", "Back"}) do
			LastPart[v .. "Surface"] = Enum.SurfaceType.SmoothNoOutlines
		end
		LastPart.Reflectance = 0.25
		LastPart.Transparency = 0.3
		LastPart.Anchored = true
		LastPart.CanCollide = false
		local Mesh = Instance.new("CylinderMesh")
		Mesh.Scale = Vector3.new(1, 1, 1)
		Mesh.Parent = LastPart
		if Points[Index + 1] then		
			LastPart.Size = Vector3.new(0.5, (i - Points[Index + 1]).magnitude, 0.5)
			LastPart.CFrame = CFrame.new(((i + Points[Index + 1]) / 2), Points[Index + 1]) * CFrame.Angles((math.pi / 2), 0, 0)
			local RayHit, RayPos, RayNormal = CastRay(LastPart.Position, CFrame.new((LastPart.CFrame * CFrame.new(0, (LastPart.Size.Y / 2), 0)).p, (LastPart.CFrame * CFrame.new(0, 1, 0)).p).lookVector, LastPart.Size.Y, {Character, LightningModel}, false)
			Debris:AddItem(LastPart, 1)
			LastPart.Parent = LightningModel
			local FadeRate = 15
			Spawn(function()
				for i = 1, FadeRate do
					LastPart.Transparency = ((1 / FadeRate) * i)
					wait(Rate)
				end
			end)
			if RayHit then
				ObjectHit = RayHit
				break
			end
			wait(Rate)
		end
	end
	
	return ObjectHit
end

function GetTotalParts(MaxParts, PossibleParts, Parts)
	if MaxParts < PossibleParts then
		return MaxParts
	elseif Parts >= MaxParts then
		return 0
	elseif MaxParts >= PossibleParts then
		local PartCount = (MaxParts - PossibleParts)
		if Parts <= MaxParts then
			PartCount = (MaxParts - Parts)
			if PartCount > PossibleParts then
				return PossibleParts
			else
				return PartCount
			end
		elseif PartCount >= PossibleParts then
			return PossibleParts
		else
			return PartCount
		end
	end
end

function GetParts(Region, MaxParts, Ignore)
	local Parts = {}
	local RerunFailed = false
	while #Parts < MaxParts and not RerunFailed do
		local Region = Region
		local PossibleParts = GetTotalParts(MaxParts, 100, #Parts)
		local PartsNearby = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region, Ignore, PossibleParts)
		if #PartsNearby == 0 then
			RerunFailed = true
		else
			for i, v in pairs(PartsNearby) do
				table.insert(Parts, v)
				table.insert(Ignore, v)
			end
		end
	end
	return Parts
end

function CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end

function CastMagma(character)
	if not OrbClone or not OrbClone.Parent then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
	if not humanoid or humanoid.Health == 0 or not torso then
		return
	end
	Spawn(function()
		local ObjectHit = LightningStrike(OrbClone.Position, torso.Position)
		if ObjectHit then
			local HitCharacter = ObjectHit.Parent
			if HitCharacter:IsA("Hat") then
				HitCharacter = HitCharacter.Parent
			end
			local HitHumanoid = HitCharacter:FindFirstChild("Humanoid")
			if not HitHumanoid or HitHumanoid.Health == 0 or HitHumanoid ~= humanoid then
				return
			end
			for i, v in pairs(HitCharacter:GetChildren()) do
				local Fire = Instance.new("Fire")
				Fire.Color = Color3.new((170 / 255), (170 / 255), (125 / 255))
				Fire.SecondaryColor = Fire.Color
				Delay(1.5, (function()
					Fire.Enabled = false
				end))
				Debris:AddItem(Fire, 2)
				Fire.Parent = v
			end
			for i, v in pairs(character:GetChildren()) do
				if v:IsA("ForceField") then
					return
				end
			end
			local HealthAfter = (humanoid.Health - Damage)
			UntagHumanoid(humanoid)
			TagHumanoid(humanoid, Player)
			if HealthAfter <= 0 then
				local GoldifyScript = Goldify:Clone()
				GoldifyScript.Disabled = false
				GoldifyScript.Parent = character
				humanoid:TakeDamage(humanoid.Health)
			else
				humanoid:TakeDamage(Damage)
				--humanoid.Sit = true
			end
		end
	end)
end

function GetPlayersNearby(Radius)
	local NegativeRegion = (Torso.Position - Vector3.new(Radius, Radius, Radius))
	local PositiveRegion = (Torso.Position + Vector3.new(Radius, Radius, Radius))
	local Region = Region3.new(NegativeRegion, PositiveRegion)
	local IgnoreList = {Character}
	for i, v in pairs(Players:GetChildren()) do
		if v:IsA("Player") and v ~= Player and v.Character and v.Character.Parent and IsTeamMate(Player, v) then
			table.insert(IgnoreList, v.Character)
		end
	end
	local Parts = GetParts(Region, 500, IgnoreList)
	local Humanoids = {}
	for i, v in pairs(Parts) do
		local character = v.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		local humanoid = character:FindFirstChild("Humanoid")
		local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
		if humanoid and humanoid.Health > 0 and torso and not CheckTableForInstance(Humanoids, humanoid) then
			table.insert(Humanoids, humanoid)
		end
	end
	return Humanoids
end 

function OrbitPlayer()
	local Duration = 35
	local StartTick = tick()
	local LastStrike = 0
	local StrikeDelay = {Min = 1.25, Max = 2, Current = 0}
	local OrbitRadius = 7
	while OrbClone and OrbClone.Parent and ToolEquipped and CheckIfAlive() and (tick() - StartTick) <= Duration do
		local Frames = 45
		local FullAngle = (math.pi * 2)
		for i = 1, Frames do
			if not OrbClone or not OrbClone.Parent or not ToolEquipped or not CheckIfAlive() then
				return
			end
			local Angle = ((FullAngle / Frames) * i)
			OrbClone.CFrame = ((CFrame.new(Torso.Position) + (CFrame.new(Torso.Position) * CFrame.Angles(0, Angle, 0)) .lookVector * OrbitRadius) * CFrame.Angles(0, -Angle, -Angle))
			if (tick() - LastStrike) >= StrikeDelay.Current then
				StrikeDelay.Current = (math.random((StrikeDelay.Min * 1000), (StrikeDelay.Max * 1000)) * 0.001)
				local Humanoids = GetPlayersNearby(15)
				if #Humanoids > 0 then
					LastStrike = tick()
					Sounds.LightningSound:Play()
					for i, v in pairs(Humanoids) do
						if v and v.Health > 0 and v.Parent then
							local character = v.Parent
							CastMagma(character)
						end
					end
				end
			end
			wait()
		end
	end
	if OrbClone and OrbClone.Parent then
		OrbClone:Destroy()
	end
end

function CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end

function Activated()
	if not Tool.Enabled or not ToolEquipped and (not OrbClone or not OrbClone.Parent) then
		return
	end
	Tool.Enabled = false
	OrbClone = Orb:Clone()
	Handle.Transparency = 1
	OrbClone.Parent = Character
	OrbClone.Anchored = true
	OrbitPlayer()
	wait(ReloadTime)
	Handle.Transparency = 0
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	for i, v in pairs(Sounds) do
		v:Stop()
	end
	if OrbClone and OrbClone.Parent then
		OrbClone:Destroy()
	end
	ToolEquipped = false
end

Tool.Changed:connect(function(Property)
	if Property == "Parent" then
		Handle.Transparency = (((Tool.Parent:IsA("Backpack") or Players:GetPlayerFromCharacter(Tool.Parent)) and ((Tool.Enabled and 0) or 1)) or 0)
	end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBXA460BFD62B8C4FE2BABB6C643EF56A72">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Goldify</string>
					<string name="ScriptGuid">{DECB0494-D06C-41A3-9099-9C477FA4B979}</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")

Debris = game:GetService("Debris")

Parts = {}

BaseColor = BrickColor.new("Bright yellow")
Color = BaseColor.Color

Classes = {
	BasePart = {
		BrickColor = BaseColor,
		Material = Enum.Material.Plastic,
		Reflectance = 0.5,
		TopSurface = Enum.SurfaceType.SmoothNoOutlines,
		BottomSurface = Enum.SurfaceType.SmoothNoOutlines,
		FrontSurface = Enum.SurfaceType.SmoothNoOutlines,
		BackSurface = Enum.SurfaceType.SmoothNoOutlines,
		LeftSurface = Enum.SurfaceType.SmoothNoOutlines,
		RightSurface = Enum.SurfaceType.SmoothNoOutlines,
		Anchored = true,
		CanCollide = true,
	},
	FileMesh = {
		TextureId = "",
	},
	DataModelMesh = {
		VertexColor = Vector3.new(Color.r, Color.g, Color.b),
	},
	CharacterMesh = {
		BaseTextureId = 0,
		OverlayTextureId = 0,
	},
	Shirt = {
		ShirtTemplate = "",
	},
	Pants = {
		PantsTemplate = "",
	},
	FaceInstance = {
		Texture = "",
	},
	Sparkles = {
		SparkleColor = Color,
	},
	Fire = {
		Color = Color,
		SecondaryColor = Color,
	},
	Smoke = {
		Color = Color,
	}
}

Gravity = 196.20

Duration = 10

Objects = {}
RemovedObjects = {}
FakeParts = {}
Hats = {}
Tools = {}

function DestroyScript()
	Debris:AddItem(script, 0.5)
end

function GetAllConnectedParts(Object)
	local Parts = {}
	local function GetConnectedParts(Object)
		for i, v in pairs(Object:GetConnectedParts()) do
			local Ignore = false
			for ii, vv in pairs(Parts) do
				if v == vv then
					Ignore = true
				end
			end
			if not Ignore then
				table.insert(Parts, v)
				GetConnectedParts(v)
			end
		end
	end
	GetConnectedParts(Object)
	return Parts
end

function Weld(Parent, PrimaryPart)
	local Parts = {}
	local Welds = {}
	local function WeldModel(Parent, PrimaryPart)
		for i, v in pairs(Parent:GetChildren()) do
			if v:IsA("BasePart") then
				if v ~= PrimaryPart then
					local Weld = Instance.new("Weld")
					Weld.Name = "Weld"
					Weld.Part0 = PrimaryPart
					Weld.Part1 = v
					Weld.C0 = PrimaryPart.CFrame:inverse()
					Weld.C1 = v.CFrame:inverse()
					Weld.Parent = PrimaryPart
					table.insert(Welds, Weld)
				end
				table.insert(Parts, v)
			end
			WeldModel(v, PrimaryPart)
		end
	end
	WeldModel(Parent, PrimaryPart)
	return Parts, Welds
end

function Decorate(Object)
	local ObjectData = {
		Object = nil,
		Properties = {},
	}
	for i, v in pairs(Classes) do
		if Object:IsA(i) then
			if Object:IsA("CharacterMesh") then
				local Mesh = Instance.new("SpecialMesh")
				Mesh.MeshType = Enum.MeshType.FileMesh
				Mesh.MeshId = ("http://www.roblox.com/asset/?id=" .. Object.MeshId)
				for ii, vv in pairs(Character:GetChildren()) do
					if vv:IsA("BasePart") and Object.BodyPart.Name == string.gsub(vv.Name, " ", "") then
						Mesh.Parent = vv
						table.insert(RemovedObjects, {Object = Object, NewObject = Mesh, Parent = Object.Parent})
						Object.Parent = nil
					end
				end
			else
				ObjectData.Object = Object
				for ii, vv in pairs(v) do
					local PropertyValue = nil
					local PropertyValueSet = false
					pcall(function()
						PropertyValue = Object[ii]
						PropertyValueSet = true
						Object[ii] = vv
					end)
					if PropertyValueSet then
						ObjectData.Properties[ii] = PropertyValue
					end
				end
			end
		end
	end
	table.insert(Objects, ObjectData)
end

function Redesign(Parent)
	for i, v in pairs(Parent:GetChildren()) do
		if v ~= script then
			Decorate(v)
			Redesign(v)
		end
	end
end

if not Humanoid then
	DestroyScriot()
	return
end

for i, v in pairs(Character:GetChildren()) do
	if v:IsA("Hat") or v:IsA("Tool") then
		local FakeObject = v:Clone()
		Decorate(FakeObject)
		table.insert(((v:IsA("Hat") and Hats) or Tools), v)
		for ii, vv in pairs(FakeObject:GetChildren()) do
			if vv:IsA("BasePart") then
				local FakePart = vv:Clone()
				FakePart.Name = "Hat"
				table.insert(FakeParts, FakePart)
				FakePart.Parent = Character
				FakePart.CFrame = vv.CFrame
			end
		end
	end
end

Humanoid:UnequipTools()

for i, v in pairs({Hats, Tools}) do
	for ii, vv in pairs(v) do
		vv.Parent = nil
	end
end

Redesign(Character)

FakeModel = Instance.new("Model")
FakeModel.Name = Character.Name
for i, v in pairs(Character:GetChildren()) do
	if v:IsA("BasePart") then
		local FakePart = v:Clone()
		for ii, vv in pairs(FakePart:GetChildren()) do
			if not vv:IsA("DataModelMesh") then
				vv:Destroy()
			end
		end
		v:Destroy()
		FakePart.Parent = FakeModel
	end
end

local Torso = FakeModel:FindFirstChild("Torso")
if Torso then
	local Parts, Welds = Weld(FakeModel, Torso)
	for i, v in pairs(Parts) do
		if v and v.Parent then
			if v.Name == "Hat" then
				v.CanCollide = false
			end
			v.Anchored = false
		end
	end
	local Mass = 0
	local Speed = 10
	local ConnectedParts = GetAllConnectedParts(Torso)
	for i, v in pairs(ConnectedParts) do
		Mass = (Mass + v:GetMass())
	end
	Mass = (Mass * Gravity)
	--[[local BodyGyro = Instance.new("BodyGyro")
	BodyGyro.maxTorque = (Vector3.new(Mass, Mass, Mass) * Speed)
	BodyGyro.Parent = Torso
	Delay(3, (function()
		if BodyGyro and BodyGyro.Parent then
			BodyGyro.cframe = Torso.CFrame * CFrame.Angles(-(math.pi / 2), 0, 0)
		end
	end))]]
end

Debris:AddItem(FakeModel, Duration)
FakeModel.Parent = game:GetService("Workspace")]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX9CF6C3594956456282D642F7F306CC67">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
	</Item>
</roblox>