<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXB937449A85D249E9B26C8CA96960DCBA">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.600000024</X>
				<Y>-1.5</Y>
				<Z>-0.300000012</Z>
				<R00>0.471293867</R00>
				<R01>4.18654527e-005</R01>
				<R02>-0.881971896</R02>
				<R10>-1.04840583e-005</R10>
				<R11>1</R11>
				<R12>4.18654527e-005</R12>
				<R20>0.881971896</R20>
				<R21>-1.04840583e-005</R21>
				<R22>0.471293867</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">RainbowNeonPhoenix</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset?id=257885125  </url></Content>
			<string name="ToolTip">Click to direct Phoenix</string>
		</Properties>
		<Item class="Part" referent="RBX22A4DBAE2C8C465B829D69BA21FEBD59">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.0482404232</X>
					<Y>13.9585123</Y>
					<Z>13.6983042</Z>
					<R00>0.787042916</R00>
					<R01>0.0233498737</R01>
					<R02>-0.616449535</R02>
					<R10>-0.0209017321</R10>
					<R11>0.999719024</R11>
					<R12>0.0111812977</R12>
					<R20>0.616537392</R20>
					<R21>0.00408499409</R21>
					<R22>0.787309825</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.39999998</X>
					<Y>4</Y>
					<Z>1.29999995</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXBDBFB84AD0BA485182B08FA8FBBA6B2B">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=92135477</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.5</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=257883906 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBXCF102A8984C94F0F80BAB179E29D3E3D">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>1.27014172</X>
						<Y>15.723588</Y>
						<Z>14.8324871</Z>
						<R00>0.787042916</R00>
						<R01>0.0233498737</R01>
						<R02>-0.616449535</R02>
						<R10>-0.0209017321</R10>
						<R11>0.999719024</R11>
						<R12>0.0111812977</R12>
						<R20>0.616537392</R20>
						<R21>0.00408499409</R21>
						<R22>0.787309825</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">RightWing</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>2.70000005</Y>
						<Z>0.200000003</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBXE4FBF2E4C8804EB1B5DE28A827B524C5">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=92135508</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.5</X>
							<Y>0.5</Y>
							<Z>0.5</Z>
						</Vector3>
						<Content name="TextureId"><url>http://www.roblox.com/asset/?id=257883906 </url></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Fire" referent="RBXBE59C8BC6F9242E0A195F5142299312E">
					<Properties>
						<Color3 name="Color">4289353215</Color3>
						<bool name="Enabled">true</bool>
						<string name="Name">Fire</string>
						<Color3 name="SecondaryColor">4289353215</Color3>
						<float name="heat_xml">8</float>
						<float name="size_xml">4</float>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBXADA058A71D23427786CF78F7717CEF3E">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>-1.46750772</X>
						<Y>15.7957773</Y>
						<Z>12.8150444</Z>
						<R00>0.787042916</R00>
						<R01>0.0233498737</R01>
						<R02>-0.616449535</R02>
						<R10>-0.0209017321</R10>
						<R11>0.999719024</R11>
						<R12>0.0111812977</R12>
						<R20>0.616537392</R20>
						<R21>0.00408499409</R21>
						<R22>0.787309825</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<token name="Material">256</token>
					<string name="Name">LeftWing</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>2.70000005</Y>
						<Z>0.200000003</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBXFDD6589098A24930B2847CE7453C78FC">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=92135524</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>0.5</X>
							<Y>0.5</Y>
							<Z>0.5</Z>
						</Vector3>
						<Content name="TextureId"><url>http://www.roblox.com/asset/?id=257883906 </url></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Fire" referent="RBX61CB791ECD0D4213950FBF3AB7E9FACC">
					<Properties>
						<Color3 name="Color">4289353215</Color3>
						<bool name="Enabled">true</bool>
						<string name="Name">Fire</string>
						<Color3 name="SecondaryColor">4289353215</Color3>
						<float name="heat_xml">8</float>
						<float name="size_xml">4</float>
					</Properties>
				</Item>
			</Item>
			<Item class="Fire" referent="RBXB5AD3A0C183144FA85910B1EF9EA8AC1">
				<Properties>
					<Color3 name="Color">4289353215</Color3>
					<bool name="Enabled">true</bool>
					<string name="Name">Fire</string>
					<Color3 name="SecondaryColor">4289353215</Color3>
					<float name="heat_xml">9</float>
					<float name="size_xml">4</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXAFA43A8D81724F599CD53A234D4CA306">
				<Properties>
					<float name="EmitterSize">10</float>
					<bool name="Looped">false</bool>
					<string name="Name">Sound</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">0.899999976</float>
					<bool name="Playing">false</bool>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=90731208</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.5</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBX1C28F18415EF4AB6A8878FBB9C278B52">
				<Properties>
					<CoordinateFrame name="C0">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>-3.26636873e-005</R00>
						<R01>4.31581502e-005</R01>
						<R02>-1</R02>
						<R10>9.29513355e-010</R10>
						<R11>1</R11>
						<R12>4.31581502e-005</R12>
						<R20>1</R20>
						<R21>4.80190998e-010</R21>
						<R22>-3.26636873e-005</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>1.70000303</X>
						<Y>-1.79999995</Y>
						<Z>-0.199998856</Z>
						<R00>-3.26636873e-005</R00>
						<R01>4.31581502e-005</R01>
						<R02>-1</R02>
						<R10>9.29513355e-010</R10>
						<R11>1</R11>
						<R12>4.31581502e-005</R12>
						<R20>1</R20>
						<R21>4.80190998e-010</R21>
						<R22>-3.26636873e-005</R22>
					</CoordinateFrame>
					<string name="Name">LeftWingWeld</string>
					<Ref name="Part0">RBX22A4DBAE2C8C465B829D69BA21FEBD59</Ref>
					<Ref name="Part1">RBXADA058A71D23427786CF78F7717CEF3E</Ref>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBX6E38F9AF48934F399FFBFD3F21BE6346">
				<Properties>
					<CoordinateFrame name="C0">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>-3.26636873e-005</R00>
						<R01>4.31581502e-005</R01>
						<R02>-1</R02>
						<R10>9.29513355e-010</R10>
						<R11>1</R11>
						<R12>4.31581502e-005</R12>
						<R20>1</R20>
						<R21>4.80190998e-010</R21>
						<R22>-3.26636873e-005</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>-1.69999921</X>
						<Y>-1.79999948</Y>
						<Z>-0.0999984741</Z>
						<R00>-3.26636873e-005</R00>
						<R01>4.31581502e-005</R01>
						<R02>-1</R02>
						<R10>9.29513355e-010</R10>
						<R11>1</R11>
						<R12>4.31581502e-005</R12>
						<R20>1</R20>
						<R21>4.80190998e-010</R21>
						<R22>-3.26636873e-005</R22>
					</CoordinateFrame>
					<string name="Name">RightWingWeld</string>
					<Ref name="Part0">RBX22A4DBAE2C8C465B829D69BA21FEBD59</Ref>
					<Ref name="Part1">RBXCF102A8984C94F0F80BAB179E29D3E3D</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX5702A3257509484EBC1E585A260FB733">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid">{DF7947D9-E683-4FA2-A670-1593E0B0C5CA}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer
--Updated for R15 avatar by StarWars

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

PhoenixScript = script:WaitForChild("PhoenixScript")
RemoverScript = script:WaitForChild("RemoverScript")
MonitorScript = script:WaitForChild("MonitorScript")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://wwww.roblox.com/asset/?id="

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

PhoenixDuration = (60 * 5)
SpawnDebounce = false

Objects = {
	LeftWing = Handle:WaitForChild("LeftWing"),
	RightWing = Handle:WaitForChild("RightWing"),
	LeftWeld = Handle:WaitForChild("LeftWingWeld"),
	RightWeld = Handle:WaitForChild("RightWingWeld"),
	Fire = Handle:WaitForChild("Fire")
}

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Tool.Enabled = true

function ToggleVisibility(Parent, Visible)
	local Transparency = ((Visible and 0) or 1)
	local function SetTransparency(Parent)
		for i, v in pairs((type(Parent) == "table" and Parent) or Parent:GetChildren()) do
			if v:IsA("BasePart") then
				v.Transparency = Transparency
			elseif v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") or v:IsA("Light") then
				v.Enabled = Visible
			end
			SetTransparency(v)
		end
	end
	SetTransparency(Parent)
	if Parent == Tool then
		Handle.Transparency = Transparency
		Handle.CanCollide = Visible
	end
end

function TrySpawnPhoenix()
	local CurrentPhoenixObject = Character:FindFirstChild("PhoenixRefObject")
	if CurrentPhoenixObject then
		if CurrentPhoenixObject.Value and CurrentPhoenixObject.Value.Parent then
			return
		else
			CurrentPhoenixObject:Destroy()
		end
	else
		CurrentPhoenix = Create("Model"){
			Name = "Phoenix",
		}
		local PhoenixBody = Handle:Clone()
		PhoenixBody.Name = "Torso"
		PhoenixBody.Parent = CurrentPhoenix
		local PhoenixRefObject = Create("ObjectValue"){
			Name = "PhoenixRefObject",
			Value = CurrentPhoenix,
			Parent = Character,
		}
		local MonitorScriptCopy = MonitorScript:Clone()
		MonitorScriptCopy.Disabled = false
		MonitorScriptCopy.Parent = PhoenixRefObject
		local Values = {
			{Name = "Creator", Class = "ObjectValue", Value = Player},
			{Name = "Tool", Class = "ObjectValue", Value = Tool},
			{Name = "TargetPoint", Class = "Vector3Value", Value = Vector3.new(0, 0, 0)},
		}
		for i, v in pairs(Values) do
			local Value = Create(v.Class){
				Name = v.Name,
				Value = v.Value,
				Parent = CurrentPhoenix,
			}
		end
		for i, v in pairs({PhoenixScript, RemoverScript}) do
			local ScriptClone = v:Clone()
			ScriptClone.Disabled = false
			ScriptClone.Parent = CurrentPhoenix
		end
		ToggleVisibility(CurrentPhoenix, true)
		Debris:AddItem(CurrentPhoenix, PhoenixDuration)
		CurrentPhoenix.Parent = game:GetService("Workspace")
		return true
	end
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	if not SpawnDebounce and TrySpawnPhoenix() then
		ToggleVisibility(Tool, false)
		return
	end
	local MousePosition = InvokeClient("MousePosition")
	if not MousePosition then
		return
	end
	MousePosition = MousePosition.Position
	local PhoenixRef = Character:FindFirstChild("PhoenixRefObject")
	if not PhoenixRef then
		return
	end
	local PhoenixModel = PhoenixRef.Value
	if PhoenixModel and PhoenixModel.Parent then
		local TargetPoint = PhoenixModel:FindFirstChild("TargetPoint")
		if not TargetPoint then
			return
		end
		TargetPoint.Value = MousePosition
	end
end 

function CheckIfAlive()
	return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")
	for i, v in pairs({Objects.LeftWeld, Objects.RightWeld}) do
		if v then
			v.Parent = Handle
		end
	end
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		if not SpawnDebounce then
			SpawnDebounce = true
			ToggleVisibility(Tool, false)
			TrySpawnPhoenix()
			wait(0.5)
			SpawnDebounce = false
		end
	end)
	Handle.Transparency = 1
	ToolEquipped = true
end

function Unequipped()
	ToggleVisibility(Tool, true)
	Handle.Transparency = 0
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
end)

ToggleVisibility(Tool, true)

Tool.Equipped:connect(Equipped)
Tool.Activated:connect(Activated)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBXF4ECD18DF8BD4E04AED3E06372D796F8">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RemoverScript</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Model = script.Parent
Humanoid = Model:FindFirstChild("Humanoid")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Creator = Model:FindFirstChild("Creator")
Tool = Model:FindFirstChild("Tool")

function DestroyModel()
	Debris:AddItem(Model, 5)
end

if not Creator or not Creator.Value or not Creator.Value:IsA("Player") or not Creator.Value.Parent or not Tool or not Tool.Value or not Tool.Value.Parent then
	DestroyModel()
	return
end

Creator = Creator.Value
Tool = Tool.Value

Character = Creator.Character
if not Character then
	DestroyModel()
	return
end

Creator.Changed:connect(function(Property)
	if Property == "Parent" and not Creator.Parent then
		DestroyModel()
	end
end)

Character.Changed:connect(function(Property)
	if Property == "Parent" and not Character.Parent then
		DestroyModel()
	end
end)

Tool.Changed:connect(function(Property)
	if Property == "Parent" then
		local Player = ((Tool.Parent and ((Tool.Parent:IsA("Backpack") and Tool.Parent.Parent) or Players:GetPlayerFromCharacter(Tool.Parent))) or nil)
		if (not Player or (Player and Player ~= Creator)) then
			DestroyModel()
		end
	end
end)

if Humanoid then
	Humanoid.Died:connect(function()
		DestroyModel()
	end)
end]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX7C5B5E00EB8E43538E49D6DD2DC90B4C">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">PhoenixScript</string>
					<string name="ScriptGuid">{A2DDFEA5-0B71-4286-B316-1A9FEB87CADF}</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer
--Updated for R15 avatar by StarWars

Phoenix = script.Parent
Body = Phoenix:WaitForChild("Torso")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Functions = require(script:WaitForChild("Functions"))

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://wwww.roblox.com/asset/?id="

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

BaseFireBall = BasePart:Clone()
BaseFireBall.Name = "Projectile"
BaseFireBall.Transparency = 0
BaseFireBall.Shape = Enum.PartType.Ball
BaseFireBall.Size = Vector3.new(1, 1, 1)
BaseFireBall.CanCollide = false
FireBallMesh = Create("SpecialMesh"){
	MeshId = (BaseUrl .. "57810032"),
	TextureId = (BaseUrl .. "57809568"),
	Scale = Vector3.new(2, 2, 2),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseFireBall,
}

Objects = {
	Creator = Phoenix:WaitForChild("Creator"),
	Tool = Phoenix:WaitForChild("Tool"),
	TargetPoint = Phoenix:WaitForChild("TargetPoint"),
	LeftWing = Body:WaitForChild("LeftWing"),
	RightWing = Body:WaitForChild("RightWing"),
	LeftWingWeld = Body:WaitForChild("LeftWingWeld"),
	RightWingWeld = Body:WaitForChild("RightWingWeld"),
	Fire = Body:WaitForChild("Fire"),
	Sound = Body:WaitForChild("Sound"),
}

Settings = {
	Aggressive = true, --Phoenix will attack enemies
	FriendlyFire = false, --Whether you can damage your teammates or not
	SmallDamage = 15,
	LargeDamage = 25, --Does more damage while tool is equipped
	AttackRange = 40,
	ShortReload = 2.5, --Shoots faster if given an Assigned area to move to
	LongReload = 4,
	EquipReloadBonus = -1.25, --Shoots faster when tool is equipped
	AssignmentDuration = 11,
	MaxSpeed = 80,
	Acceleration = 20,
	SubAcceleration = 4, --Relative speed when approaching target
	SearchRangeXZ = 35,
	SearchRangeY = 15,
	ChaseRange = 60,
}

Rate = (1 / 60)
Gravity = 196.20

LastAssignment = (tick() - 1000)
MoveToPoint = Vector3.new(0,0,0)
EnemyTarget = nil
Shooting = false

Fires = {Body:FindFirstChild("Fire"), Objects.LeftWing:FindFirstChild("Fire"), Objects.RightWing:FindFirstChild("Fire")}

Body.CanCollide = true

Objects.TargetPoint.Changed:connect(function() 
	LastAssignment = tick()
	MoveToPoint = Objects.TargetPoint.Value
end)

function GetCreator()
	local CreatorValue = Objects.Creator.Value
	return ((CreatorValue and CreatorValue.Parent and ((CreatorValue:IsA("Player") and CreatorValue) or Players:GetPlayerFromCharacter(CreatorValue))) or nil)
end

function CheckIfPhoenixAlive()
	return (((Phoenix and Phoenix.Parent and Body and Body.Parent) and true) or false)
end

function IsToolEquipped()
	local Creator = GetCreator()
	local Tool = Objects.Tool.Value
	if not Creator then
		return false
	end
	local Character = Creator.Character
	if not Character or not Character.Parent then
		return false
	end
	if not Tool or not Tool.Parent or Tool.Parent ~= Character then
		return false
	end
	return true
end

function Blow(Part)
	local TouchedConnection = Part.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent then
			return
		end
		local character = Hit.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		local humanoid = character:FindFirstChild("Humanoid")
		if not humanoid or not humanoid:IsA("Humanoid") or humanoid.Health == 0 then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		local CreatorPlayer = GetCreator()
		if player and CreatorPlayer and (player == CreatorPlayer or (not Settings.FriendlyFire and Functions.IsTeamMate(CreatorPlayer, player))) then
			return
		end
		local creator = character:FindFirstChild("Creator")
		if creator and creator:IsA("ObjectValue") and creator.Value == CreatorPlayer then
			return
		end
		local DamageAmount = ((IsToolEquipped() and Settings.LargeDamage) or Settings.SmallDamage)
		Functions.UntagHumanoid(humanoid)
		Functions.TagHumanoid(humanoid, CreatorPlayer)
		humanoid:TakeDamage(DamageAmount)
	end)
	return TouchedConnection
end

function Shoot(Object)
	if not CheckIfPhoenixAlive() then
		return false
	end
	local BodyGyro = Body:FindFirstChild("BodyGyro")
	local StartPosition = (Body.Position + Vector3.new(0, 2, 0))
	local Direction = (Object.Position - Body.Position).Unit
	if BodyGyro then
		BodyGyro.cframe = CFrame.new(StartPosition, (StartPosition + Direction))
	end
	wait(0.5)
	if not CheckIfPhoenixAlive() or not Object or not Object.Parent then
		return false
	end
	StartPosition = (Body.Position + Vector3.new(0, 2, 0))
	Direction = (Object.Position - Body.Position).Unit
	Objects.Sound:Play()
	local SpawnPos = (StartPosition + Direction * 4)
	local FireBall = BaseFireBall:Clone()
	FireBall.CFrame = CFrame.new(SpawnPos, (SpawnPos + Direction))
	FireBall.Velocity = (Direction * 60)
	local Float = Create("BodyForce"){
		force = Vector3.new(0, (FireBall:GetMass() * Gravity), 0),
		Parent = FireBall,
	}
	local Fire = Objects.Fire:Clone()
	Fire.Parent = FireBall
	Debris:AddItem(FireBall, 5)
	FireBall.Parent = game:GetService("Workspace")
	Blow(FireBall)
	wait(0.3)
	Shooting = false
	local ReloadTime
	if (tick() - LastAssignment) < Settings.AssignmentDuration then
		ReloadTime = Settings.ShortReload
	else
		ReloadTime = Settings.LongReload
	end
	if IsToolEquipped() then
		ReloadTime = (ReloadTime + Settings.EquipReloadBonus)
	end
	wait(ReloadTime - 0.8)
	return true
end

function FlapWings()
	local Sign = 1
	local Count = 0
	if Objects.LeftWingWeld and Objects.RightWingWeld then 
		while CheckIfPhoenixAlive() and Objects.LeftWingWeld and Objects.RightWingWeld do		
			Objects.LeftWingWeld.C1 = (Objects.LeftWingWeld.C1 * CFrame.Angles(0, (-Sign * math.pi / 30), 0)) 
			Objects.RightWingWeld.C1 = (Objects.RightWingWeld.C1 * CFrame.Angles(0, (Sign * math.pi / 30), 0)) 
			Count = (Count + 1)
			if Count > 7 then 
				Sign = (Sign * -1)
				Count = (Count % 6)					
			end 
			wait(1 / 15)
		end 
	end 
end

function TweenColor(Object, Property, CurrentColor, DesiredColor, Time)
	local Difference = {
		Red = (DesiredColor.r - CurrentColor.r),
		Green = (DesiredColor.g - CurrentColor.g),
		Blue = (DesiredColor.b - CurrentColor.b),
	}
	local ChangeRate = 30
	for i = 1, (Time * ChangeRate) do
		local NewColor = Color3.new(
			(CurrentColor.r + Difference.Red / (Time * ChangeRate)),
			(CurrentColor.g + Difference.Green / (Time * ChangeRate)),
			(CurrentColor.b + Difference.Blue / (Time * ChangeRate))
		)
		CurrentColor = NewColor
		pcall(function()
			Object[Property] = NewColor
		end)
		wait(Rate)
	end
end 

function AdjustColor()
	local NewColor = Color3.new(math.random(), math.random(), math.random())
	for i, v in pairs(Fires) do
		Spawn(function()
			local Color = v.Color
			TweenColor(v, "Color", Color, NewColor, 1.5)
			TweenColor(v, "SecondaryColor", Color, NewColor, 1)
		end)
	end
end

function MoveToTarget()
	local MoveDelay = 0.3
	local CircleCounter = 0
	local BodyVelocity = Create("BodyVelocity"){
		velocity = Vector3.new(0,0,0),
		maxForce = Vector3.new(10000, 20000, 10000),
		Parent = Body,
	}
	local BodyGyro = Create("BodyGyro"){
		maxTorque = Vector3.new(1500, 1500, 1500),
		Parent = Body,
	}
	local OwnerDead = false
	local function OwnerKilled()
		if OwnerDead then
			return
		end
		OwnerDead = true
		Debris:AddItem(Phoenix, 3.5)
		Delay(1.5, (function()
			Settings.Aggressive = false
			for i, v in pairs(Fires) do
				v.Size = 10
				v.Heat = 25
			end
		end))
	end
	while CheckIfPhoenixAlive() do
		Spawn(AdjustColor)
		local Creator = GetCreator()
		if not Creator or not Creator.Character or not Creator.Character.Parent then
			OwnerKilled()
		else
			local CreatorCharacter = Creator.Character
			local CreatorHumanoid = CreatorCharacter:FindFirstChild("Humanoid")
			if not CreatorHumanoid or not CreatorHumanoid:IsA("Humanoid") or CreatorHumanoid.Health == 0 then
				OwnerKilled()
			end
		end
		if not Shooting then
			if (tick() - LastAssignment) > Settings.AssignmentDuration and Creator and Creator.Character and Creator.Character.Parent then
				local CreatorCharacter = Creator.Character
				local torso = CreatorCharacter:FindFirstChild("Torso") or CreatorCharacter:FindFirstChild("UpperTorso")
				if torso then
					MoveToPoint = (torso.Position + Vector3.new(0, -2, 0))
				end
			end
			CircleCounter = (CircleCounter + 1)
			local AdjustedMovePoint = (MoveToPoint + CFrame.Angles(0, (CircleCounter / 7), 0) * Vector3.new(10, 6, 0)) 
			local MoveVector = (AdjustedMovePoint - Body.Position)
			local TargetSpeed = math.min(Settings.MaxSpeed, (Settings.SubAcceleration * math.sqrt(MoveVector.magnitude)))
			local CurrentMagnitude = BodyVelocity.velocity.Magnitude
			local NewSpeed
			if TargetSpeed > CurrentMagnitude then
				NewSpeed = math.min(TargetSpeed, (CurrentMagnitude + Settings.Acceleration * MoveDelay))
			else
				NewSpeed = math.max(TargetSpeed, (CurrentMagnitude - Settings.Acceleration * MoveDelay))
			end
			BodyVelocity.velocity = (MoveVector.Unit * NewSpeed)
			BodyGyro.cframe = CFrame.new(Body.Position, (Body.Position + MoveVector.Unit + Vector3.new(0, -3, 0)))
		end
		wait(MoveDelay)
	end
end

Spawn(FlapWings)
Spawn(MoveToTarget)

while CheckIfPhoenixAlive() do
	if Settings.Aggressive and (not EnemyTarget or (tick() - LastAssignment) < Settings.AssignmentDuration) then
		EnemyTarget = nil
		local PhoenixPos = (Body.Position + Vector3.new(0, -8, 0))
		local SearchVec = Vector3.new(Settings.SearchRangeXZ, Settings.SearchRangeY, Settings.SearchRangeXZ)
		local SearchRegion = Region3.new((PhoenixPos - SearchVec), (PhoenixPos + SearchVec))
		local Creator = GetCreator()
		local CreatorCharacter = ((Creator and Creator.Character) or nil)
		local PartsInRegion = Functions.GetParts(SearchRegion, 500, {Phoenix, CreatorCharacter})
		local ClosestPlayer = {Player = nil, Distance = Settings.ChaseRange}
		for i, v in pairs(PartsInRegion) do
			local PartDistance = (PhoenixPos - v.Position).Magnitude
			local character = v.Parent
			local humanoid = character:FindFirstChild("Humanoid")
			if humanoid and humanoid:IsA("Humanoid") and humanoid.Health > 0 and PartDistance < ClosestPlayer.Distance then
				ClosestPlayer.Player = character
				ClosestPlayer.Distance = PartDistance
			end
		end
		if ClosestPlayer.Player then 
			EnemyTarget = ClosestPlayer.Player
		end
	end
	if Settings.Aggressive and EnemyTarget and GetCreator() then
		local humanoid = EnemyTarget:FindFirstChild("Humanoid")
		local torso = EnemyTarget:FindFirstChild("Torso") or EnemyTarget:FindFirstChild("UpperTorso")
		if not humanoid or not humanoid:IsA("Humanoid") or humanoid.Health == 0 or not torso then
			EnemyTarget = nil
		else
			while EnemyTarget and EnemyTarget.Parent and humanoid and humanoid.Health > 0 and torso and CheckIfPhoenixAlive() do
				local AttackDistance = (torso.Position - Body.Position).Magnitude
				if humanoid and humanoid.Health > 0 and AttackDistance < Settings.ChaseRange then
					Shooting = true
					local Success = Shoot(torso)
					Shooting = false
					if not Success then
						break
					end
				else
					EnemyTarget = nil
				end
				wait(Rate)
			end
			EnemyTarget = nil
		end
	end
	wait(2)
end]]></ProtectedString>
				</Properties>
				<Item class="ModuleScript" referent="RBXFEB55A6F7C254E87839C91BCF0CFDEA4">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Functions</string>
						<string name="ScriptGuid"></string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Ray", "Bullet", "ParticlePart"}

Functions = {
	
	CheckTableForString = (function(Table, String)
		for i, v in pairs(Table) do
			if string.lower(v) == string.lower(String) then
				return true
			end
		end
		return false
	end),

	CheckIntangible = (function(Hit)
		if Hit and Hit.Parent then
			if (Hit.Transparency >= 1 and not Hit.CanCollide) or Functions.CheckTableForString(ProjectileNames, Hit.Name) then
				return true
			end
			local ObjectParent = Hit.Parent
			local Character = ObjectParent.Parent
			local Humanoid = Character:FindFirstChild("Humanoid")
			if Humanoid and Humanoid.Health > 0 and ObjectParent:IsA("Hat") then
				return true
			end
		end
		return false
	end),
	
	CastRay = (function(StartPos, Vec, Length, Ignore, DelayIfHit)
		local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
		if RayHit and Functions.CheckIntangible(RayHit) then
			if DelayIfHit then
				wait()
			end
			RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
		end
		return RayHit, RayPos, RayNormal
	end),

	IsTeamMate = (function(Player1, Player2)
		return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
	end),

	TagHumanoid = (function(humanoid, player)
		local Creator_Tag = Instance.new("ObjectValue")
		Creator_Tag.Name = "creator"
		Creator_Tag.Value = player
		Debris:AddItem(Creator_Tag, 2)
		Creator_Tag.Parent = humanoid
	end),

	UntagHumanoid = (function(humanoid)
		for i, v in pairs(humanoid:GetChildren()) do
			if v:IsA("ObjectValue") and v.Name == "creator" then
				v:Destroy()
			end
		end
	end),
	
	GetTotalParts = (function(MaxParts, PossibleParts, Parts)
		if MaxParts < PossibleParts then
			return MaxParts
		elseif Parts >= MaxParts then
			return 0
		elseif MaxParts >= PossibleParts then
			local PartCount = (MaxParts - PossibleParts)
			if Parts <= MaxParts then
				PartCount = (MaxParts - Parts)
				if PartCount > PossibleParts then
					return PossibleParts
				else
					return PartCount
				end
			elseif PartCount >= PossibleParts then
				return PossibleParts
			else
				return PartCount
			end
		end
	end),

	GetParts = (function(Region, MaxParts, Ignore)
		local Parts = {}
		local RerunFailed = false
		while #Parts < MaxParts and not RerunFailed do
			local Region = Region
			local PossibleParts = Functions.GetTotalParts(MaxParts, 100, #Parts)
			local PartsNearby = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region, Ignore, PossibleParts)
			if #PartsNearby == 0 then
				RerunFailed = true
			else
				for i, v in pairs(PartsNearby) do
					table.insert(Parts, v)
					table.insert(Ignore, v)
				end
			end
		end
		return Parts
	end),
	
}

return Functions]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX440935D3852845DA9BA8C67826788FAE">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">MonitorScript</string>
					<string name="ScriptGuid">{7539B369-147D-4803-BC89-C9A66EEBD14E}</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Value = script.Parent

Debris = game:GetService("Debris")

function DestroyModel()
	Debris:AddItem(Value, 0.5)
end

if not Value.Value then
	DestroyModel()
	return
end

Value.Changed:connect(function()
	if not Value.Value or not Value.Value.Parent then
		DestroyModel()
	end
end)

Value.Value.Changed:connect(function()
	if not Value.Value or not Value.Value.Parent then
		DestroyModel()
	end
end)]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX4418625EF7644BA4AF82991AA3695395">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX83A200A91E7C43B1BE8AB974F7AA92CF">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputButton = Instance.new("ImageButton")
InputButton.Name = "InputButton"
InputButton.Image = ""
InputButton.BackgroundTransparency = 1
InputButton.ImageTransparency = 1
InputButton.Size = UDim2.new(1, 0, 1, 0)
InputButton.Parent = InputCheck

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Mouse
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if PlayerGui then
			if UserInputService.TouchEnabled then
				InputCheckClone = InputCheck:Clone()
				InputCheckClone.InputButton.InputBegan:connect(function()
					InvokeServer("Button1Click", {Down = true})
				end)
				InputCheckClone.InputButton.InputEnded:connect(function()
					InvokeServer("Button1Click", {Down = false})
				end)
				InputCheckClone.Parent = PlayerGui
			end
		end
	end)
end

function Unequipped()
	if InputCheckClone and InputCheckClone.Parent then
		InputCheckClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
	</Item>
</roblox>