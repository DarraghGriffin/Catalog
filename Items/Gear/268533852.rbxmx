<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX548ACA54F2274B9A8106E61C34255EB8">
		<Properties>
			<bool name="CanBeDropped">false</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>-0.800000012</X>
				<Y>0.5</Y>
				<Z>-3.4000001</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>-3.9340253e-007</R12>
				<R20>0</R20>
				<R21>3.9340253e-007</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">RainbowUnicorn</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=267660202</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX7124BDC426F24A14B5C350569BD788A4">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1001</int>
				<CoordinateFrame name="CFrame">
					<X>0.0927279964</X>
					<Y>16.8697739</Y>
					<Z>22.2957306</Z>
					<R00>0.631296873</R00>
					<R01>-0.228310838</R01>
					<R02>-0.741173863</R02>
					<R10>0.0539299771</R10>
					<R11>0.966295719</R11>
					<R12>-0.251722246</R12>
					<R20>0.773664117</R20>
					<R21>0.118939981</R21>
					<R22>0.622332275</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0</float>
				<float name="Friction">0</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">272</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>17.5868721</X>
					<Y>2.31697345</Y>
					<Z>30.3744926</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>6</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX90092BC6497D4575BB27593D356E7CCF">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=267659668</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=267660269</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXEBB93A641C2C4328B40FF36B48C93766">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
UserInputService = game:GetService("UserInputService")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Animations = {
	Sit = {Animation = Tool:WaitForChild("Sit"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
}

AnimationTracks = {}

Controls = {
	Forward = {
		Down = false,
		Keys = {Key = "w", ByteKey = 17}
	},
	Backward = {
		Down = false,
		Keys = {Key = "s", ByteKey = 18}
	},
	Left = {
		Down = false,
		Keys = {Key = "a", ByteKey = 20}
	},
	Right = {
		Down = false,
		Keys = {Key = "d", ByteKey = 19}
	}
}

	
Rate = (1 / 60)
	
Gravity = 196.20

Speed = {
	Acceleration = 20,
	Deceleration = 20,
	MovementSpeed = {Min = 35, Max = 35},
	TurnSpeed = {
		Speed = {Min = 3, Max = 3},
		TurnAlpha = 0.5,
		AlphaDampening = 0.2
	},
	Pitch = {Min = 40, Max = 40}
}

MaxSpeed = { --Maximum speed which the vehicle can move and turn at.
	Movement = Speed.MovementSpeed,
	Turn = Speed.TurnSpeed.Speed,
	Pitch = Speed.Pitch,
	Acceleration = Speed.Acceleration,
	Deceleration = Speed.Deceleration
}

CurrentSpeed = { --The speed which the vehicle is moving and turning at.
	Movement = 0,
	Turn = 0,
	Pitch = 0
}

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(AnimationTracks) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(AnimationTracks, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(AnimationTracks) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function ThrustUpdater()
	Humanoid.WalkSpeed = 0
	Humanoid.AutoRotate = false
	Humanoid.PlatformStand = true
	
	if Controls.Forward.Down then --Handle acceleration
		CurrentSpeed.Pitch = math.min(MaxSpeed.Pitch.Max, (CurrentSpeed.Pitch + Speed.TurnSpeed.TurnAlpha))
	end
	if Controls.Backward.Down then --Handle deceleration, if speed is more than 0, decrease quicker.
		CurrentSpeed.Pitch = math.min(MaxSpeed.Pitch.Min, (CurrentSpeed.Pitch - Speed.TurnSpeed.TurnAlpha))
	end
	
	if Controls.Left.Down then --Handle left turn speed
		CurrentSpeed.Turn = math.min(MaxSpeed.Turn.Min, (CurrentSpeed.Turn + Speed.TurnSpeed.TurnAlpha))
	end
	if Controls.Right.Down then --Handle right turn speed
		CurrentSpeed.Turn = math.max(-MaxSpeed.Turn.Max, (CurrentSpeed.Turn - Speed.TurnSpeed.TurnAlpha))
	end
	if math.abs(CurrentSpeed.Turn) > Speed.TurnSpeed.AlphaDampening then
		CurrentSpeed.Turn = (CurrentSpeed.Turn - ((Speed.TurnSpeed.AlphaDampening) * (math.abs(CurrentSpeed.Turn) / CurrentSpeed.Turn)))
	else 
		CurrentSpeed.Turn = 0		
	end
	if math.abs(CurrentSpeed.Pitch) > Speed.TurnSpeed.AlphaDampening then
		CurrentSpeed.Pitch = (CurrentSpeed.Pitch - (Speed.TurnSpeed.AlphaDampening * (math.abs(CurrentSpeed.Pitch) / CurrentSpeed.Pitch)))
	else 
		CurrentSpeed.Pitch = 0		
	end
	local LeanAmount = (-CurrentSpeed.Turn * (math.pi / 6) / 1.5)
	local Direction = Torso.CFrame.lookVector
	local XZDirection = Vector3.new(Direction.X, 0, Direction.Z).Unit
	ThrustForce.velocity = (Direction * CurrentSpeed.Movement)
	local XZNormal = (CFrame.Angles(0, (math.pi / 2), 0) * XZDirection)
	if math.abs(Direction.Y) > 0.85 then
		RotationForce.angularvelocity = (TurnGyro.cframe * Vector3.new(0, CurrentSpeed.Turn, 0))
		CurrentSpeed.Pitch = 0
	elseif not Controls.Forward.Down and not Controls.Backward.Down and not Controls.Left.Down and not Controls.Right.Down then
		local TurnForce = (CurrentSpeed.Pitch + (math.sin(tick() * 4) * 3))
		RotationForce.angularvelocity = (TurnGyro.cframe * Vector3.new((TurnForce * XZNormal.X), CurrentSpeed.Turn, (TurnForce * XZNormal.Z)))
	else
		RotationForce.angularvelocity = (TurnGyro.cframe * Vector3.new((CurrentSpeed.Pitch * XZNormal.X), CurrentSpeed.Turn, (CurrentSpeed.Pitch * XZNormal.Z)))
	end
	TurnGyro.cframe = CFrame.Angles((LeanAmount * XZDirection.X), 0, (LeanAmount * XZDirection.Z))
	wait(Rate)
end


function SetUpMovement()
	for i, v in pairs(CurrentSpeed) do
		CurrentSpeed[i] = 0
	end
	CurrentSpeed.Movement = MaxSpeed.Movement.Max
	for i, v in pairs(Controls) do
		v.Down = false
	end
	SetAnimation("PlayAnimation", Animations.Sit)
	TurnGyro = Create("BodyGyro"){
		maxTorque = Vector3.new(math.huge, 0, math.huge),
		Parent = Torso,
	}
	ThrustForce = Create("BodyVelocity"){
		maxForce = Vector3.new(math.huge, math.huge, math.huge),
		velocity = Vector3.new(0, 0, 0),
		Parent = Torso,
	}
	RotationForce = Create("BodyAngularVelocity"){
		maxTorque = Vector3.new(math.huge, math.huge, math.huge),
		angularvelocity = Vector3.new(0, 0, 0),
		Parent = Torso,
	}
	Spawn(function()
		while CheckIfAlive() and TurnGyro.Parent and ThrustForce.Parent and RotationForce.Parent and ToolEquipped do
			ThrustUpdater()
			wait()
		end
	end)
end

function KeyPress(Key, Down)
	local ByteKey = string.byte(Key)
	for i, v in pairs(Controls) do
		if v.Keys.Key == Key or v.Keys.ByteKey == ByteKey then
			v.Down = Down
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
	Mouse.KeyDown:connect(function(Key)
		KeyPress(Key, true)
	end)
	Mouse.KeyUp:connect(function(Key)
		KeyPress(Key, false)
	end)
	Spawn(SetUpMovement)
	Humanoid:ChangeState(Enum.HumanoidStateType.None)
end

function Unequipped()
	for i, v in pairs(Controls) do
		v.Down = false
	end
	for i, v in pairs(AnimationTracks) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({TurnGyro, ThrustForce, RotationForce}) do
		if tostring(v) == "Connection" then
			v:disconnect()
		elseif type(v) == "userdata" and v.Parent then
			Debris:AddItem(v, 0)
		end
	end
	if CheckIfAlive() then
		Humanoid.WalkSpeed = 16
		Humanoid.AutoRotate = true
		Humanoid.PlatformStand = false
		Humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
	end
	AnimationTracks = {}
	ToolEquipped = false
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX46A9FB8459EF43809CBFEB1D84021D43">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=106772613</url></Content>
				<string name="Name">Sit</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX64B94D311E0D41D59496954A87B60E8D">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>5.68419123</X>
					<Y>21.0260639</Y>
					<Z>27.2823124</Z>
					<R00>0.736536682</R00>
					<R01>-0.241487414</R01>
					<R02>0.631820858</R02>
					<R10>-1.49011594e-008</R10>
					<R11>0.934096813</R11>
					<R12>0.357019931</R12>
					<R20>-0.676397622</R20>
					<R21>-0.262958288</R21>
					<R22>0.687996566</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>4.16782475</X>
					<Y>20.1692181</Y>
					<Z>25.6311245</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX7E29AE4F731D4A1BA508710F5D6D9447">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Unicorn = require(script:WaitForChild("Unicorn"))

RemovalMonitor = script:WaitForChild("RemovalMonitor")

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

ColorPart = BasePart:Clone()
ColorPart.Name = "ColorPart"
ColorPart.Reflectance = 0.25
ColorPart.Transparency = 0.1
ColorPart.Material = Enum.Material.SmoothPlastic
ColorPart.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
ColorPart.BackSurface = Enum.SurfaceType.SmoothNoOutlines
ColorPart.TopSurface = Enum.SurfaceType.SmoothNoOutlines
ColorPart.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
ColorPart.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
ColorPart.RightSurface = Enum.SurfaceType.SmoothNoOutlines
ColorPart.Size = Vector3.new(1, 1, 1)
ColorPart.Anchored = true
ColorPart.CanCollide = false
ColorMesh = Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "9856898"),
	TextureId = (BaseUrl .. "1361097"),
	Scale = (ColorPart.Size * 2), --Default mesh scale is 1/2 the size of a 1x1x1 brick.
	Offset = Vector3.new(0, 0, 0),
	VertexColor = Vector3.new(1, 1, 1),
	Parent = ColorPart,
}
ColorLight = Create("PointLight"){
	Name = "Light",
	Brightness = 50,
	Range = 8,
	Shadows = false,
	Enabled = true,
	Parent = ColorPart,
}
Colors = {
	Vector3.new(1, 0, 0),
	Vector3.new(1, 0.5, 0),
	Vector3.new(1, 1, 0),
	Vector3.new(0, 1, 0),
	Vector3.new(0, 1, 1),
	Vector3.new(0, 0, 1),
	Vector3.new(0.5, 0, 1),
}

Rate = (1 / 60)

ToolEquipped = false

Handle.Transparency = 0
Tool.Enabled = true

function RayCast(Position, Direction, MaxDistance, IgnoreList)
	local IgnoreList = ((type(IgnoreList) == "table" and IgnoreList) or {IgnoreList})
	return game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (MaxDistance or 999.999)), IgnoreList)
end

function TransformModel(Objects, Center, NewCFrame, Recurse)
	local Objects = ((type(Objects) ~= "table" and {Objects}) or Objects)
	for i, v in pairs(Objects) do
		if v:IsA("BasePart") then
			v.CFrame = NewCFrame:toWorldSpace(Center:toObjectSpace(v.CFrame))
		end
		if Recurse then
			TransformModel(v:GetChildren(), Center, NewCFrame, true)
		end
	end
end

function CreateStripes(Length)
	local StripesModel = Instance.new("Model")
	StripesModel.Name = "StripesPart"
	for i, v in pairs(Colors) do
		local Part = ColorPart:Clone()
		Part.Name = "Part"
		Part.Size = Vector3.new(1, 0.2, Length)
		Part.CFrame = Part.CFrame * CFrame.new((Part.Size.X * (i - 1)), 0, 0)
		Part.Mesh.Scale = (Part.Size * 2)
		Part.Mesh.VertexColor = v
		Part.Light.Color = Color3.new(v.X, v.Y, v.Z)
		Part.Parent = StripesModel
	end
	return StripesModel
end

function GetStripesModel()
	local ModelName = ("RainbowUnicornStripes")
	local Model = game:GetService("Workspace"):FindFirstChild(ModelName)
	if not Model then
		Model = Instance.new("Model")
		Model.Name = ModelName
		local RemovalMonitorClone = RemovalMonitor:Clone()
		RemovalMonitorClone.Disabled = false
		RemovalMonitorClone.Parent = Model
	end
	return Model
end

function MakeRainbowTrail(Origin, Offset)
	local LastPlace = nil
	while ToolEquipped and CheckIfAlive() do
		local SpawnPos = (Origin.CFrame * Offset)
		local CurrentPlace = (SpawnPos * CFrame.new(0, 0, 0.25)).p
		local Velocity = Torso.Velocity
		Velocity = Vector3.new(Velocity.X, 0, Velocity.Z).magnitude
		if LastPlace and Velocity > 5 then
			Spawn(function()
				local Model = GetStripesModel()
				local Distance = (LastPlace - CurrentPlace).magnitude
				if Distance > 8 then
					LastPlace = nil
					return
				end
				local Length = (Distance + 0)
				local StripesModel = CreateStripes(Length)
				local StripesCFrame = CFrame.new((LastPlace + (CurrentPlace - LastPlace).Unit * (Distance / 2)), CurrentPlace) * CFrame.Angles(0, 0, -(math.pi / 2))					
				TransformModel(StripesModel, StripesModel:GetModelCFrame(), StripesCFrame, true)
				Debris:AddItem(StripesModel, 1.25)
				StripesModel.Parent = Model
				if Model and not Model.Parent then
					Model.Parent = game:GetService("Workspace")
				end					
				LastPlace = CurrentPlace
			end)
		elseif not LastPlace then
			LastPlace = CurrentPlace
		end
		wait(0.15)
	end
end

function SpawnUnicorn(CreateNew)
	for i, v in pairs(Tool:GetChildren()) do
		if (v:IsA("Model") or v:IsA("BasePart")) and v ~= Handle then
			v:Destroy()
		end
	end
	if not CreateNew then
		return
	end
	local UnicornCopy = Unicorn:Clone()
	local Body = UnicornCopy.Body
	local TorsoWeld = Create("Weld"){
		Part0 = Torso,
		Part1 = Body,
		C0 = CFrame.new(-0.25, -0.85, -1.75),
		C1 = CFrame.new(0, 0, 0),
		Parent = Body
	}
	UnicornCopy.Parent = Tool
	Spawn(function()
		MakeRainbowTrail(Body, CFrame.new(0.3, -2, 0))
	end)
	local RayHit, RayPos, RayNormal = RayCast(Torso.Position, Vector3.new(0, -1, 0), (Torso.Size.Y * 2), {Character})
	if RayHit then
		Torso.CFrame = Torso.CFrame + Vector3.new(0, ((Character:GetModelSize().Y / 2) + 2.5), 0)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
	Spawn(function()
		SpawnUnicorn(true)
	end)
	Handle.Transparency = 1
end

function Unequipped()
	SpawnUnicorn(false)
	ToolEquipped = false
	Handle.Transparency = 0
end

SpawnUnicorn(false)

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="ModuleScript" referent="RBX48051D419B74453487E79E56FD7ECE4C">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Unicorn</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Animate = script:WaitForChild("Animate")

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

Unicorn = Create("Model"){
	Name = "Unicorn",
}

Body = BasePart:Clone()
Body.Name = "Body"
Body.Size = Vector3.new(1, 3, 8)
BodyMesh = Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "267659574"),
	TextureId = (BaseUrl .. "267660269"),
	Scale = Vector3.new(1, 1, 1),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = Body,
}

LeftArm = Body:Clone()
LeftArm.Name = "LeftArm"
LeftArm.Size = Vector3.new(1, 3.5, 2)
LeftArm.Mesh.MeshId = (BaseUrl .. "267659795")

RightArm = Body:Clone()
RightArm.Name = "RightArm"
RightArm.Size = Vector3.new(1, 3.5, 2)
RightArm.Mesh.MeshId = (BaseUrl .. "267659902")


LeftLeg = Body:Clone()
LeftLeg.Name = "LeftLeg"
LeftLeg.Size = Vector3.new(1, 4.5, 3.5)
LeftLeg.Mesh.MeshId = (BaseUrl .. "267659944")

RightLeg = Body:Clone()
RightLeg.Name = "RightLeg"
RightLeg.Size = Vector3.new(1, 4.5, 3.5)
RightLeg.Mesh.MeshId = (BaseUrl .. "267659973")

Tail = Body:Clone()
Tail.Name = "Tail"
Tail.Size = Vector3.new(0.2, 0.2, 0.2)
Tail.Mesh.MeshId = (BaseUrl .. "267659727")

ParticlePart = BasePart:Clone()
ParticlePart.Name = "ParticlePart"
ParticlePart.Transparency = 1
ParticleWeld = Create("Weld"){
	Part0 = Body,
	Part1 = ParticlePart,
	C0 = (CFrame.new(0, 0, 3) * CFrame.Angles((math.pi / 2), 0, 0)),
	C1 = CFrame.new(0, 0, 0),
	Parent = ParticlePart,
}

Joints = {
	{Name = "ParticleWeld", Class = "Weld", Properties = {Part0 = Body, Part1 = ParticlePart, C0 = (CFrame.new(0, 0, 3) * CFrame.Angles((math.pi / 2), 0, 0)), C1 = CFrame.new(0, 0, 0)}},
	{Name = "Tail", Class = "Motor", Properties = {Part0 = Body, Part1 = Tail, MaxVelocity = 0.015, C0 = CFrame.new(0.365923166, -0.727078259, 5.21935654, 1, 0, 0, 0, 1, 0, 0, 0, 1), C1 = CFrame.new(0.0859200954, 1.52292633, 0.0193252563, 1, 2.30967999e-007, -5.66244125e-007, 2.30967999e-007, 1.00000048, 2.98023224e-007, -5.96046448e-008, 3.57627869e-007, 1)}},
	{Name = "Left Shoulder", Class = "Motor6D", Properties = {Part0 = Body, Part1 = LeftArm, MaxVelocity = 0.1, C0 = CFrame.new(1.92124736, -1.41252208, -0.642749071, -4.37113883e-008, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-008), C1 = CFrame.new(0.901232004, 1.53744125, -0.14269352, 0, 5.21540642e-008, 1, -1.34110451e-007, 1, 9.68575478e-008, -1, 4.76837158e-007, -5.96046448e-008)}},
	{Name = "Right Shoulder", Class = "Motor6D", Properties = {Part0 = Body, Part1 = RightArm, MaxVelocity = 0.1, C0 = CFrame.new(0.671006262, -1.22540283, -0.888130188, -2.98023224e-008, 1.49011612e-008, -1, 1.49011612e-008, 1, -1.49011612e-008, 1, 1.49011612e-008, 0), C1 = CFrame.new(1.02978861, 1.69379532, -0.313370168, -8.94069672e-008, 3.65078449e-007, -0.99999994, 5.21540642e-007, 1.00000048, -3.65078449e-007, 1, 7.59959221e-007, 2.68220901e-007)}},
	{Name = "Left Hip", Class = "Motor6D", Properties = {Part0 = Body, Part1 = LeftLeg, MaxVelocity = 0.1, C0 = CFrame.new(3.03076577, -2.07473755, 3.62987709, -2.98023224e-008, 2.23517418e-008, -1, 2.98023224e-008, 1, -2.98023224e-008, 1, 4.47034836e-008, 0), C1 = CFrame.new(3.45085025, 1.7358228, -0.809954643, 2.98023224e-008, 1.02818012e-006, -0.999999881, 1.5348196e-006, 1.00000203, -9.90927219e-007, 1, 1.47521496e-006, 7.4505806e-007)}},
	{Name = "Right Hip", Class = "Motor6D", Properties = {Part0 = Body, Part1 = RightLeg, MaxVelocity = 0.1, C0 = CFrame.new(4.33719444, -2.07716751, 3.49755383, -2.98023224e-008, 1.49011612e-008, 1, -1.49011612e-008, 1, 7.4505806e-009, -1, 1.49011612e-008, -5.96046448e-008), C1 = CFrame.new(3.3072443, 1.75290704, -1.00250554, 8.64267349e-007, 2.68220901e-007, 1, -1.49011612e-007, 1, 9.68575478e-008, -1, 5.21540642e-007, -8.94069672e-008)}},
}

for i, v in pairs(Joints) do
	local Joint = Create(v.Class){
		Name = v.Name,
	}
	for i, v in pairs(v.Properties) do
		pcall(function()
			Joint[i] = v
		end)
	end
	Joint.Parent = Joint.Part0
end

for i, v in pairs({Body, Tail, LeftArm, RightArm, LeftLeg, RightLeg, ParticlePart}) do
	v.Parent = Unicorn
end

AnimateCopy = Animate:Clone()
AnimateCopy.Disabled = false
AnimateCopy.Parent = Unicorn

return Unicorn]]></ProtectedString>
				</Properties>
				<Item class="Script" referent="RBX69E0860A68F74B6AA23C863B91ACE052">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Animate</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Figure = script.Parent

RunService = game:GetService("RunService")

Body = Figure:WaitForChild("Body")
Tail = Body:WaitForChild("Tail")
LeftShoulder = Body:WaitForChild("Left Shoulder")
RightShoulder = Body:WaitForChild("Right Shoulder")
LeftHip = Body:WaitForChild("Left Hip")
RightHip = Body:WaitForChild("Right Hip")
ParticlePart = Figure:WaitForChild("ParticlePart")

for i, v in pairs({Tail, LeftShoulder, RightShoulder, LeftHip, RightHip}) do
	if v and v.Parent then
		v.DesiredAngle = 0
		v.CurrentAngle = 0
	end
end

function Move(Time)
	local LimbAmplitude = 0.15
	local LimbFrequency = 5
	local TailAngle = (0.2 * math.sin(Time * 2))
	local LimbDesiredAngle1 = (LimbAmplitude * math.sin(Time * LimbFrequency))
	local LimbDesiredAngle2 = -(LimbAmplitude * math.sin(Time * LimbFrequency))
	
	Tail.DesiredAngle = TailAngle
	LeftShoulder.DesiredAngle = LimbDesiredAngle1
	RightShoulder.DesiredAngle = -LimbDesiredAngle2
	LeftHip.DesiredAngle = LimbDesiredAngle2
	RightHip.DesiredAngle = -LimbDesiredAngle1
	
end

function DisplayParticles()
	local Moving = ((Body.Velocity * Vector3.new(1, 0, 1)).Magnitude > 10)
	for i, v in pairs(ParticlePart:GetChildren()) do
		if v:IsA("ParticleEmitter") then
			v.Enabled = Moving
		end
	end
end

RunService.Stepped:connect(function()
	local _, Time = wait(0.1)
	Move(Time)
	DisplayParticles()
end)]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX32DB181999E84F9A8B2F051B14717F6D">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">RemovalMonitor</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Model = script.Parent

Debris = game:GetService("Debris")

FadeRate = 0.025
Rate = (1 / 15)

Removing = false

function RemoveModel()
	if Removing then
		return
	end
	local Parts = {}
	for i, v in pairs(Model:GetChildren()) do
		if v:IsA("Model") then
			table.insert(Parts, v)
		end
	end
	if #Parts == 0 then
		Removing = true
		Model.Name = ""
		Debris:AddItem(Model, 0.5)
	end
end

Model.ChildRemoved:connect(function(Child)
	RemoveModel()
end)

RemoveModel()

while true do
	for i, v in pairs(Model:GetChildren()) do
		if v:IsA("Model") then
			for ii, vv in pairs(v:GetChildren()) do
				if vv:IsA("BasePart") and vv.Transparency < 1 then
					local NewTransparency = (vv.Transparency + FadeRate)
					vv.Transparency = ((NewTransparency <= 1 and NewTransparency) or 1)
					if vv.Transparency >= 1 then
						for iii, vvv in pairs(vv:GetChildren()) do
							if vvv:IsA("Light") or vvv:IsA("Fire") or vvv:IsA("Smoke") or vvv:IsA("ParticleEmitter") then
								vvv.Enabled = false
							end
						end
					end
				end
			end
		end
	end
	wait(Rate)
end

]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>