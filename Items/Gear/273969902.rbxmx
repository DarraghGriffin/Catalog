<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXE8A58E571F8C41AA9E75553F5DD61454">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.75</Y>
				<Z>1.375</Z>
				<R00>0.999999583</R00>
				<R01>3.63901798e-009</R01>
				<R02>-0.000890471681</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>4.08661936e-006</R12>
				<R20>0.000890471565</R20>
				<R21>-4.08661708e-006</R21>
				<R22>0.999999702</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">ArtichokeMorningStar</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=272519027</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX328473BB539E46DDAC70D14AC0F717E0">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.0338129997</X>
					<Y>38.2100067</Y>
					<Z>0.00675799977</Z>
					<R00>-0.43374151</R00>
					<R01>-0.212870643</R01>
					<R02>0.875530958</R02>
					<R10>-3.3100489e-006</R10>
					<R11>0.971692443</R11>
					<R12>0.236249074</R12>
					<R20>-0.901037216</R20>
					<R21>0.102468215</R21>
					<R22>-0.421463937</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.25</X>
					<Y>3.75</Y>
					<Z>3</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXE831198553C84B7083776D221D7A963B">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=272518716</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=272518759</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXC1BD892CDFAD49CD8FFBC8A00B2C77BD">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Woosh</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=184474135</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX12268F1736D44491BB75CAE5DCDC36EF">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Smack</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=106626233</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXBE2EAB338E9B445E9043C17AFEAF2472">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Spin</string>
					<float name="Pitch">0.75</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=120745021</url></Content>
					<float name="Volume">0.125</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX109D54F6112A4D4892F76023E9711603">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")
ContentProvider = game:GetService("ContentProvider")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputButton = Instance.new("ImageButton")
InputButton.Name = "InputButton"
InputButton.Image = ""
InputButton.BackgroundTransparency = 1
InputButton.ImageTransparency = 1
InputButton.Size = UDim2.new(1, 0, 1, 0)
InputButton.Parent = InputCheck

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local function StopAnimation(Animation)
		for i, v in pairs(Animations) do
			if v.Animation == Animation then
				v.AnimationTrack:Stop(value.EndFadeTime)
				if v.TrackStopped then
					v.TrackStopped:disconnect()
				end
				table.remove(Animations, i)
			end
		end
	end
	if mode == "PlayAnimation" then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				if value.Speed then
					v.AnimationTrack:AdjustSpeed(value.Speed)
					return
				elseif value.Weight or value.FadeTime then
					v.AnimationTrack:AdjustWeight(value.Weight, value.FadeTime)
					return
				else
					StopAnimation(value.Animation, false)
				end
			end
		end
		local AnimationMonitor = Create("Model"){}
		local TrackEnded = Create("StringValue"){Name = "Ended"}
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		local TrackStopped
		if not value.Manual then
			TrackStopped = AnimationTrack.Stopped:connect(function()
				if TrackStopped then
					TrackStopped:disconnect()
				end
				StopAnimation(value.Animation, true)
				TrackEnded.Parent = AnimationMonitor
			end)
		end
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack, TrackStopped = TrackStopped})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
		if TrackStopped then
			AnimationMonitor:WaitForChild(TrackEnded.Name)
		end
		return TrackEnded.Name
	elseif mode == "StopAnimation" and value then
		StopAnimation(value.Animation)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Player:GetMouse()
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if PlayerGui then
			if UserInputService.TouchEnabled then
				InputCheckClone = InputCheck:Clone()
				InputCheckClone.InputButton.InputBegan:connect(function()
					InvokeServer("Button1Click", {Down = true})
				end)
				InputCheckClone.InputButton.InputEnded:connect(function()
					InvokeServer("Button1Click", {Down = false})
				end)
				InputCheckClone.Parent = PlayerGui
			end
		end
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("Animation") then
				ContentProvider:Preload(v.AnimationId)
			end
		end
	end)
end

function Unequipped()
	LocalObjects = {}
	if InputCheckClone and InputCheckClone.Parent then
		InputCheckClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or  CurrentTransparency == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX8929760D58964BB3BF789748E9FA291A">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX0568E0CBBC69491CAA11575CF84272FD">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=253205777</url></Content>
				<string name="Name">Hold</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX911D600C58D248D7B9FB606248C761AD">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

BaseUrl = "http://www.roblox.com/asset/?id="

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

Grips = {
	Normal = CFrame.new(0, 0.75, 0.5, -1, 0, 0, 0, -1, 0, 0, 0, 1),
	Swinging = CFrame.new(0, 0.75, 0.5, -1, 0, 0, 0, -1, 0, 0, 0, 1),
	Unequipped = CFrame.new(0, -0.75, 1.375, 0.999999583, 3.63901798e-009, -0.000890471681, 0, 1, 4.08661936e-006, 0.000890471565, -4.08661708e-006, 0.999999702),
}

Animations = {
	Hold = {Animation = Tool:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil, Manual = true},
	Swing = {Animation = Tool:WaitForChild("Swing"), FadeTime = nil, Weight = nil, Speed = 6, Duration = nil, Manual = true},
	Release = {Animation = Tool:WaitForChild("Release"), FadeTime = nil, Weight = nil, Speed = 2, Manual = false, Duration = 0.65, Damage = {Min = 20, Max = 30}},
}

Damage = {
	Touch = {Min = 0, Max = 0},
	Hit = {Min = 20, Max = 30},
}

Sounds = {
	Woosh = Handle:WaitForChild("Woosh"),
	Smack = Handle:WaitForChild("Smack"),
	Spin = Handle:WaitForChild("Spin"),
}

ReloadTime = 0.25

HitReady = false

Gravity = 196.20
Rate = (1 / 60)

MouseDown = false
ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Handle.Transparency = 0
Tool.Grip = Grips.Unequipped
Tool.Enabled = true

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
end

function Blow(Part)
	local TouchedConnection = Part.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent or not CheckIfAlive() then
			return
		end
		
		local object
		local character = Hit.Parent
		if character:IsA("Hat") or character:IsA("Tool") then
			object = Hit.Parent
			character = character.Parent
		end
		
		local player = Players:GetPlayerFromCharacter(character)
		if player and (IsTeamMate(Player, player) or player == Player) then
			return
		end
		
		local RightArm = Character:FindFirstChild("Right Arm")
		if not RightArm then
			return
		end
		local RightGrip = RightArm:FindFirstChild("RightGrip")
		if not RightGrip or (RightGrip.Part0 ~= RightArm and RightGrip.Part1 ~= RightArm) then
			return
		end
		
		local humanoid = character:FindFirstChild("Humanoid")
		if character == Character or not humanoid or humanoid.Health == 0 then
			return
		end
		
		for i, v in pairs(character:GetChildren()) do
			if v:IsA("ForceField") then
				return
			end
		end
		
		local DamageValue = Damage.Touch
		if (Part.Name == "Chain" or (Part.Name == "Weight" and Part.Transparency < 1)) and CurrentAnimation then
			DamageValue = Damage.Hit
		elseif Part.Name == "Projectile" then
			DamageValue = {Min = 25, Max = 25}
		end
		
		if not DamageValue then
			return
		end
		
		UntagHumanoid(humanoid)
		TagHumanoid(humanoid, Player)
		
		local FinalizedDamage = math.random(DamageValue.Min, DamageValue.Max)
		
		if FinalizedDamage <= 0 then
			return
		end
		
		local EstimatedHealth = (humanoid.Health - FinalizedDamage)
		
		humanoid:TakeDamage(FinalizedDamage)
		
		if EstimatedHealth > 0 and Part.Name == "Weight" and Part.Transparency < 1 then
			local StickChance = math.random(1, 4)
			if StickChance == 1 then
				Part.Transparency = 1
				local Leaf = BasePart:Clone()
				Leaf.Name = "Projectile"
				Leaf.Size = Vector3.new(0.25, 0.5, 0.25)
				Leaf.CanCollide = false
				local LeafMesh = Create("SpecialMesh"){
					MeshType = Enum.MeshType.FileMesh,
					Scale = Vector3.new(1, 1, 1),
					TextureId = (BaseUrl .. "272518759"),
					MeshId = (BaseUrl .. "272525319"),
					Offset = Vector3.new(0, 0, 0),
					VertexColor = Vector3.new(1, 1, 1),
					Parent = Leaf,
				}
				for i = 1, math.random(15, 25) do
					local LeafCopy = Leaf:Clone()
					LeafCopy.CFrame = Weight.CFrame
					local Direction = (LeafCopy.CFrame * CFrame.Angles((math.random(-360, 360) * 0.01), (math.random(-360, 360) * 0.01), (math.random(-360, 360) * 0.01)))
					local Force = 50
					local Velocity = (Direction.lookVector * Force)
					local Mass = (LeafCopy:GetMass() * Gravity)
					local BodyVelocity = Create("BodyVelocity"){
						maxForce = Vector3.new(Mass, Mass, Mass),
						velocity = Velocity,
						Parent = LeafCopy,
					}
					LeafCopy.Velocity = Velocity
					Blow(LeafCopy)
					Debris:AddItem(LeafCopy, 2)
					LeafCopy.Parent = game:GetService("Workspace")
				end
				wait(5)
				Part.Transparency = 0
			end
		end
		
	end)
	return TouchedConnection
end

function ConstructWeapon(MakeNew)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	if not MakeNew then
		return
	end
	HandlePart = BasePart:Clone()
	HandlePart.Name = "HandlePart"
	HandlePart.Size = Vector3.new(0.25, 4, 0.25)
	HandlePart.CanCollide = false
	local HandlePartMesh = Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		Scale = Vector3.new(1, 1, 1),
		TextureId = (BaseUrl .. "272518759"),
		MeshId = (BaseUrl .. "272518648"),
		Offset = Vector3.new(0, 0, 0),
		VertexColor = Vector3.new(1, 1, 1),
		Parent = HandlePart,
	}
	Chain = BasePart:Clone()
	Chain.Name = "Chain"
	Chain.Size = Vector3.new(0.2, 1.5, 0.2)
	Chain.CanCollide = false
	local ChainMesh = Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		Scale = Vector3.new(1, 1, 1),
		TextureId = (BaseUrl .. "272518759"),
		MeshId = (BaseUrl .. "272518609"),
		Offset = Vector3.new(0, 0, 0),
		VertexColor = Vector3.new(1, 1, 1),
		Parent = Chain,
	}
	Weight = BasePart:Clone()
	Weight.Name = "Weight"
	Weight.Size = Vector3.new(1.5, 1.5, 1.5)
	Weight.CanCollide = false
	local WeightMesh = Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		Scale = Vector3.new(1, 1, 1),
		TextureId = (BaseUrl .. "272518759"),
		MeshId = (BaseUrl .. "272518509"),
		Offset = Vector3.new(0, 0, 0),
		VertexColor = Vector3.new(1, 1, 1),
		Parent = Weight,
	}
	ChainPart = BasePart:Clone()
	ChainPart.Name = "ChainPart"
	ChainPart.Transparency = 1
	ChainPart.CanCollide = false
	HandlePartMotor = Create("Motor6D"){
		Name = "HandlePartMotor",
		Part0 = Handle,
		Part1 = HandlePart,
		C0 = (CFrame.new(0, -0.2, 0.425) * CFrame.Angles((math.pi / 2), 0, 0)),
		C1 = (CFrame.new(0, 0.25, 0) * CFrame.Angles(-(math.pi / 2), 0, 0)),
		MaxVelocity = 0.25,
		Parent = HandlePart,
	}
	ChainMotor = Create("Motor6D"){
		Name = "ChainMotor",
		Part0 = ChainPart,
		Part1 = Chain,
		C0 = (CFrame.new(0, -1.9, -0.05) * CFrame.Angles(0, (math.pi / 2), 0)),
		C1 = (CFrame.new(0, 0.685, -0.025) * CFrame.Angles(0, (math.pi / 2), 0)),
		MaxVelocity = 0.1,
		DesiredAngle = 2.5,
		CurrentAngle = 2.5,
		Parent = Chain,
	}
	WeightMotor = Create("Motor6D"){
		Name = "WeightMotor",
		Part0 = Chain,
		Part1 = Weight,
		C0 = (CFrame.new(0, -0.75, 0.05) * CFrame.Angles(math.pi, (math.pi / 2), 0)),
		C1 = (CFrame.new(0, -0.55, -0.05) * CFrame.Angles(0, (math.pi / 2), 0)),
		MaxVelocity = 0.25,
		DesiredAngle = 0.5,
		CurrentAngle = 0.5,
		Parent = Weight,
	}
	ChainPartMotor = Create("Motor6D"){
		Name = "ChainPartMotor",
		Part0 = Handle,
		Part1 = ChainPart,
		C0 = (CFrame.new(-0.025, -0.15, 0.4750) * CFrame.Angles((math.pi / 2), 0, 0)),
		C1 = (CFrame.new(-0.025, -0.15, -0.0) * CFrame.Angles((math.pi / 2), 0, 0)),
		MaxVelocity = 0.2,
		Parent = ChainPart,
	}
	for i, v in pairs({Chain, Weight}) do
		Blow(v)
	end
	for i, v in pairs({HandlePart, Chain, Weight, ChainPart}) do
		v.Parent = Tool
	end
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or MouseDown or not CheckIfAlive() then
		return
	end
	MouseDown = true
	Spawn(function()
		InvokeClient("PlayAnimation", Animations.Swing)
	end)
	Tool.Grip = Grips.Swinging
	ChainMotor.DesiredAngle = -1.35
	ChainPartMotor.DesiredAngle = 9999999
	WeightMotor.DesiredAngle = 0
	Sounds.Spin:Play()
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	while ToolEquipped and CurrentlyEquipped and MouseDown and CheckIfAlive() do
		wait(Rate)
	end
	local TargetPosition = InvokeClient("MousePosition")
	if not TargetPosition or not ToolEquipped or not CurrentlyEquipped or not CheckIfAlive() then
		Tool.Enabled = true
		return
	end
	TargetPosition = TargetPosition.Position
	Sounds.Spin:Stop()
	for i, v in pairs({{Motor = ChainPartMotor, Angle = 0, Reset = true}, {Motor = ChainMotor, Angle = 0}, {Motor = WeightMotor, Angle = 0.5}}) do
		v.Motor.DesiredAngle = v.Angle
		if v.Reset then
			v.Motor.CurrentAngle = v.Angle
		end
	end
	if ToolEquipped and CurrentlyEquipped then
		wait(0.375)
		for i, v in pairs({{Motor = ChainPartMotor, Angle = 0, Reset = true}, {Motor = ChainMotor, Angle = 2.75}, {Motor = WeightMotor, Angle = 0.5}}) do
			v.Motor.DesiredAngle = v.Angle
			if v.Reset then
				v.Motor.CurrentAngle = v.Angle
			end
		end
		wait(0.25)
		if ToolEquipped and CurrentlyEquipped then
			for i, v in pairs({{Motor = ChainPartMotor, Angle = 0, Reset = true}, {Motor = ChainMotor, Angle = 2.5}, {Motor = WeightMotor, Angle = 0.5}}) do
				v.Motor.DesiredAngle = v.Angle
				if v.Reset then
					v.Motor.CurrentAngle = v.Angle
				end
			end
			wait(0.25)
			if ToolEquipped and CurrentlyEquipped and CheckIfAlive() then
				Spawn(function()
					InvokeClient("StopAnimation", Animations.Swing)
				end)
				Sounds.Woosh:Play()
				local Animation = Animations.Release
				CurrentAnimation = Animation
				HitReady = true
				Spawn(function()
					InvokeClient("PlayAnimation", Animation)
				end)
				wait(Animation.Duration)
				WeightMotor.Part0 = Chain
				for i, v in pairs({{Motor = ChainPartMotor, Angle = 0, Reset = true}, {Motor = ChainMotor, Angle = 2.5, Reset = true}, {Motor = WeightMotor, Angle = 0.5, Reset = true}}) do
					v.Motor.DesiredAngle = v.Angle
					if v.Reset then
						v.Motor.CurrentAngle = v.Angle
					end
				end
				Tool.Grip = Grips.Normal
				HitReady = false
				CurrentAnimation = nil
			end
		end
	end
	wait(ReloadTime)
	Tool.Enabled = true
	MouseDown = false
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	Handle.Transparency = 1
	Spawn(function()
--		InvokeClient("PlayAnimation", Animations.Hold)
	end)
	Spawn(function()
		ConstructWeapon(true)
		for i, v in pairs({"Left Arm", "Right Arm"}) do
			local Limb = Character:FindFirstChild(v)
			if Limb then
				Spawn(function()
					InvokeClient("SetLocalTransparencyModifier", {Object = Limb, Transparency = 0, AutoUpdate = false})
				end)
			end
		end
	end)
	Tool.Grip = Grips.Normal
	ToolEquipped = true
end

function Unequipped()
	MouseDown = false
	ToolEquipped = false
	Handle.Transparency = 0
	Spawn(function()
		ConstructWeapon(false)
	end)
	Tool.Grip = Grips.Unequipped
	if Torso and Torso.Parent then
		Handle.CFrame = (Torso.CFrame + Torso.CFrame.lookVector * (Torso.Size.Z * 2))
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
	if Mode == "Button1Click" then
		local Down = Value.Down
		if not Down and MouseDown then
			MouseDown = false
		end
	end
end)

ConstructWeapon(false)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXC80478C51B4245728109A622208536B1">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=253338514</url></Content>
				<string name="Name">Swing</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX365167871A2E41388A5F5B4E4B6DF402">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=273717479</url></Content>
				<string name="Name">Release</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXC957CD908EB54E759AEB3887E4B621D1">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-2.48132896</X>
					<Y>39.7712631</Y>
					<Z>-0.866871655</Z>
					<R00>-0.538106084</R00>
					<R01>0.22745499</R01>
					<R02>-0.811607063</R02>
					<R10>-0</R10>
					<R11>0.962900877</R11>
					<R12>0.26985544</R12>
					<R20>0.84287715</R20>
					<R21>0.145210847</R21>
					<R22>-0.518142819</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.971742392</X>
					<Y>39.2693329</Y>
					<Z>0.0968723893</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>