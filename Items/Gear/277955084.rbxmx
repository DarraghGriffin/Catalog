<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX96856677B85B4F7B8E60D1A30495AC65">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>1.5</X>
				<Y>-1.20000005</Y>
				<Z>-1.22500002</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">LaserGlasses</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=272535628</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX6AD72A882CE6465DA339D42DD3AE2922">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-11.1524706</X>
					<Y>28.2250004</Y>
					<Z>-6.79351044</Z>
					<R00>-0.317789465</R00>
					<R01>8.94069672e-008</R01>
					<R02>0.948161483</R02>
					<R10>2.55050367e-007</R10>
					<R11>0.99999994</R11>
					<R12>0</R12>
					<R20>-0.948161602</R20>
					<R21>2.5331974e-007</R21>
					<R22>-0.317789465</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.39999998</X>
					<Y>0.375</Y>
					<Z>0.850000024</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXC6BA920B838A47168B77CD645FD1805B">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=272535025</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=272535101</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX9D16B8D6CEEC40F4833A487428692784">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">LaserSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=115327352</url></Content>
					<float name="Volume">0.739684403</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX5F34C27D77264C8D89A4C36BE13506DD">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=158821881</url></Content>
				<string name="Name">Pose</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX7590B5E236934577863524146B4DDF35">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX7C54A5A26FEC46DF9946F0F2E20D043F">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputButton = Instance.new("ImageButton")
InputButton.Name = "InputButton"
InputButton.Image = ""
InputButton.BackgroundTransparency = 1
InputButton.ImageTransparency = 1
InputButton.Size = UDim2.new(1, 0, 1, 0)
InputButton.Parent = InputCheck

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Mouse
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if PlayerGui then
			if UserInputService.TouchEnabled then
				InputCheckClone = InputCheck:Clone()
				InputCheckClone.InputButton.InputBegan:connect(function()
					InvokeServer("Button1Click", {Down = true})
				end)
				InputCheckClone.InputButton.InputEnded:connect(function()
					InvokeServer("Button1Click", {Down = false})
				end)
				InputCheckClone.Parent = PlayerGui
			end
		end
	end)
end

function Unequipped()
	if InputCheckClone and InputCheckClone.Parent then
		InputCheckClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return ((PlayerMouse and {Hit = PlayerMouse.Hit, Target = PlayerMouse.Target}) or nil)
	elseif mode == "SetMouse" then
		pcall(function()
			PlayerMouse[value.Property] = value.Value
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX0DD1411B28EB488CA9C5EC54FD9AF1A7">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-13.3014679</X>
					<Y>28.9629498</Y>
					<Z>-4.98190546</Z>
					<R00>0.650223851</R00>
					<R01>0.216222301</R01>
					<R02>-0.728324711</R02>
					<R10>-0</R10>
					<R11>0.958646536</R11>
					<R12>0.284599394</R12>
					<R20>0.759742677</R20>
					<R21>-0.185053319</R21>
					<R22>0.623334825</R22>
				</CoordinateFrame>
				<float name="FieldOfView">29.9999981</float>
				<CoordinateFrame name="Focus">
					<X>-11.6554747</X>
					<Y>28.3197632</Y>
					<Z>-6.39062452</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX9748C9EB46094D2FB1DEA1B4695DF0F3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = require(script:WaitForChild("Functions"))

LaserModelRemoval = script:WaitForChild("LaserModelRemoval")

Animations = {
	Pose = {Animation = Tool:WaitForChild("Pose"), FadeTime = nil, Weight = nil, Speed = nil},
}

Sounds = {
	LaserSound = Handle:WaitForChild("LaserSound"),
}

Damage = 5
ReloadTime = 0.1
NeckChangedConnections = {}

PartName = "Glasses"

FireRate = 0.1
LaserRange = 50
LaserOffset = 1

MouseDown = false
ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Handle.Transparency = 0
Tool.Enabled = true

function CastLaser(StartPosition, Direction, MaxDistance, Ignore, Color)
	local LaserModelName = (Player.Name .. "_LaserModel")
	local LaserModel = game:GetService("Workspace"):FindFirstChild(LaserModelName)
	if not LaserModel then
		LaserModel = Create("Model"){
			Name = LaserModelName,
		}
		local LaserModelRemovalClone = LaserModelRemoval:Clone()
		LaserModelRemovalClone.Disabled = false
		LaserModelRemovalClone.Parent = LaserModel
		LaserModel.Parent = game:GetService("Workspace")
	end
	table.insert(Ignore, LaserModel)
	local Hit, EndPosition, Normal = Functions.CastRay(StartPosition, Direction, MaxDistance, Ignore, false)
	local Distance = (StartPosition - EndPosition).magnitude
	local LaserPart = Create("Part"){
		Name = "Laser",
		BrickColor = BrickColor.new(Color),
		Transparency = 0.5,
		Shape = Enum.PartType.Block,
		FormFactor = Enum.FormFactor.Custom,
		TopSurface = Enum.SurfaceType.Smooth,
		BottomSurface = Enum.SurfaceType.Smooth,
		Material = Enum.Material.Neon,
		CanCollide = false,
		Anchored = true,
		Locked = true,
		Size = Vector3.new(0.2, Distance, 0.2),
		Create("CylinderMesh"){
			VertexColor = Vector3.new(1, 1, 1),
			Scale = Vector3.new(1, 1, 1),
		}
	}
	for i, v in pairs({"Top", "Bottom", "Left", "Right", "Front", "Back"}) do
		local Light = Create("SurfaceLight"){
			Brightness = 100,
			Range = 4,
			Angle = 90,
			Color = BrickColor.new(Color).Color,
			Face = Enum.NormalId[v],
			Shadows = false,
			Enabled = true,
			Parent = LaserPart,
		}
	end
	Debris:AddItem(LaserPart, 1)
	LaserPart.Parent = LaserModel

	LaserPart.CFrame = ((CFrame.new(StartPosition, EndPosition) * CFrame.new(0, 0, (-Distance / 2))) * CFrame.Angles((math.pi / 2), 0, 0))
	Spawn(function()
		InvokeClient("SetMouse", {Property = "TargetFilter", Value = game:GetService("Workspace"):FindFirstChild(LaserModelName)})
	end)
	Spawn(function()
		for i = 1, 20 do
			wait(0.05)
			LaserPart.Transparency = (LaserPart.Transparency + 0.05)
		end
	end)
	return Hit, EndPosition
end

function StopLaser()
	Sounds.LaserSound:Stop()
	MouseDown = false
	if Neck and Neck.Parent then
		Neck.C1 = NeckOrigin
	end
end

function FireLaser(Mouse)
	IgnoreHeadChange = true
	local LastHeadRotation = Neck.C1
	Neck.C1 = NeckOrigin
	local HeadOrigin = Head:Clone()
	local Base = Neck.Part0.Position + (Neck.C0.p * 1)
	local YVector = (Mouse.Hit.p + Mouse.Hit.lookVector)
	local Set = CFrame.new(Base, YVector)
	local Offset = Set:toObjectSpace(Torso.CFrame * Neck.C0)
	local PosX, PosY, PosZ, R00, R01, R02, R10, R11, R12, R20, R21, R22 = Offset:components()
	Neck.C1 = CFrame.new(NeckOrigin.p.x, NeckOrigin.p.y, NeckOrigin.p.z, R00, R01, R02, R10, R11, R12, R20, R21, R22)
	local HeadRotationCheck = false
	if math.abs((Head.Position - Torso.Position).magnitude) >= 1.25 then
		HeadRotationCheck = true
	else
		Neck.C1 = LastHeadRotation
	end
	IgnoreHeadChange = false
	if HeadRotationCheck and (math.acos((Mouse.Hit.p - HeadOrigin.Position).Unit:Dot(HeadOrigin.CFrame.lookVector)) <= (math.pi / 2)) then
		for i, v in pairs(NeckChangedConnections) do
			v:disconnect()
		end
		NeckChangedConnections = {}
		Spawn(function()
			Tool.Enabled = false
			Sounds.LaserSound:Play()
			local NewLaserOffset = (LaserOffset * 100)
			local TargetPoint = (Mouse.Hit.p + Vector3.new((math.random(-NewLaserOffset, NewLaserOffset) * 0.01), (math.random(-NewLaserOffset, NewLaserOffset) * 0.01), (math.random(-NewLaserOffset, NewLaserOffset) * 0.01)))
			for i = 1, 2 do
				local SpawnPos = (Glasses.CFrame * CFrame.new((0.35 * ((i == 1 and 1) or -1)), -0.1, -0.375))
				local Hit, EndPosition = CastLaser(SpawnPos.p, (TargetPoint - SpawnPos.p).Unit, LaserRange, {Character}, "Really red")
				if Hit and Hit.Parent then
					local character = Hit.Parent
					if character:IsA("Hat") then
						character = character.Parent
					end
					if character and character ~= Character then
						local humanoid = character:FindFirstChild("Humanoid")
						if humanoid and humanoid.Health > 0 then
							local player = Players:GetPlayerFromCharacter(character)
							if (not player or (player and not Functions.IsTeamMate(Player, player))) then
								Functions.UntagHumanoid(humanoid)
								Functions.TagHumanoid(humanoid, Player)
								humanoid:TakeDamage(Damage)
							end
						end
					end
				end
			end
			wait(ReloadTime)
			Tool.Enabled = true
		end)
		local NeckChanged
		NeckChanged = Neck.Changed:connect(function(Property)
			if Property == "C0" or Property == "C1" and not IgnoreHeadChange then
				for i, v in pairs(NeckChangedConnections) do
					v:disconnect()
				end
				NeckChangedConnections = {}
			end
		end)
		table.insert(NeckChangedConnections, NeckChanged)
		Delay(1, function()
			if NeckChanged.connected then
				Neck.C1 = NeckOrigin
				StopLaser()
			end
		end)
	else
		IgnoreHeadChange = true
		Neck.C1 = LastHeadRotation
		IgnoreHeadChange = false
	end
end

function CreateGlasses(CreateNew)
	for i, v in pairs(Character:GetChildren()) do
		if v:IsA("BasePart") and v.Name == PartName then
			v:Destroy()
		end
	end
	Handle.Transparency = 0
	if not CreateNew then
		return
	end
	Handle.Transparency = 1
	Glasses = Handle:Clone()
	Glasses.Name = PartName
	Glasses.Transparency = 0
	Glasses.CanCollide = false
	local GlassesWeld = Create("Weld"){
		Part0 = Head,
		Part1 = Glasses,
		C0 = CFrame.new(0, -1, 0, 1, 0, -0, 0, 0, 1, 0, -1, -0),
		C1 = ((Tool.Grip + Vector3.new(-1.5, 0, 1.5)) * CFrame.Angles(-(math.pi / 2), 0, 0)),
		Parent = Glasses,
	}
	Glasses.Parent = Character
end

function Activated()
	if not Tool.Enabled or not CheckIfAlive() or MouseDown then
		return
	end
	MouseDown = true
	Spawn(function()
		while ToolEquipped and MouseDown and CheckIfAlive() do
			Sounds.LaserSound.Volume = (((math.sin(tick() * 3) + 1) * 0.25) + 0.25)
			Spawn(function()
				local MouseData = InvokeClient("MousePosition")
				if MouseData then
					FireLaser(MouseData)
				end
			end)
			wait(FireRate)
		end
		Sounds.LaserSound:Stop()
	end)
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent and Neck and Neck.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	Torso = Character:FindFirstChild("Torso")
	Neck = Torso:FindFirstChild("Neck")
	NeckOrigin = Neck.C1
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		InvokeClient("PlayAnimation", Animations.Pose)
	end)
	Spawn(function()
		CreateGlasses(true)
	end)
	MouseDown = false
	ToolEquipped = true
end

function Unequipped()
	Handle.Transparency = 0
	StopLaser()
	CreateGlasses(false)
	MouseDown = false
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
	if mode == "Button1Click" then
		local Down = value.Down
		if not Down then
			MouseDown = false
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX22EFE8440AE0471B952E09CAFD3D38A4">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LaserModelRemoval</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Model = script.Parent

Debris = game:GetService("Debris")

FadeRate = 0.025
Rate = (1 / 15)

Removing = false

function RemoveModel()
	if Removing then
		return
	end
	local Parts = {}
	for i, v in pairs(Model:GetChildren()) do
		if v:IsA("BasePart") then
			table.insert(Parts, v)
		end
	end
	if #Parts == 0 then
		Removing = true
		Model.Name = ""
		Debris:AddItem(Model, 0.5)
	end
end

Model.ChildRemoved:connect(function(Child)
	RemoveModel()
end)

wait(1)

RemoveModel()]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX1F686A7243DC48DBA3165D38D27F4F77">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {
	
	CheckTableForString = (function(Table, String)
		for i, v in pairs(Table) do
			if string.lower(v) == string.lower(String) then
				return true
			end
		end
		return false
	end),
	
	CheckIntangible = (function(Hit)
		local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Ray", "Bullet", "ParticlePart"}
		if Hit and Hit.Parent then
			local Character = Hit.Parent
			local Humanoid = Character:FindFirstChild("Humanoid")
			if Humanoid or Character:IsA("Hat") or Character:IsA("Tool") then
				return false
			end
			if (Hit.Transparency >= 1 and not Hit.CanCollide) or Functions.CheckTableForString(ProjectileNames, Hit.Name) then
				return true
			end
		end
		return false
	end),
	
	CastRay = (function(StartPos, Vec, Length, Ignore, DelayIfHit)
		local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
		if RayHit and Functions.CheckIntangible(RayHit) then
			if DelayIfHit then
				wait()
			end
			RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).Magnitude)), Ignore, DelayIfHit)
		end
		return RayHit, RayPos, RayNormal
	end),

	TagHumanoid = (function(humanoid, player)
		local Creator_Tag = Create("ObjectValue"){
			Name = "creator",
			Value = player,
		}
		local NoTransform = Create("BoolValue"){
			Name = "NoTransform",
			Value = true,
			Parent = Creator_Tag,
		}
		Debris:AddItem(Creator_Tag, 2)
		Creator_Tag.Parent = humanoid
	end),
	
	UntagHumanoid = (function(humanoid)
		for i, v in pairs(humanoid:GetChildren()) do
			if v:IsA("ObjectValue") and v.Name == "creator" then
				v:Destroy()
			end
		end
	end),
	
	IsTeamMate = (function(Player1, Player2)
		return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
	end),
	
}

return Functions]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>