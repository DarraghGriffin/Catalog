<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXB1B1FE855BB14287882D68804AD65312">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.600000024</X>
				<Y>0.200000003</Y>
				<Z>0</Z>
				<R00>-0.000408172607</R00>
				<R01>0.408248276</R01>
				<R02>0.912870824</R02>
				<R10>-0.894345462</R10>
				<R11>0.408248276</R11>
				<R12>-0.1829741</R12>
				<R20>-0.447376817</R20>
				<R21>-0.816496551</R21>
				<R22>0.364948362</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">TBCSkateboard</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=27901963</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXA34F96A0CBDC4C3E878BB985C641463E">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>0.433012664</R00>
					<R01>0.749999702</R01>
					<R02>0.499999613</R02>
					<R10>-0.465625077</R10>
					<R11>-0.288848042</R11>
					<R12>0.836515844</R12>
					<R20>0.771811247</R20>
					<R21>-0.595034838</R21>
					<R22>0.224143788</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>2</X>
					<Y>0.400000006</Y>
					<Z>6</Z>
				</Vector3>
			</Properties>
			<Item class="Sound" referent="RBX2C2C823C1C9E4704AAFA0AC9E67FE7A7">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Drop</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=10548108</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBXFDEAD80B428444FC86FA2B76A86503BD">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=25244821</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.14999998</X>
						<Y>1.14999998</Y>
						<Z>1.14999998</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=27757720</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Configuration" referent="RBX6B8C4293275D43F3BD4C0FDC7BF30351">
			<Properties>
				<string name="Name">RemoteControl</string>
			</Properties>
			<Item class="RemoteFunction" referent="RBXC66AEF56D936456DAE4BF99FABC36AF2">
				<Properties>
					<string name="Name">ServerControl</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBX0AFBBCC16EC0487DAD6C2B5B81139A44">
				<Properties>
					<string name="Name">ClientControl</string>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXAA445823C277470C834C4A679EDB1E1D">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)

RemoteControl = Tool:WaitForChild(&quot;RemoteControl&quot;)

ServerControl = RemoteControl:WaitForChild(&quot;ServerControl&quot;)
ClientControl = RemoteControl:WaitForChild(&quot;ClientControl&quot;)

ToolEquipped = false
MouseControls = {}

ClientControl.OnClientInvoke = (function(Mode, Value)
&#9;if Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;end
end)

function InvokeServer(Mode, Value)
&#9;local ServerReturn = nil
&#9;pcall(function()
&#9;&#9;ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;end)
&#9;return ServerReturn
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Mouse
&#9;for i, v in pairs(MouseControls) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;MouseControls = {}
&#9;MouseDown = PlayerMouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;MouseUp = PlayerMouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;for i, v in pairs(MouseControls) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;MouseControls = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXBB57EC016F264D70BFA0E5F48114E2BA">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXCA3AB06AA94A43D2B0B1E9838B9382A6">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)
Mesh = Handle:WaitForChild(&quot;Mesh&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)

RemoteControl = Tool:WaitForChild(&quot;RemoteControl&quot;)

ServerControl = (RemoteControl:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = RemoteControl

ClientControl = (RemoteControl:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = RemoteControl

SkateboardModule = require(199238756)
SkateboardFunctions = SkateboardModule.SkateboardFunctions
Functions = SkateboardModule.Functions

Skateboard = SkateboardFunctions.GetSkateboard(&quot;Classic&quot;)
SkateboardFunctions.CreateConfiguration(Tool, Skateboard)
SkateboardPlatform = SkateboardFunctions.GetSkateboardPlatform(Skateboard)

Sounds = {
&#9;Drop = Handle:WaitForChild(&quot;Drop&quot;)
}

ToolEquipped = false
ToolEnabled = true

Tool.Enabled = true

ServerControl.OnServerInvoke = (function(player, Mode, Value)
end)

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

function DropSkateboard()
&#9;
&#9;local MousePosition = InvokeClient(&quot;MousePosition&quot;)
&#9;
&#9;local DesiredAngle = (math.acos((MousePosition - Handle.Position).unit:Dot(Torso.CFrame.lookVector)))
&#9;if DesiredAngle &gt; (math.pi / 2) then --Prevents spawning behind character.
&#9;&#9;--return
&#9;end
&#9;
&#9;local SkateboardSize = Skateboard:GetModelSize()&#9;
&#9;
&#9;local Direction = CFrame.new(Torso.Position, Vector3.new(MousePosition.X, Torso.Position.Y, MousePosition.Z))
&#9;local SkateboardCFrame = Direction + Direction.lookVector * (((Torso.Size.Z / 2) + (SkateboardSize.Z / 2)) * 1.5)
&#9;local SkateboardAngle = CFrame.Angles(0, 0, 0)
&#9;
&#9;local RayOffset = Vector3.new(-1.5, 0, -1.5)
&#9;
&#9;local RayPoints = { --Border points and center of skateboard used for casting rays.
&#9;&#9;Center = Functions.PositionPart(SkateboardCFrame, 0, 0, 0),
&#9;&#9;BackLeft = Functions.PositionPart(SkateboardCFrame, -((SkateboardSize.X / 2) + RayOffset.X), RayOffset.Y, -((SkateboardSize.Z / 2) + RayOffset.Z)),
&#9;&#9;BackRight = Functions.PositionPart(SkateboardCFrame, ((SkateboardSize.X / 2) + RayOffset.X), RayOffset.Y, -((SkateboardSize.Z / 2) + RayOffset.Z)),
&#9;&#9;FrontLeft = Functions.PositionPart(SkateboardCFrame, -((SkateboardSize.X / 2) + RayOffset.X), RayOffset.Y, ((SkateboardSize.Z / 2) + RayOffset.Z)),
&#9;&#9;FrontRight = Functions.PositionPart(SkateboardCFrame, ((SkateboardSize.X / 2) + RayOffset.X), RayOffset.Y, ((SkateboardSize.Z / 2) + RayOffset.Z)),
&#9;}
&#9;
&#9;local RayData = {
&#9;&#9;Area = { --Cast ray to determine if skateboard will spawn inside something.
&#9;&#9;&#9;Offset = Vector3.new(0, (SkateboardSize.Y / 2), 0),
&#9;&#9;&#9;Direction = Vector3.new(0, 1, 0),
&#9;&#9;&#9;Distance = SkateboardSize.Y
&#9;&#9;},
&#9;&#9;Ground = { --Cast ray to determine if the skateboard can spawn on the ground.
&#9;&#9;&#9;Direction = Vector3.new(0, -1, 0),
&#9;&#9;&#9;Distance = (SkateboardSize.Y * 4)
&#9;&#9;}
&#9;}
&#9;
&#9;local Ignore = {Character, Skateboard}
&#9;
&#9;local HighestGroundRayHit, HighestGroundRayPos --Get the highest point of elevation to spawn the skateboard.
&#9;for i, v in pairs(RayPoints) do
&#9;&#9;local GroundRayHit, GroundRayPos = Functions.RayCast(v.p, RayData.Ground.Direction, RayData.Ground.Distance, Ignore)
&#9;&#9;if not HighestGroundRayPos or GroundRayPos.Y &gt; HighestGroundRayPos.Y then
&#9;&#9;&#9;HighestGroundRayHit, HighestGroundRayPos = GroundRayHit, GroundRayPos
&#9;&#9;end
&#9;end&#9;
&#9;
&#9;local FullAreaIsEmpty = true --Ensure entire area is empty.
&#9;for i, v in pairs(RayPoints) do
&#9;&#9;local AreaIsEmpty = Functions.RegionEmpty((v.p - RayData.Area.Offset), {Min = Vector3.new(0, 0, 0), Max = (RayData.Area.Direction * RayData.Area.Distance)}, Ignore)
&#9;&#9;if not AreaIsEmpty then
&#9;&#9;&#9;FullAreaIsEmpty = false
&#9;&#9;end
&#9;end
&#9;
&#9;if not FullAreaIsEmpty or not HighestGroundRayHit then
&#9;&#9;return
&#9;end
&#9;
&#9;ToolEnabled = false
&#9;
&#9;local PosX, PosY, PosZ, R00, R01, R02, R10, R11, R12, R20, R21, R22 = SkateboardCFrame:components()
&#9;SkateboardCFrame = CFrame.new(PosX, (HighestGroundRayPos.Y + (SkateboardSize.Y / 2)), PosZ, R00, R01, R02, R10, R11, R12, R20, R21, R22)
&#9;
&#9;InvokeClient(&quot;PlaySound&quot;, Sounds.Drop)
&#9;
&#9;Tool.Parent = nil
&#9;
&#9;SkateboardFunctions.SpawnSkateboard(Skateboard, (SkateboardCFrame * SkateboardAngle))

&#9;Debris:AddItem(Tool, 0)&#9;
&#9;Tool:Destroy()
&#9;
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent) and true) or false)
end

function Activated()
&#9;if not ToolEquipped or not ToolEnabled or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;DropSkateboard()
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;ToolEquipped = true
end

function Unequipped()
&#9;ToolEquipped = false
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX7748577AFAE345759386429FB8922512">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-3.41120958</X>
					<Y>1.84917688</Y>
					<Z>3.29073143</Z>
					<R00>0.694659233</R00>
					<R01>0.271670729</R01>
					<R02>-0.666065753</R02>
					<R10>-0</R10>
					<R11>0.925941408</R11>
					<R12>0.377667189</R12>
					<R20>0.719338953</R20>
					<R21>-0.262349993</R21>
					<R22>0.643213749</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-2.34550548</X>
					<Y>1.24491</Y>
					<Z>2.26159048</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>