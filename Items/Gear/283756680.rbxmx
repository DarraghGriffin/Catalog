<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX9B409FE3372B429C81410B1B059254CE">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.400000006</Y>
				<Z>0.899999976</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">PurpleLaserRifle</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=280037478</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX3D00BEFF2F154A49BDC1F27E3D31D63B">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.00214400003</X>
					<Y>0.600000024</Y>
					<Z>-0.042121999</Z>
					<R00>0.367618889</R00>
					<R01>0.565480232</R01>
					<R02>0.73830092</R02>
					<R10>-4.72779584e-006</R10>
					<R11>0.793892741</R11>
					<R12>-0.608057976</R12>
					<R20>-0.929976285</R20>
					<R21>0.223529965</R21>
					<R22>0.291852415</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.75</X>
					<Y>1</Y>
					<Z>3.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX15301653AEDC4BDFA5F306EC62C34149">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=280037291</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.850000024</X>
						<Y>0.850000024</Y>
						<Z>0.850000024</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=280037426</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX230D481057CC44FBBDF9532DE1E87FEE">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Equip</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=282906960</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX31F13B492E5E4ECC8778A4E76A5C225A">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Shot</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=282907010</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXAD95D9C3D86744EF9516E5D6F6162522">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Reload</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=282907088</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4900B7CC85214E6FBBE8AFC156DA9BD1">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Reload2</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=282907104</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB187DF2E57D34D98B01B65FC98A7FD12">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Zoom</string>
					<float name="Pitch">2</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=187771720</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX27B61966AE7941DE8D768F634140CF01">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=283119655</url></Content>
				<string name="Name">Equip</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX4C498450448041128B7647A8EBADBD53">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=277780478</url></Content>
				<string name="Name">Fire</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXD77A331F43F3486F8E1E1005C0E9C350">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=283545583</url></Content>
				<string name="Name">Scope</string>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX70C26ECC0CAC4A669FE10F850ACC6BF6">
			<Properties>
				<string name="Name">Remotes</string>
			</Properties>
			<Item class="RemoteFunction" referent="RBXFD8243D27B8F473D9D8BF57106696EF2">
				<Properties>
					<string name="Name">ServerControl</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXACEAA906865B47DBB6718852A2978F50">
				<Properties>
					<string name="Name">ClientControl</string>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX4672DAFF5D514F379504EAABE69496ED">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-0.900094986</X>
					<Y>3.24822259</Y>
					<Z>-7.04539633</Z>
					<R00>-0.994242966</R00>
					<R01>0.0367369168</R01>
					<R02>-0.100655109</R02>
					<R10>-0</R10>
					<R11>0.939388037</R11>
					<R12>0.342856079</R12>
					<R20>0.107149675</R20>
					<R21>0.340882242</R21>
					<R22>-0.933979809</R22>
				</CoordinateFrame>
				<float name="FieldOfView">20</float>
				<CoordinateFrame name="Focus">
					<X>-0.286099672</X>
					<Y>1.15680337</Y>
					<Z>-1.34812725</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX30530DCFDE2F46B2876A7B8304023795">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")
ContentProvider = game:GetService("ContentProvider")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Animations = {
	Scope = {Animation = Tool:WaitForChild("Scope"), FadeTime = 0.25, Weight = nil, Speed = 1, Duration = nil, Manual = true},
}

Sounds = {
	Zoom = Handle:WaitForChild("Zoom"),
}

Cursors = {
	Normal = "rbxasset://textures/GunCursor.png",
	Reloading = "rbxasset://textures/GunWaitCursor.png",
	Transparent = (BaseUrl .. "187746799"),
}

AnimationTracks = {}
LocalObjects = {}

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

ScopeGui = script:WaitForChild("ScopeGui")

Rate = (1 / 60)

Zoomed = {Mode = false, Percent = 0}

ToolEquipped = false

function GetCamera()
	return game:GetService("Workspace").CurrentCamera
end

function SetCursor()
	if not PlayerMouse then
		return
	end
	if not Zoomed.Mode then
		PlayerMouse.Icon = ((Tool.Enabled and Cursors.Normal) or Cursors.Reloading)
	elseif Zoomed.Mode then
		PlayerMouse.Icon = Cursors.Transparent
	end
end

function SetLocalTransparency(Table)
	for i, v in pairs(LocalObjects) do
		if v.Object == Table.Object then
			Table.Object.LocalTransparencyModifier = Table.OriginalTransparency
			table.remove(LocalObjects, i)
		end
	end
	if not Table.Transparency then
		return
	end
	Table.OriginalTransparency = Table.Object.LocalTransparencyModifier
	table.insert(LocalObjects, Table)
	if ModifyTransparency then
		ModifyTransparency:disconnect()
	end
	ModifyTransparency = RunService.RenderStepped:connect(function()
		for i, v in pairs(LocalObjects) do
			if v.Object and v.Object.Parent then
				local CurrentTransparency = v.Object.LocalTransparencyModifier
				if ((not v.AutoUpdate and (CurrentTransparency == 1 or CurrentTransparency == 0)) or v.AutoUpdate) then
					v.Object.LocalTransparencyModifier = v.Transparency
				end
			else
				table.remove(LocalObjects, i)
			end
		end
	end)
end

function RotateCamera(RotX, RotY, SmoothRot, Duration)
	Spawn(function()
		local Camera = game:GetService("Workspace").CurrentCamera
		if SmoothRot then
			local Step = math.min(1.5 / math.max(Duration, 0), 90)
			local X = 0
			while true do
				local NewX = X + Step
				X = (NewX > 90 and 90 or NewX)
				local CamRot = (Camera.CoordinateFrame - Camera.CoordinateFrame.p)
				local CamDist = (Camera.CoordinateFrame.p - Camera.Focus.p).Magnitude
				local NewCamCF = (CFrame.new(Camera.Focus.p) * CamRot * CFrame.Angles(RotX / (90 / Step), RotY / (90 / Step), 0))
				Camera.CoordinateFrame = (CFrame.new(NewCamCF.p, NewCamCF.p + NewCamCF.lookVector) * CFrame.new(0, 0, CamDist))
				if X == 90 then
					break
				end
				RunService.Stepped:wait()
			end
		else
			local CamRot = (Camera.CoordinateFrame - Camera.CoordinateFrame.p)
			local CamDist = (Camera.CoordinateFrame.p - Camera.Focus.p).Magnitude
			local NewCamCF = (CFrame.new(Camera.Focus.p) * CamRot * CFrame.Angles(RotX, RotY, 0))
			Camera.CoordinateFrame = (CFrame.new(NewCamCF.p, NewCamCF.p + NewCamCF.lookVector) * CFrame.new(0, 0, CamDist))
		end
	end)
end

function SetMouseSensitivity(Sensitivity)
	local Camera = GetCamera()
	if MouseSensivityConnection then
		MouseSensivityConnection:disconnect()
	end
	local function EulerAnglesYX(cframe)
		local X, Y, Z, R00, R01, R02, R10, R11, R12, R20, R21, R22 = cframe:components(cframe)
		return -math.asin(R12), ((math.abs(R12) > 0.99999 and -math.atan2(-R20, R00)) or -math.atan2(-R02, R22))
	end	
	local DirectionX, DirectionY = EulerAnglesYX(Camera.CoordinateFrame)	
	local function UpdateSensitivity()
		local CFrameX, CFrameY = EulerAnglesYX(Camera.CoordinateFrame)
		DirectionX = (DirectionX * (1 - Sensitivity) + (CFrameX + (math.pi * 2) * math.floor((DirectionX - CFrameX) / (math.pi * 2) + 0.5)) * Sensitivity)
		DirectionY = (DirectionY * (1 - Sensitivity) + (CFrameY + (math.pi * 2) * math.floor((DirectionY - CFrameY) / (math.pi * 2) + 0.5)) * Sensitivity)
		Camera.CoordinateFrame = (CFrame.Angles(0, DirectionY, 0) * CFrame.Angles(DirectionX, 0, 0) * CFrame.new(0, 0, 0.5) + Camera.Focus.p)
	end
	MouseSensivityConnection = RunService.RenderStepped:connect(UpdateSensitivity)
end

function Recoil()
	local StanceSway = 1
	local CurrentRecoil = 1
	local function Random(Min, Max, Accuracy)
		local Inverse = (1 / (Accuracy or 1))
		return (math.random(Min * Inverse, Max * Inverse) / Inverse)
	end
	local RecoilX = (math.rad(CurrentRecoil * Random(20, 50, 0.5)) * StanceSway)
	local RecoilY = (math.rad(CurrentRecoil * Random(0, 0, 0.5)) * StanceSway)
	RotateCamera(RecoilX, RecoilY, true, 0.06)
	Delay(0.125, function()
		--RotateCamera(-RecoilX, -RecoilY, true, 0.06)
		RotateCamera((-RecoilX / 5), (-RecoilY / 5), true,0.1)
	end)
end

function Zoom(In)
	local function Clamp(Number, Min, Max)
		return math.max(math.min(Max, Number), Min)
	end
	local function GetPercentage(Start, End, Number)
		return (((Number - Start) / (End - Start)) * 100)
	end
	local function Round(Number, RoundDecimal)
		local WholeNumber, Decimal = math.modf(Number)
		return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
	end
	local Camera = GetCamera()
	local FieldOfView = Round(Camera.FieldOfView, 0.5)
	local ClosestZoom = nil
	if type(In) == "number" then
		ClosestZoom = In
	else
		local ZoomExtents = {60, 30, 5}
		for i, v in pairs(ZoomExtents) do
			if not In and v < FieldOfView and (not ClosestZoom or math.abs(v - FieldOfView) < math.abs(ClosestZoom - FieldOfView)) then
				ClosestZoom = v
			elseif In and v > FieldOfView and (not ClosestZoom or math.abs(v - FieldOfView) < math.abs(ClosestZoom - FieldOfView)) then
				ClosestZoom = v
			end
		end
		if not ClosestZoom then
			table.sort(ZoomExtents, (function(a, b)
				return (a > b)
			end))
			ClosestZoom = ((not In and ZoomExtents[#ZoomExtents]) or ZoomExtents[1])
		end
	end
	local NewFieldOfView = Clamp((ClosestZoom or FieldOfView), 0, 70)
	local Sensitivity = ((GetPercentage(0, 60, NewFieldOfView) + 1) / 1000)
	Camera.FieldOfView = NewFieldOfView
	SetMouseSensitivity(Sensitivity)
	local ZoomPercent = Round(Clamp(GetPercentage(50, 0, NewFieldOfView), 0, 100), 0.5)
	if ScopeGuiCopy and ScopeGuiCopy.Parent then
		local ZoomPercentLabel = ScopeGuiCopy:FindFirstChild("ZoomPercent")
		if ZoomPercentLabel then
			ZoomPercentLabel.Value = tostring(ZoomPercent)
		end
		Zoomed.Percent = ZoomPercent
	end
	if Round(Camera.FieldOfView, 0.5) ~= FieldOfView then
		Sounds.Zoom:Play()
	end
end

function ResetZoom()
	Zoomed.Mode = false
	Spawn(function()
		SetAnimation("StopAnimation", Animations.Scope)
	end)
	if MouseSensivityConnection then
		MouseSensivityConnection:disconnect()
	end
	SetCursor()
	if Player then
		Player.CameraMode = Enum.CameraMode.Classic
	end
	SetLocalTransparency({Object = Handle, Transparency = nil, AutoUpdate = true})
	local Camera = GetCamera()
	Camera.FieldOfView = 70
	if CheckIfAlive() then
		Humanoid.WalkSpeed = 16
	end
end

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local function StopAnimation(Animation)
		for i, v in pairs(AnimationTracks) do
			if v.Animation == Animation then
				v.AnimationTrack:Stop(value.EndFadeTime)
				for i, v in pairs({v.KeyframeReached, v.TrackStopped}) do
					if v then
						v:disconnect()
					end
				end
				table.remove(AnimationTracks, i)
			end
		end
	end
	if mode == "PlayAnimation" then
		for i, v in pairs(AnimationTracks) do
			if v.Animation == value.Animation then
				if value.Speed then
					v.AnimationTrack:AdjustSpeed(value.Speed)
					return
				elseif value.Weight or value.FadeTime then
					v.AnimationTrack:AdjustWeight(value.Weight, value.FadeTime)
					return
				else
					StopAnimation(value.Animation, false)
				end
			end
		end
		local AnimationMonitor = Create("Model"){}
		local TrackEnded = Create("StringValue"){Name = "Ended"}
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		local TrackStopped, KeyframeReached
		if value.PauseAt then
			KeyframeReached = AnimationTrack.KeyframeReached:connect(function(Keyframe)
				if Keyframe == value.PauseAt then
					AnimationTrack:AdjustSpeed(0)
					if KeyframeReached then
						KeyframeReached:disconnect()
					end
				end
			end)
		end
		if not value.Manual then
			TrackStopped = AnimationTrack.Stopped:connect(function()
				if TrackStopped then
					TrackStopped:disconnect()
				end
				StopAnimation(value.Animation, true)
				TrackEnded.Parent = AnimationMonitor
			end)
		end
		table.insert(AnimationTracks, {Animation = value.Animation, AnimationTrack = AnimationTrack, KeyframeReached = KeyframeReached, TrackStopped = TrackStopped})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
		if TrackStopped then
			AnimationMonitor:WaitForChild(TrackEnded.Name)
		end
		return TrackEnded.Name
	elseif mode == "StopAnimation" and value then
		StopAnimation(value.Animation)
	end
end

function KeyPressed(Key, Down)
	if not CheckIfAlive() or not ToolEquipped then
		return
	end
	if Key == "z" and Down and Tool.Enabled then
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if not PlayerGui then
			return
		end
		if Zoomed.Mode then
			Zoomed.Mode = false
			ResetZoom()
			if ScopeGuiCopy then
				Debris:AddItem(ScopeGuiCopy, 0)
			end
		elseif not Zoomed.Mode then
			Zoomed.Mode = true
			Spawn(function()
				SetAnimation("PlayAnimation", Animations.Scope)
			end)
			Humanoid.WalkSpeed = 10
			PlayerMouse.Icon = Cursors.Transparent
			SetLocalTransparency({Object = Handle, Transparency = 1, AutoUpdate = true})
			local Values = {
				{Name = "Tool", Class = "ObjectValue", Value = Tool},
				{Name = "ZoomPercent", Class = "NumberValue", Value = Tool},
			}
			ScopeGuiCopy = ScopeGui:Clone()
			for i, v in pairs(Values) do
				local Value = Create(v.Class){
					Name = v.Name,
					Value = v.Value,
					Parent = ScopeGuiCopy,
				}
			end
			ScopeGuiCopy.ScopeManager.Disabled = false
			ScopeGuiCopy.Parent = PlayerGui
			Player.CameraMode = Enum.CameraMode.LockFirstPerson
			Zoom(60)
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Activated()
	if not ToolEquipped or not Tool.Enabled or not CheckIfAlive() then
		return
	end
	if Zoomed.Mode then
		Recoil()
	end
	local MouseData = OnClientInvoke("MousePosition")
	InvokeServer("MouseClick", {Down = true, Data = {TargetData = MouseData, ExtraData = {Zoom = Zoomed}}})
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Mouse
		SetCursor()
		Mouse.WheelForward:connect(function()
			if Zoomed.Mode then
				Zoom(false)
			end
		end)
		Mouse.WheelBackward:connect(function()
			if Zoomed.Mode then
				Zoom(true)
			end
		end)
		Mouse.KeyDown:connect(function(Key)
			KeyPressed(Key, true)
		end)
		Mouse.KeyDown:connect(function(Key)
			KeyPressed(Key, false)
		end)
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("Animation") then
				ContentProvider:Preload(v.AnimationId)
			end
		end
	end)
end

function Unequipped()
	ResetZoom()
	for i, v in pairs(AnimationTracks) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	AnimationTracks = {}
	for i, v in pairs(LocalObjects) do
		if v.Object then
			v.Object.LocalTransparencyModifier = v.OriginalTransparency
		end
	end
	LocalObjects = {}
	for i, v in pairs({ModifyTransparency, MouseSensivityConnection, ScopeGuiCopy}) do
		if v then
			if tostring(v) == "Connection" then
				v:disconnect()
			elseif v.Parent then
				Debris:AddItem(v, 0)
			end
		end
	end
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "MousePosition" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	end
end

Tool.Changed:connect(function(Property)
	if Property == "Enabled" then
		SetCursor()
	end
end)

ClientControl.OnClientInvoke = OnClientInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="ScreenGui" referent="RBXA2A834ABABBB4535A2F226EAB7CD25D1">
				<Properties>
					<string name="Name">ScopeGui</string>
				</Properties>
				<Item class="LocalScript" referent="RBX3071C00F2AE54B53899EDE6B55D07EEB">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ScopeManager</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

wait()

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

Player = Players.LocalPlayer
Mouse = Player:GetMouse()

Gui = script.Parent
MainFrame = Gui:WaitForChild("MainFrame")
Scope = MainFrame:WaitForChild("Scope")
LeftFrame = MainFrame:WaitForChild("LeftFrame")
RightFrame = MainFrame:WaitForChild("RightFrame")
Crosshair = MainFrame:WaitForChild("Crosshair")
ZoomPercentLabel = MainFrame:WaitForChild("ZoomPercentLabel")

Tool = Gui:WaitForChild("Tool").Value
ZoomPercent = Gui:WaitForChild("ZoomPercent")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

MainFrame.Visible = false

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function AdjustScreenSize()
	Scope.Position = UDim2.new(0.5, (-10 - (Gui.AbsoluteSize.Y / 2)), 0, -10)
	Scope.Size = UDim2.new(0, (20 + Gui.AbsoluteSize.Y), 0, (30 + Gui.AbsoluteSize.Y), 1, 20)
	LeftFrame.Size = UDim2.new(0, (30 + ((Gui.AbsoluteSize.X - Gui.AbsoluteSize.Y) / 2)), 1, 30)
	RightFrame.Size = UDim2.new(0, (30 + ((Gui.AbsoluteSize.X - Gui.AbsoluteSize.Y) / 2)), 1, 30)
	RightFrame.Position = UDim2.new(1, (-10 - ((Gui.AbsoluteSize.X - Gui.AbsoluteSize.Y) / 2)), 0, -10)
end

function SetSpread(Table)
	local Spread, Speed = Table.Spread, Table.Speed
	if not Spread or not Speed then
		return
	end
	Crosshair:TweenPosition(UDim2.new(0.5, ((1 - (Spread * Gui.AbsoluteSize.Y)) / 2), 0.5, (-18 - ((Spread * Gui.AbsoluteSize.Y)) / 2)), Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, Speed, true, (function() end))
	Crosshair:TweenSize(UDim2.new(0, (Spread * Gui.AbsoluteSize.Y), 0, (Spread * Gui.AbsoluteSize.Y)), Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, Speed, true, (function() end))
end

function AdjustSpread()
	if not Tool.Enabled then
		SetSpread({Spread = 0.125, Speed = 0.5})
	elseif Tool.Enabled then
		SetSpread({Spread = 0, Speed = 0.25})
	end
end

function AdjustZoomDisplay()
	ZoomPercentLabel.Visible = true
	ZoomPercentLabel.Text = ("Zoom : " .. tostring(ZoomPercent.Value) .. "%")
end

Tool.Changed:connect(function(Property)
	if Property == "Enabled" then
		AdjustSpread()
	end
end)

ZoomPercent.Changed:connect(function()
	AdjustZoomDisplay()
end)

Gui.Changed:connect(function()
	AdjustScreenSize()
end)

RunService.RenderStepped:connect(function()
	local MouseTarget = Mouse.Target
	local EnemyTarget = nil
	local CursorColor = BrickColor.new("Institutional white").Color
	if not Tool.Enabled then
		CursorColor = BrickColor.new("Medium stone grey").Color
	else
		if MouseTarget then
			local character = MouseTarget.Parent
			if character:IsA("Hat") or character:IsA("Tool") then
				character = character.Parent
			end
			local humanoid = character:FindFirstChild("Humanoid")
			if humanoid and humanoid.Health > 0 then
				local player = Players:GetPlayerFromCharacter(character)
				if not player or (player and player ~= Player and not IsTeamMate(Player, player)) then
					EnemyTarget = character
				end
			end
		end
		if EnemyTarget then
			CursorColor = BrickColor.new("Magenta").Color
		end
	end
	for i, v in pairs(Crosshair:GetChildren()) do
		if v:IsA("Frame") then
			v.BackgroundColor3 = CursorColor
			v.BorderColor3 = CursorColor
		end
	end
end)

AdjustScreenSize()
AdjustZoomDisplay()

MainFrame.Visible = true]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX5536625DCE2544199AC3A3833E9D9B1B">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">MainFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX01FC46D55AA04CC5B7EB8348CB207E8B">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278255360</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Crosshair</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>0</XO>
								<YS>0.5</YS>
								<YO>-18</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">4</int>
						</Properties>
						<Item class="Frame" referent="RBXF291EF0A4ED84BC9A70F66D7797ED986">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4294967295</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">TopFrame</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-1</XO>
									<YS>0</YS>
									<YO>-15</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>2</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">4</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX122CDC2190F7461EA2524E9DCF6451F6">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4294967295</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">BottomFrame</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-1</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>2</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">4</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX57FF24CF0F164D77B386D758E2252BCA">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4294967295</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">LeftFrame</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>-15</XO>
									<YS>0.5</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>15</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">4</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX8DE6C128C302498F818B9C610EE446C4">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4294967295</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">RightFrame</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>15</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">4</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX486045E710D047E2BBC42B1989B1C156">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">LeftFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-10</XO>
								<YS>0</YS>
								<YO>-10</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>214</XO>
								<YS>1</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX7E73D5D1E78F46D7B65D7B46C41C5BA2">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">RightFrame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>-194</XO>
								<YS>0</YS>
								<YO>-10</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>214</XO>
								<YS>1</YS>
								<YO>30</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX93CD97AEACF344DB873E6368AA4B1F34">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">TopBarCover</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>-36</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>36</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBXD847DA0E4E914BD98BB800800E1D84BA">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4278190080</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=72002022</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Scope</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>-280</XO>
								<YS>0</YS>
								<YO>-10</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>559</XO>
								<YS>0</YS>
								<YO>569</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX0B884F16E2E04D88BF1209BF454F463A">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">6</token>
							<string name="Name">ZoomPercentLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.774999976</XS>
								<XO>50</XO>
								<YS>0.5</YS>
								<YO>-100</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Zoom : 0%</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4294967295</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0.125</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">2</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">4</int>
						</Properties>
						<Item class="TextLabel" referent="RBXCF4C7D17029D422E872D44F8E0788BA5">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">6</token>
								<string name="Name">Bar</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">true</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">__________</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4294967295</Color3>
								<float name="TextStrokeTransparency">0.899999976</float>
								<float name="TextTransparency">0.125</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">2</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">4</int>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Script" referent="RBX308E8559F4134FA6928B21A953180863">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Functions = require(script:WaitForChild("Functions"))
CameraFixer = script:WaitForChild("CameraFixer")
Sparks = script:WaitForChild("Sparks")
Fire = script:WaitForChild("Fire")

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

Grips = {
	Unequipped = CFrame.new(0, -0.4, 0.9, 1, 0, 0, 0, 1, 0, 0, 0, 1),
	Equipped = CFrame.new(0.1, -0.4, 1.25, 0.85, -0, 0.525, 0, 1, 0, -0.525, 0, 0.85),
}

Animations = {
	Equip = {Animation = Tool:WaitForChild("Equip"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil, Manual = false},
	Fire = {Animation = Tool:WaitForChild("Fire"), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = 0.75, Manual = false},
}

Sounds = {
	Equip = Handle:WaitForChild("Equip"),
	Shot = Handle:WaitForChild("Shot"),
	Reload = Handle:WaitForChild("Reload"),
	Reload2 = Handle:WaitForChild("Reload2"),
}

Configuration = {
	Accuracy = {
		Max = Vector3.new(0.375, 0.375, 0.375),
	},
	Damage = {
		Base = 22,
		Distance = {Min = 0, Max = 18},
		Multiplier = 0.75,
		Critical = {Chance = 8, Damage = {Min = 15, Max = 25}},
	},
	--WindVec = Vector3.new(2, 1, 1).Unit,
	FireRate = 2,
	Range = 350,
	FadeRate = 1.125,
	FiringOffset = CFrame.new((Handle.Size.X * 2), 0.1, -(Handle.Size.Z / 2)),
}

ToolEquipped = false

Remotes = Tool:WaitForChild("Remotes")
ServerControl = (Remotes:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Remotes,
})
ClientControl = (Remotes:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Remotes,
})

for i, v in pairs(Tool:GetChildren()) do
	if v:IsA("BasePart") and v ~= Handle then
		v:Destroy()
	end
end

Handle.Transparency = 0
Tool.Grip = Grips.Unequipped
Tool.Enabled = true

function Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
end

function LaserTouched(Hit, StartPos, EndPos)
	if not Hit or not Hit.Players then
		return
	end
	local HitObject = Hit.Object
	if HitObject and HitObject.Parent then
		local HitCharacter = HitObject.Parent
		if HitCharacter:IsA("Hat") or HitCharacter:IsA("Tool") then
			HitCharacter = HitCharacter.Parent
		end
		local HitHumanoid = nil
		for i, v in pairs(HitCharacter:GetChildren()) do
			if v:IsA("Humanoid") then
				HitHumanoid = v
			end
		end
		if not HitHumanoid then
			local ParticlePart = BasePart:Clone()
			ParticlePart.Name = "Effect"
			ParticlePart.Transparency = 1
			ParticlePart.Anchored = true
			ParticlePart.CanCollide = false
			local Color = BrickColor.new("Magenta")
			local Particles = Sparks:Clone()
			Particles.Color = ColorSequence.new(Color.Color, Color.Color)
			Particles.Enabled = true
			local Duration = Create("NumberValue"){
				Name = "Duration",
				Value = 0.5,
				Parent = Particles,
			}
			local ParticleScript = Particles:FindFirstChild("ParticleScript")
			if ParticleScript then
				ParticleScript.Disabled = false
			end
			Particles.Parent = ParticlePart
			Debris:AddItem(ParticlePart, 1.5)
			ParticlePart.Parent = game:GetService("Workspace")
			ParticlePart.CFrame = ((CFrame.new(EndPos, StartPos) * CFrame.new(0, ParticlePart.Size.Y, 0)) * CFrame.Angles(-(math.pi / 2), 0, 0))
		end
	end
	for i, v in pairs(Hit.Players) do
		if v.Humanoid and v.Hit then
			local humanoid = v.Humanoid
			local character = humanoid.Parent
			local torso = character:FindFirstChild("Torso")
			if not humanoid or humanoid.Health == 0 or not torso then
				return
			end
			local player = Players:GetPlayerFromCharacter(character)
			if player and Functions.IsTeamMate(Player, player) then
				return
			end
			local RayDistance = (StartPos - EndPos).Magnitude
			local Damage = Configuration.Damage
			local DistanceDamage = Round(Clamp(GetPercentage(0, (Configuration.Range / 2), RayDistance), Damage.Distance.Min, Damage.Distance.Max), 0.5)
			local DeterminedDamage = (Damage.Base)
			DeterminedDamage = (DeterminedDamage + DistanceDamage)
			local CriticalChance = math.random(1, Damage.Critical.Chance)
			if CriticalChance == 1 then
				DeterminedDamage = (DeterminedDamage + math.random(Damage.Critical.Damage.Min, Damage.Critical.Damage.Max))
			end
			if v.Hit.Name == "Head" then
				DeterminedDamage = Clamp((DeterminedDamage * (1 + Damage.Multiplier)), 0, 100)
			end
			local HealthAfter = (humanoid.Health - DeterminedDamage)
			Functions.UntagHumanoid(humanoid)
			Functions.TagHumanoid(humanoid, Player)
			humanoid:TakeDamage(DeterminedDamage)
			if HealthAfter <= 0 then
				for i, v in pairs(character:GetChildren()) do
					if v:IsA("BasePart") and v.Transparency < 1 then
						local FireCopy = Fire:Clone()
						FireCopy.Enabled = true
						FireCopy.Parent = v
					end
				end
			end
		end
	end
end

function FireLaser(StartPosition, TargetPosition)
	local Direction = CFrame.new(StartPosition, TargetPosition).lookVector
	local RayHit, RayPos, RayNormal = Functions.CastRay(StartPosition, Direction, Configuration.Range, {Character}, false)
	local RayLength = (StartPosition - RayPos).Magnitude
	Direction = CFrame.new(StartPosition, RayPos)
	local Laser = BasePart:Clone()
	local FadeDuration = Configuration.FadeRate
	local FadeRate = 10
	local Laser = BasePart:Clone()
	Laser.Name = "Laser"
	Laser.BrickColor = BrickColor.new("Magenta")
	Laser.Transparency = 0
	Laser.Material = Enum.Material.Neon
	Laser.Size = Vector3.new(0.2, 0, RayLength)
	Laser.CFrame = (Direction * CFrame.new(0, 0, -(RayLength / 2)))
	Laser.Anchored = true
	Laser.CanCollide = false
	local Mesh = Create("CylinderMesh"){
		Name = "Mesh",
		Scale = Vector3.new(1, 1, 1),
		VertexColor = Vector3.new(1, 1, 1),
		Parent = Laser,
	}
	for i, v in pairs({"Top", "Bottom", "Left", "Right", "Front", "Back"}) do
		local Light = Create("SurfaceLight"){
			Name = "Light",
			Color = Laser.BrickColor.Color,
			Face = Enum.NormalId[v],
			Brightness = 100,
			Range = 3,
			Shadows = false,
			Enabled = true,
			Parent = Laser,
		}
	end
	local OrigCF = Laser.CFrame
	Laser.Size = Vector3.new(Laser.Size.X, Laser.Size.Z, Laser.Size.Y)
	Laser.CFrame = (OrigCF * CFrame.Angles((math.pi / 2), 0, 0))
	Debris:AddItem(Laser, FadeDuration)
	Laser.Parent = game:GetService("Workspace")
	LaserTouched(RayHit, StartPosition, RayPos)
	Spawn(function()
		local FadeRate = 0.05
		local TimeToFade = 1
		local OrigTransparency = Laser.Transparency
		local TotalFade = (TimeToFade / FadeRate)
		for i = 1, TotalFade do
			if not Laser or not Laser.Parent or Laser.Transparency >= 1 then
				break
			end
			wait(FadeRate)
			--Laser.CFrame = (Laser.CFrame + Configuration.WindVec * FadeRate)
			Laser.Transparency = (OrigTransparency + (i / (TimeToFade / FadeRate)))
			for ii, vv in pairs(Laser:GetChildren()) do
				if vv:IsA("Light") then
					vv.Brightness = (50 - (50 * (GetPercentage(0, 1, Laser.Transparency) * 0.01)))
					if vv.Brightness <= 0 then
						vv.Enabled = false
					end
				--[[elseif vv:IsA("DataModelMesh") then
					local NewScale = (1 - (1 * (GetPercentage(0, 1, Laser.Transparency) * 0.01)))
					vv.Scale = Vector3.new(NewScale, vv.Scale.Y, NewScale)]]
				end
			end
		end
	end)
end

function Activated(Data)
	if not Tool.Enabled or not CheckIfAlive() or not Data or not Data.TargetData or not Data.TargetData.Position then
		return
	end
	Tool.Enabled = false
	local TargetData = Data.TargetData
	local ExtraData = Data.ExtraData
	local FireSound = Sounds.Shot:Clone()
	Debris:AddItem(FireSound, 1.25)
	FireSound.Parent = Handle
	FireSound:Play()
	local StartPosition = (Handle.CFrame * Configuration.FiringOffset).p
	local TargetPosition = TargetData.Position
	Spawn(function()
		InvokeClient("PlayAnimation", Animations.Fire)
	end)
	local Accuracy = (Configuration.Accuracy.Max * 100)
	if ExtraData.Zoom then
		Accuracy = (Configuration.Accuracy.Max * (1 - ((ExtraData.Zoom.Percent * 0.01) + 0)))
	end
	TargetPosition = TargetPosition + Vector3.new((math.random(-Accuracy.X, Accuracy.X) * 0.01), (math.random(-Accuracy.Y, Accuracy.Y) * 0.01), (math.random(-Accuracy.Z, Accuracy.Z) * 0.01))
	FireLaser(StartPosition, TargetPosition)
	wait(Configuration.FireRate / 2)
	Sounds.Reload2:Play()
	wait(Configuration.FireRate / 2)
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	Sounds.Equip:Play()
	Tool.Grip = Grips.Equipped
	Spawn(function()
		local CameraFixScript = CameraFixer:Clone()
		CameraFixScript.Name = (Player.Name .. "'s" .. CameraFixer.Name)
		local Values = {
			{Name = "Creator", Class = "ObjectValue", Value = Player},
			{Name = "Tool", Class = "ObjectValue", Value = Tool},
		}
		for i, v in pairs(Values) do
			local Value = Create(v.Class){
				Name = v.Name,
				Value = v.Value,
				Parent = CameraFixScript,
			}
		end
		CameraFixScript.Disabled = false
		CameraFixScript.Parent = game:GetService("Workspace")
		InvokeClient("PlayAnimation", Animations.Equip)
	end)
	ToolEquipped = true
end

function Unequipped()
	Tool.Grip = Grips.Unequipped
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
	if mode == "MouseClick" then
		local Down = value.Down
		local Data = value.Data
		if Down and Data then
			Activated(Data)
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="ParticleEmitter" referent="RBX1B37340DE7F74602A6D7A580AF144C49">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">0.5 0.5 </NumberRange>
					<float name="LightEmission">1</float>
					<string name="Name">Sparks</string>
					<float name="Rate">100</float>
					<NumberRange name="RotSpeed">0 0 </NumberRange>
					<NumberRange name="Rotation">0 0 </NumberRange>
					<NumberSequence name="Size">0 0.1 0 1 0.1 0 </NumberSequence>
					<NumberRange name="Speed">2.5 2.5 </NumberRange>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=277951744</url></Content>
					<NumberSequence name="Transparency">0 0.25 0 1 0.25 0 </NumberSequence>
					<float name="VelocitySpread">25</float>
					<float name="ZOffset">0</float>
				</Properties>
				<Item class="Script" referent="RBX2DACD7653507478F912E5F893FAD0BBF">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ParticleScript</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Particle = script.Parent

Duration = Particle:WaitForChild("Duration")

wait(Duration.Value)

Particle.Enabled = false
]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX5B32EEEBB3E44044AE7A644312F11B31">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {
	
	CheckTableForInstance = (function(Table, Instance)
		for i, v in pairs(Table) do
			if v == Instance then
				return true
			end
		end
		return false
	end),
	
	CheckTableForString = (function(Table, String)
		for i, v in pairs(Table) do
			if string.lower(v) == string.lower(String) then
				return true
			end
		end
		return false
	end),
	
	CheckIntangible = (function(Hit, IgnoreHumanoids)
		local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Ray", "Bullet", "ParticlePart"}
		if not Hit or not Hit.Parent then
			return true
		end
		local character = Hit.Parent
		if character:IsA("Hat") or character:IsA("Tool") then
			character = character.Parent
		end
		local humanoid = nil
		for i, v in pairs(character:GetChildren()) do
			if v:IsA("Humanoid") then
				humanoid = v
				break
			end
		end
		if not IgnoreHumanoids and humanoid then
			return
		end
		if ((humanoid or (Hit.Transparency >= 1 and not Hit.CanCollide) or Functions.CheckTableForString(ProjectileNames, Hit.Name))) then
			return true
		end
		return false
	end),
	
	CastRay = (function(StartPos, Vec, Length, Ignore, DelayIfHit, HitObjects)
		local MaxPlayersHit = 3
		local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
		local HitObjects = (HitObjects or {Object = RayHit, Players = {}})
		HitObjects.Object = RayHit
		if RayHit and Functions.CheckIntangible(RayHit, (#HitObjects.Players < MaxPlayersHit)) then
			local character = RayHit.Parent
			local humanoid = nil
			for i, v in pairs(character:GetChildren()) do
				if v:IsA("Humanoid") then
					humanoid = v
					break
				end
			end
			local HumanoidFound = false
			for i, v in pairs(HitObjects.Players) do
				if v.Humanoid == humanoid then
					HumanoidFound = true
				end
			end
			if humanoid and not HumanoidFound and #HitObjects.Players < MaxPlayersHit then
				table.insert(HitObjects.Players, {Hit = RayHit, Humanoid = humanoid})
			end
			if DelayIfHit then
				wait()
			end
			RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).Magnitude)), Ignore, DelayIfHit, HitObjects)
		end
		return HitObjects, RayPos, RayNormal
	end),

	TagHumanoid = (function(humanoid, player)
		local Creator_Tag = Create("ObjectValue"){
			Name = "creator",
			Value = player,
		}
		Debris:AddItem(Creator_Tag, 2)
		Creator_Tag.Parent = humanoid
	end),
	
	UntagHumanoid = (function(humanoid)
		for i, v in pairs(humanoid:GetChildren()) do
			if v:IsA("ObjectValue") and v.Name == "creator" then
				v:Destroy()
			end
		end
	end),
	
	IsTeamMate = (function(Player1, Player2)
		return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
	end),
	
}

return Functions]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX0AD7CE552AD645AFBE5E5F8B7E84C869">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">CameraFixer</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ValueNames = {"Creator", "Tool"}
Values = {}

CameraFixScript = script:FindFirstChild("CameraFixScript")

Destroying = false

function DestroyScript()
	if Destroying then
		return
	end
	Destroying = true
	local Creator = Values.Creator
	if CameraFixScript and Creator and Creator:IsA("Player") and Creator.Parent then
		for i, v in  pairs({Creator:FindFirstChild("Backpack"), Creator:FindFirstChild("PlayerGui"), Creator:FindFirstChild("Character")}) do
			if v then
				local CameraScript = CameraFixScript:Clone()
				CameraScript.Disabled = false
				CameraScript.Parent = v
			end
		end
	end
	Debris:AddItem(script, 1)
	return
end

for i, v in pairs(ValueNames) do
	local Value = script:FindFirstChild(v)
	if not Value or not Value.Value or not Value.Value.Parent then
		DestroyScript()
		return
	else
		Values[Value.Name] = Value.Value
	end
end

if not Values.Creator:IsA("Player") then
	DestroyScript()
	return
end

Values.Tool.Changed:connect(function(Property)
	if Destroying then
		return
	end
	local Tool = Values.Tool
	if not Tool or not Tool.Parent or not Players:GetPlayerFromCharacter(Tool.Parent) then
		DestroyScript()
		return
	end
end)

Values.Creator.Changed:connect(function(Property)
	if Destroying then
		return
	end
	local Creator = Values.Creator
	if not Creator or not Creator.Parent or not Creator.Character or not Creator.Character.Parent then
		DestroyScript()
		return
	end
end)]]></ProtectedString>
				</Properties>
				<Item class="LocalScript" referent="RBXDEE77995F364494AB80169C19E1E68C2">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">CameraFixScript</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Player = Players.LocalPlayer
Camera = game:GetService("Workspace").CurrentCamera

function DestroyScript()
	Debris:AddItem(script, 1)
	return
end

Player.CameraMode = Enum.CameraMode.Classic
Camera.FieldOfView = 70

DestroyScript()]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="ParticleEmitter" referent="RBX97553A48BBE0406AA42DC05617F05D7E">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 1 0.0941177 0.956863 0 1 0.333333 0 0.498039 0 </ColorSequence>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">0.75 0.75 </NumberRange>
					<float name="LightEmission">1</float>
					<string name="Name">Fire</string>
					<float name="Rate">1000</float>
					<NumberRange name="RotSpeed">5 8 </NumberRange>
					<NumberRange name="Rotation">4 5 </NumberRange>
					<NumberSequence name="Size">0 0 0 0.90399 0.875 0 1 1.25 0 </NumberSequence>
					<NumberRange name="Speed">0 0 </NumberRange>
					<Content name="Texture"><url>rbxasset://textures/particles/fire_main.dds</url></Content>
					<NumberSequence name="Transparency">0 0.5 0 1 0.5 0 </NumberSequence>
					<float name="VelocitySpread">0</float>
					<float name="ZOffset">1</float>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>