<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXEAFCE0A778E24A1DBBF3084859032065">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>-0.300000012</X>
				<Y>0.5</Y>
				<Z>0</Z>
				<R00>6.50414078e-009</R00>
				<R01>1</R01>
				<R02>-8.05994423e-005</R02>
				<R10>-8.06971002e-005</R10>
				<R11>8.0599435e-005</R11>
				<R12>1</R12>
				<R20>1</R20>
				<R21>0</R21>
				<R22>8.06971002e-005</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">Plungeatron9000</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=287440390</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXDA672CA516A34CA58E12AA5E2B3AF104">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.129162282</X>
					<Y>17.5091591</Y>
					<Z>21.955862</Z>
					<R00>0.678831577</R00>
					<R01>0.722610712</R01>
					<R02>-0.130466819</R02>
					<R10>0.734287679</R10>
					<R11>-0.667282224</R11>
					<R12>0.124724299</R12>
					<R20>0.00306893955</R20>
					<R21>-0.18046695</R21>
					<R22>-0.983576298</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>3.62505764e-020</X>
					<Y>0.00388934324</Y>
					<Z>3.69722721e-020</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>2</X>
					<Y>4</Y>
					<Z>0.25</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXA3F58E7DA39D4BB38C028C6191A2DA0C">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=287440161</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.75</X>
						<Y>0.75</Y>
						<Z>0.75</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=287440323</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX620EC1791ED74EDC82FDCA82588B283C">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Fire</string>
					<float name="Pitch">0.800000012</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=228086083</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXD9459500957C44FE846B92C950719A2E">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX53795F6CFEB0438CB0973F16DB1DC315">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")
ContentProvider = game:GetService("ContentProvider")
UserInputService = game:GetService("UserInputService")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputFrame = Instance.new("Frame")
InputFrame.BackgroundTransparency = 1
InputFrame.Size = UDim2.new(1, 0, 1, 0)
InputFrame.Parent = InputCheck

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local function StopAnimation(Animation)
		for i, v in pairs(Animations) do
			if v.Animation == Animation then
				v.AnimationTrack:Stop(value.EndFadeTime)
				if v.TrackStopped then
					v.TrackStopped:disconnect()
				end
				table.remove(Animations, i)
			end
		end
	end
	if mode == "PlayAnimation" then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				if value.Speed then
					v.AnimationTrack:AdjustSpeed(value.Speed)
					return
				elseif value.Weight or value.FadeTime then
					v.AnimationTrack:AdjustWeight(value.Weight, value.FadeTime)
					return
				else
					StopAnimation(value.Animation, false)
				end
			end
		end
		local AnimationMonitor = Create("Model"){}
		local TrackEnded = Create("StringValue"){Name = "Ended"}
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		local TrackStopped
		if not value.Manual then
			TrackStopped = AnimationTrack.Stopped:connect(function()
				if TrackStopped then
					TrackStopped:disconnect()
				end
				StopAnimation(value.Animation, true)
				TrackEnded.Parent = AnimationMonitor
			end)
		end
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack, TrackStopped = TrackStopped})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
		if TrackStopped then
			AnimationMonitor:WaitForChild(TrackEnded.Name)
		end
		return TrackEnded.Name
	elseif mode == "StopAnimation" and value then
		StopAnimation(value.Animation)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Player:GetMouse()
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if PlayerGui then
			InputCheckClone = InputCheck:Clone()
			if UserInputService.TouchEnabled then
				InputCheckClone = InputCheck:Clone()
				InputCheckClone.InputButton.InputBegan:connect(function()
					InvokeServer("Button1Click", {Down = true})
				end)
				InputCheckClone.InputButton.InputEnded:connect(function()
					InvokeServer("Button1Click", {Down = false})
				end)
				InputCheckClone.Parent = PlayerGui
			end
		end
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("Animation") then
				ContentProvider:Preload(v.AnimationId)
			end
		end
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	if InputCheckClone then
		Debris:AddItem(InputCheckClone, 0)
	end
	if ObjectLocalTransparencyModifier then
		ObjectLocalTransparencyModifier:disconnect()
	end
	LocalObjects = {}
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	elseif Mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXC5B21B145BEF4C6098353C9757874FD7">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.604393244</X>
					<Y>18.5268345</Y>
					<Z>22.1822128</Z>
					<R00>-0.678831577</R00>
					<R01>-0.130466729</R01>
					<R02>0.722610712</R02>
					<R10>-0.734287679</R10>
					<R11>0.124724336</R11>
					<R12>-0.667282224</R12>
					<R20>-0.00306902546</R20>
					<R21>-0.983576298</R21>
					<R22>-0.180466905</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">DisplayPart</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>-0.791324615</X>
					<Y>-0.956017017</Y>
					<Z>1.75123096</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>0.5</Y>
					<Z>3</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX92CDC22277534175B82D6BCD4F18FBCB">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=287440098</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.75</X>
						<Y>0.75</Y>
						<Z>0.75</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=287440323</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBXD208861AB7B14A95A18BD128DA5577A1">
				<Properties>
					<CoordinateFrame name="C0">
						<X>0.25</X>
						<Y>-1.25</Y>
						<Z>0</Z>
						<R00>-1</R00>
						<R01>8.74227766e-008</R01>
						<R02>0</R02>
						<R10>3.82137093e-015</R10>
						<R11>4.37113883e-008</R11>
						<R12>1</R12>
						<R20>8.74227766e-008</R20>
						<R21>1</R21>
						<R22>-4.37113883e-008</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">Weld</string>
					<Ref name="Part0">RBXDA672CA516A34CA58E12AA5E2B3AF104</Ref>
					<Ref name="Part1">RBXC5B21B145BEF4C6098353C9757874FD7</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX5FC1BD3FB3A2488CA0CAE8D453889A1C">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-1.06768751</X>
					<Y>18.8592262</Y>
					<Z>19.4431553</Z>
					<R00>-0.970104277</R00>
					<R01>0.0593912825</R01>
					<R02>-0.235309109</R02>
					<R10>-0</R10>
					<R11>0.969593227</R11>
					<R12>0.244722292</R12>
					<R20>0.242688492</R20>
					<R21>0.237406135</R21>
					<R22>-0.940606534</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-0.439410806</X>
					<Y>18.2058163</Y>
					<Z>21.9545803</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX101147FABD4E4AE183BB3A992991D325">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

wait()

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ProjectileScript = script:WaitForChild("ProjectileScript")
Bubbles = script:WaitForChild("Bubbles")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

Animations = {}

Sounds = {
	Fire = Handle:WaitForChild("Fire"),
}

BasePlunger = BasePart:Clone()
BasePlunger.Name = "Projectile"
BasePlunger.Size = Vector3.new(0.5, 0.5, 3)
BasePlunger.CanCollide = true
BasePlunger.Locked = true
BasePlunger.Anchored = false
Create("SpecialMesh"){
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "287440098"),
	TextureId = (BaseUrl .. "287440323"),
	Scale = Vector3.new(0.75, 0.75, 0.75),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BasePlunger,
}

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Rate = (1 / 30)
Gravity = 196.20

MaxDistance = 60
Damage = 30
ReloadTime = 1

ToolEquipped = false

Handle.Transparency = 0
Tool.Enabled = true

function Shoot(TargetPos)
	
	local StartPos = Handle.CFrame
	local Direction = CFrame.new(StartPos.p, TargetPos)
	local Force = 150
	
	local Plunger = BasePlunger:Clone()
	Plunger.Velocity = (Direction.lookVector * Force)
	Plunger.CanCollide = true
	Plunger.CFrame = (Direction + Direction.lookVector * 4.5)
	
	local ParticlePart = BasePart:Clone()
	ParticlePart.Name = "Effect"
	ParticlePart.Transparency = 1
	ParticlePart.CanCollide = false
	ParticlePart.Parent = Plunger
	
	local Mass = ((Plunger:GetMass() + ParticlePart:GetMass()) * Gravity)
	
	local ParticleWeld = Create("Weld"){
		Part0 = Plunger,
		Part1 = ParticlePart,
		C0 = (CFrame.new(0, 0, ((Plunger.Size.Z / 2) + (ParticlePart.Size.Z / 2))) * CFrame.Angles((math.pi / 2), 0, 0)),
		C1 = CFrame.new(0, 0, 0),
		Parent = ParticlePart,
	}
	local Force = Create("BodyForce"){
		force = Vector3.new(0, Mass, 0),
		Parent = Plunger,
	}
	local Gyro = Create("BodyGyro"){
		maxTorque = Vector3.new(math.huge, Mass, math.huge),
		cframe = Direction,
		Parent = Plunger,
	}
	local BubbleParticles = Bubbles:Clone()
	BubbleParticles.Enabled = true
	BubbleParticles.Parent = ParticlePart
	if DisplayPlunger then
		DisplayPlunger.Transparency = 1
	end
	local Values = {
		{Name = "Creator", Class = "ObjectValue", Value = Player},
		{Name = "Origin", Class = "Vector3Value", Value = StartPos.p},
		{Name = "Damage", Class = "NumberValue", Value = Damage},
		{Name = "BaseProjectile", Class = "ObjectValue", Value = BasePlunger},
	}
	local PlungerScript = ProjectileScript:Clone()
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = PlungerScript,
		}
	end
	PlungerScript.Disabled = false
	PlungerScript.Parent = Plunger
	Debris:AddItem(Plunger, 5)
	Plunger.Parent = game:GetService("Workspace")
	Sounds.Fire:Play()
	wait(ReloadTime)
	if DisplayPlunger then
		DisplayPlunger.Transparency = 0
	end
	Tool.Enabled = true
end

function CreateDisplay(CreateNew)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	if not CreateNew then
		return
	end
	DisplayPlunger = BasePlunger:Clone()
	DisplayPlunger.Name = "DisplayPart"
	DisplayPlunger.Transparency = ((Tool.Enabled and 0) or 1)
	DisplayPlunger.CanCollide = false
	local Weld = Create("Weld"){
		Part0 = Handle,
		Part1 = DisplayPlunger,
		C0 = (CFrame.new(0.25, -1.25, 0) * CFrame.Angles(-(math.pi / 2), 0, math.pi)),
		C1 = CFrame.new(0, 0, 0),
		Parent = DisplayPlunger,
	}
	DisplayPlunger.Parent = Tool
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0) and true) or false)
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	local MousePosition = InvokeClient("MousePosition")
	if not MousePosition then
		return
	end
	if not Tool.Enabled then
		return
	end
	Tool.Enabled = false
	local TargetPosition = MousePosition.Position
	Spawn(function()
		InvokeClient("PlayAnimation", Animations.Throw)
	end)
	Shoot(TargetPosition)
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		CreateDisplay(true)
	end)
	ToolEquipped = true
end

function Unequipped()
	Spawn(function()
		CreateDisplay(true)
	end)
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not mode or not value or not CheckIfAlive() then
		return
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

CreateDisplay(true)

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="ParticleEmitter" referent="RBX7E1B65A23E1A4BC4850585CB744E74C8">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 0.666667 1 1 0 1 0.666667 1 1 0 </ColorSequence>
					<float name="Drag">0</float>
					<token name="EmissionDirection">1</token>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">3 5 </NumberRange>
					<float name="LightEmission">0.5</float>
					<bool name="LockedToPart">false</bool>
					<string name="Name">Bubbles</string>
					<float name="Rate">100</float>
					<NumberRange name="RotSpeed">0 0 </NumberRange>
					<NumberRange name="Rotation">0 0 </NumberRange>
					<NumberSequence name="Size">0 0.5 0 1 0.5 0 </NumberSequence>
					<NumberRange name="Speed">5 5 </NumberRange>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=243953162</url></Content>
					<NumberSequence name="Transparency">0 0.25 0 0.95 0.25 0 1 1 0 </NumberSequence>
					<float name="VelocityInheritance">0</float>
					<float name="VelocitySpread">10</float>
					<float name="ZOffset">0</float>
				</Properties>
			</Item>
			<Item class="Script" referent="RBXFA4AFF69253A4A2C8758D12E0C2DB3C8">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ProjectileScript</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Projectile = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Sounds = {
	Hit = script:WaitForChild("Hit"),
}

Values = {}
for i, v in pairs(script:GetChildren()) do
	if string.find(string.lower(v.ClassName), string.lower("Value")) then
		Values[v.Name] = v
	end
end

BaseProjectile = Values.BaseProjectile.Value

function GetCreator()
	local Creator = Values.Creator.Value
	return (((Creator and Creator.Parent and Creator:IsA("Player")) and Creator) or nil)
end

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Part", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function FlyProjectile(Part, StartPos)
	local AlreadyHit = false
	local Player = GetCreator()
	local function PartHit(Hit)
		if not Hit or not Hit.Parent or not Player then
			return
		end
		local character = Hit.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		if not character then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player and (player == Player or IsTeamMate(Player, player)) then
			return
		end
		local humanoid = character:FindFirstChild("Humanoid")
		if not humanoid or humanoid.Health == 0 then
			return
		end
		UntagHumanoid(humanoid)
		TagHumanoid(humanoid, Player)
		humanoid:TakeDamage(Values.Damage.Value)
		return character
	end
	local function CheckForContact(Hit)
		local Directions = {{Vector = Part.CFrame.lookVector, Length = (BaseProjectile.Size.Z + 2)}, {Vector = Vector3.new(0, -1, 0), Length = (BaseProjectile.Size.Y * 1.25)}, ((Hit and {Vector = CFrame.new(Part.Position, Hit.Position).lookVector, Length = (BaseProjectile.Size.Z + 2)}) or nil)}
		local ClosestRay = {DistanceApart = math.huge}
		for i, v in pairs(Directions) do
			if v then
				local Direction = CFrame.new(Part.Position, (Part.CFrame + v.Vector * 2).p).lookVector
				local RayHit, RayPos, RayNormal = CastRay((Part.Position + Vector3.new(0, 0, 0)), Direction, v.Length, {((Player and Player.Character) or nil), Part}, false)
				if RayHit then
					local DistanceApart = (Part.Position - RayPos).Magnitude
					if DistanceApart < ClosestRay.DistanceApart then
						ClosestRay = {Hit = RayHit, Pos = RayPos, Normal = RayNormal, DistanceApart = DistanceApart}
					end
				end
			end
		end
		return ((ClosestRay.Hit and ClosestRay) or nil)
	end
	local function ConnectPart(Hit)
		if AlreadyHit then
			return
		end
		local ClosestRay = CheckForContact(Hit)
		if not ClosestRay then
			return
		end
		AlreadyHit = true
		for i, v in pairs(Part:GetChildren()) do
			if v:IsA("BasePart") then
				for ii, vv in pairs(v:GetChildren()) do
					if vv:IsA("ParticleEmitter") then
						vv.Enabled = false
						v.Anchored = true
					elseif vv:IsA("JointInstance") then
						vv:Destroy()
					end
				end
				Debris:AddItem(v, 8)
			elseif string.find(string.lower(v.ClassName), string.lower("Body")) then
				v:Destroy()
			end
		end
		local SuccessfullyHit = PartHit(ClosestRay.Hit)
		Part.Size = Vector3.new(0.2, 0.2, 0.2)
		Part.CanCollide = false
		local Hit = ClosestRay.Hit
		if SuccessfullyHit and Hit.Name == "Head" then
			local ProjectilePosition = Vector3.new(ClosestRay.Pos.X, ((ClosestRay.Pos.Y < Hit.Position.Y and Hit.Position.Y) or ClosestRay.Pos.Y), ClosestRay.Pos.Z)
			local StickCFrame = CFrame.new(ProjectilePosition, Hit.Position)
			StickCFrame = (StickCFrame * CFrame.new(0, 0, ((BaseProjectile.Size.Z / 2) - 0.1)) * CFrame.Angles(0, 0, 0))
			local Weld = Create("Motor6D"){
				Part0 = Hit,
				Part1 = Part,
				C0 = CFrame.new(0, 0, 0),
				C1 = (StickCFrame:inverse() * Hit.CFrame),
				Parent = Part,
			}
		else
			local ProjectilePosition = ClosestRay.Pos
			local StickCFrame = CFrame.new(ProjectilePosition, StartPos)
			StickCFrame = (StickCFrame * CFrame.new(0, 0, (-(BaseProjectile.Size.Z / 2) + 0)) * CFrame.Angles(0, math.pi, 0))
			local Weld = Create("Motor6D"){
				Part0 = Hit,
				Part1 = Part,
				C0 = CFrame.new(0, 0, 0),
				C1 = (StickCFrame:inverse() * Hit.CFrame),
				Parent = Part,
			}
		end
		local Sound = Sounds.Hit:Clone()
		Debris:AddItem(Sound, 1.5)
		Sound.Parent = Part
		Sound:Play()
		Part.Name = "Effect"
	end
	Part.Touched:connect(function(Hit)
		if not Hit or not Hit.Parent or AlreadyHit then
			return
		end
		ConnectPart(Hit)
	end)
	Spawn(function()
		while Part and Part.Parent and Part.Name ~= "Effect" and not AlreadyHit do
			ConnectPart()
			wait()
		end
	end)
end

FlyProjectile(Projectile, Values.Origin.Value)]]></ProtectedString>
				</Properties>
				<Item class="Sound" referent="RBX5D165FCA6B5E4DA29CFD8A2890E93143">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Hit</string>
						<float name="Pitch">1</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><url>http://www.roblox.com/asset/?id=120767420</url></Content>
						<float name="Volume">1</float>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
</roblox>