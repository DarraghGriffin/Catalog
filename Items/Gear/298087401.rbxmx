<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX6C9906F1F3324E9BB784930315A4BC50">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.625</Y>
				<Z>0.899999976</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">GatlingLaserGun</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=287439847</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXD724320D68184B5FBDACE788E57A3CBC">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.0360759981</X>
					<Y>0.924996972</Y>
					<Z>-0.0347810015</Z>
					<R00>0.4906196</R00>
					<R01>0.492696017</R01>
					<R02>0.718709707</R02>
					<R10>-0.017590411</R10>
					<R11>0.830231607</R11>
					<R12>-0.557139456</R12>
					<R20>-0.871196449</R20>
					<R21>0.260700852</R21>
					<R22>0.415994436</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>1.75</Y>
					<Z>4.25</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXB973BD2B0CB34365967A7E76050094F3">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=287439768</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.699999988</X>
						<Y>0.699999988</Y>
						<Z>0.699999988</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=287439796</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXD1E7AEB140214BA2BA37CE5A1DA6D098">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Flame</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=280101905</url></Content>
					<float name="Volume">0.349999994</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX1165D80B05FE4AE9BD0798D45ED7FCBA">
				<Properties>
					<bool name="Looped">true</bool>
					<string name="Name">Fire</string>
					<float name="Pitch">0.184</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=290541622</url></Content>
					<float name="Volume">0.0401279926</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXAEB9FB772C21440FA5A22E51549A32F6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">IgniteFlameOff</string>
					<float name="Pitch">2</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=291431305</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX9386B669AC35467BBEB37E48FDCE9841">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">IgniteFlameOn</string>
					<float name="Pitch">0.5</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=291431305</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX7F7147B95D2840E8A9FB38C17CCC9E47">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX948B4D2E0ADE4AEEAECF090E12838E55">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")
ContentProvider = game:GetService("ContentProvider")
UserInputService = game:GetService("UserInputService")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputFrame = Instance.new("Frame")
InputFrame.Name = "InputButton"
InputFrame.BackgroundTransparency = 1
InputFrame.Size = UDim2.new(1, 0, 1, 0)
InputFrame.Parent = InputCheck

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Player:GetMouse()
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if PlayerGui then
			InputCheckClone = InputCheck:Clone()
			if UserInputService.TouchEnabled then
				InputCheckClone = InputCheck:Clone()
				InputCheckClone.InputButton.InputBegan:connect(function()
					InvokeServer("Button1Click", {Down = true})
				end)
				InputCheckClone.InputButton.InputEnded:connect(function()
					InvokeServer("Button1Click", {Down = false})
				end)
				InputCheckClone.Parent = PlayerGui
			end
		end
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("Animation") then
				ContentProvider:Preload(v.AnimationId)
			end
		end
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	if InputCheckClone then
		Debris:AddItem(InputCheckClone, 0)
	end
	if ObjectLocalTransparencyModifier then
		ObjectLocalTransparencyModifier:disconnect()
	end
	LocalObjects = {}
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX4182CCC136E342AA91EB29AAE86CFC9F">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=243282565</url></Content>
				<string name="Name">Hold</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXF6DF941A910645B4B8DB833C4CFD1962">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-1.09971988</X>
					<Y>2.87169647</Y>
					<Z>-3.27482224</Z>
					<R00>-0.973805726</R00>
					<R01>0.089472346</R01>
					<R02>-0.209038541</R02>
					<R10>-0</R10>
					<R11>0.919329047</R11>
					<R12>0.393489748</R12>
					<R20>0.227381647</R20>
					<R21>0.383182555</R21>
					<R22>-0.895247877</R22>
				</CoordinateFrame>
				<float name="FieldOfView">40</float>
				<CoordinateFrame name="Focus">
					<X>-0.45170325</X>
					<Y>1.6518836</Y>
					<Z>-0.499566078</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX83833DBD1649413CAB3F0AE16C93EA0C">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

wait()

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

FunctionsLibrary = script:WaitForChild("Functions")
ProjectileManager = script:WaitForChild("ProjectileManager")
Functions = require(FunctionsLibrary)

ParticlesBin = script:WaitForChild("Particles")
Particles = {}
for i, v in pairs(ParticlesBin:GetChildren()) do
	if v:IsA("ParticleEmitter") then
		Particles[v.Name] = v
	end
end

ModeGui = script:WaitForChild("ModeGui")

BaseUrl = "http://www.roblox.com/asset/?id="

Animations = {
	Hold = {Animation = Tool:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = 1, Duration = nil},
}

Sounds = {
	Fire = Handle:WaitForChild("Fire"),
	Flame = Handle:WaitForChild("Flame"),
	IgniteFlameOn = Handle:WaitForChild("IgniteFlameOn"),
	IgniteFlameOff = Handle:WaitForChild("IgniteFlameOff"),
}

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

BaseProjectile = BasePart:Clone()
BaseProjectile.Name = "Projectile"
BaseProjectile.BrickColor = BrickColor.new("Pastel Blue")
BaseProjectile.Material = Enum.Material.Neon
BaseProjectile.Size = Vector3.new(0.2, 1.5, 0.2)
BaseProjectile.CanCollide = false
BaseProjectile.Locked = true
BaseProjectile.Anchored = false
Create("BlockMesh"){
	Scale = Vector3.new(0.5, 1, 0.5),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseProjectile,	
}
Create("PointLight"){
	Color = BaseProjectile.BrickColor.Color,
	Brightness = 50,
	Range = 2,
	Shadows = false,
	Enabled = true,
	Parent = BaseProjectile,
}

Modes = {
	{Name = "RapidFire", Text = "MODE: Rapid-Fire Gatling Gun", Color = Color3.new(0, 0, 1)},
	{Name = "Flamethrower", Text = "MODE: Underbarrel-Flamethrower", Color = Color3.new(1, 0, 0)},
}

FireMode = Modes[1]

Rate = (1 / 30)
Gravity = 196.20

MouseDown = false
ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Handle.Transparency = 0
Tool.Enabled = true

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent and Player:IsA("Player")) and true) or false)
end

function CraftGun(Craft)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	Handle.Transparency = ((Craft and 1) or 0)
	if not Craft then
		return
	end
	local Gun = BasePart:Clone()
	Gun.Name = "Gun"
	Gun.Size = Vector3.new(0.2, 0.2, 0.2)
	Gun.CanCollide = false
	Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		MeshId = (BaseUrl .. "287444318"),
		TextureId = (BaseUrl .. "287439796"),
		Scale = Mesh.Scale,
		VertexColor = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = Gun,
	}
	local Barrel = BasePart:Clone()
	Barrel.Name = "Barrel"
	Barrel.Size = Vector3.new(0.2, 0.2, 0.2)
	Barrel.CanCollide = false
	Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		MeshId = (BaseUrl .. "287444248"),
		TextureId = (BaseUrl .. "287439796"),
		Scale = Mesh.Scale,
		VertexColor = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = Barrel,
	}
	Flamethrower = BasePart:Clone()
	Flamethrower.Name = "Flamethrower"
	Flamethrower.Transparency = 1
	Flamethrower.Size = Vector3.new(0.2, 0.2, 0.2)
	Flamethrower.CanCollide = false
	GunWeld = Create("Weld"){
		Part0 = Handle,
		Part1 = Gun,
		C0 = CFrame.new(0, 0, 0.25),
		C1 = CFrame.new(0, 0, 0),
		Parent = Gun,
	}
	BarrelMotor = Create("Motor6D"){
		Part0 = Gun,
		Part1 = Barrel,
		C0 = CFrame.new(0, 0.53, -1.825),
		C1 = CFrame.new(0, 0, 0),
		CurrentAngle = 0,
		DesiredAngle = 9999999999999,
		MaxVelocity = 0,
		Parent = Barrel
	}
	FlamethrowerWeld = Create("Weld"){
		Part0 = Handle,
		Part1 = Flamethrower,
		C0 = (CFrame.new(0, 0, -1.375) * CFrame.Angles(-(math.pi / 2), 0, 0)),
		C1 = CFrame.new(0, 0, 0),
		Parent = Flamethrower,
	}
	for i, v in pairs({Gun, Barrel, Flamethrower}) do
		v.Parent = Tool
	end
end

function GetProjectileManager()
	local ProjectileModelName = (Player.Name .. "'sProjectiles")
	local ProjectileModel = game:GetService("Workspace"):FindFirstChild(ProjectileModelName)
	if not ProjectileModel then
		local Values = {
			{Name = "Creator", Class = "ObjectValue", Value = Player},
			{Name = "Tool", Class = "ObjectValue", Value = Tool},
		}
		ProjectileModel = Create("Model"){
			Name = ProjectileModelName,
		}
		local ProjectileManagerCopy = ProjectileManager:Clone()
		for i, v in pairs(Values) do
			local Value = Create(v.Class){
				Name = v.Name,
				Value = v.Value,
				Parent = ProjectileManagerCopy,
			}
		end
		local FunctionsCopy = FunctionsLibrary:Clone()
		FunctionsCopy.Parent = ProjectileManagerCopy
		ProjectileManagerCopy.Disabled = false
		ProjectileManagerCopy.Parent = ProjectileModel
		ProjectileModel.Parent = game:GetService("Workspace")
	end
	return ProjectileModel
end

function FireProjectiles()
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
		if ToolUnequipped then
			ToolUnequipped:disconnect()
		end
	end)
	local BarrelSpeed = {Min = 0, Max = 0.375}
	local Charge = {Start = tick(), Max = 8}
	local BulletOffsets = {
		Vector3.new(0, 0.525, -2),
		Vector3.new(0.2, 0.365, -2),
		Vector3.new(0.2, 0.7, -2),
		Vector3.new(-0.2, 0.365, -2),
		Vector3.new(-0.2, 0.7, -2),
	}
	local FireSound = Sounds.Fire
	FireSound:Play()
	local Shooting = {Tick = 0, Delay = 0.25}
	while ToolEquipped and CurrentlyEquipped and CheckIfAlive() and MouseDown do
		local Now = tick()
		local ChargePercent = (Functions.Clamp(Functions.GetPercentage(Charge.Start, (Charge.Start + Charge.Max), Now), 0, 100) * 0.01)
		if BarrelMotor then
			BarrelMotor.MaxVelocity = Functions.Clamp((BarrelSpeed.Max * ChargePercent), BarrelSpeed.Min, BarrelSpeed.Max)
		end
		FireSound.Volume = Functions.Clamp((1 * ChargePercent), 0, 1)
		FireSound.Pitch = Functions.Clamp((0.75 * ChargePercent), 0.4, 0.75)
		Shooting.Delay = (1 - Functions.Clamp((0.75 * ChargePercent), 0.1, 0.75))
		if (Now - Shooting.Tick) >= Shooting.Delay and ChargePercent >= 0.25 then
			Shooting.Tick = Now
			local MouseData = InvokeClient("MouseData")
			if MouseData then
				local TargetPosition = MouseData.Position
				Spawn(function()
					for i, v in pairs(BulletOffsets) do
						if not ToolEquipped or not CurrentlyEquipped or not CheckIfAlive() or not MouseDown then
							return
						end
						local Projectile = BaseProjectile:Clone()
						local Color = ((not Player.Neutral and Player.TeamColor) or Projectile.BrickColor)
						Projectile.BrickColor = Color
						for i, v in pairs(Projectile:GetChildren()) do
							if v:IsA("Light") then
								v.Color = Color.Color
							end
						end
						local SparksCopy = Particles.Sparks:Clone()
						SparksCopy.Color = ColorSequence.new(Color.Color, Color.Color)
						SparksCopy.Enabled = true
						SparksCopy.Parent = Projectile
						local StartPosition = (Handle.CFrame * CFrame.new(v.X, v.Y, (v.Z - (Projectile.Size.Y / 1.5))))
						local Direction = CFrame.new(StartPosition.p, TargetPosition)
						local Force = 75
						local Mass = (Projectile:GetMass() * Gravity)
						local Velocity = (Direction.lookVector * Force)
						Projectile.Velocity = Velocity
						local Orientation = (Direction * CFrame.Angles(-(math.pi / 2), 0, 0))
						local Force = Create("BodyForce"){
							force = Vector3.new(0, Mass, 0),
							Parent = Projectile,
						}
						local Gyro = Create("BodyGyro"){
							maxTorque = Vector3.new(math.huge, 0, math.huge),
							cframe = Orientation,
							Parent = Projectile,
						}
						local Values = {
							{Name = "Damage", Class = "NumberValue", Value = 8},
							{Name = "Type", Class = "StringValue", Value = "Projectile"},
						}
						for i, v in pairs(Values) do
							local Value = Create(v.Class){
								Name = v.Name,
								Value = v.Value,
								Parent = Projectile,
							}
						end
						Projectile.CFrame = Orientation
						Debris:AddItem(Projectile, 1.5)
						Projectile.Parent = GetProjectileManager()
						wait()
					end
				end)
			end
		end
		wait()
	end
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
end

function SprayFire()
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
		if ToolUnequipped then
			ToolUnequipped:disconnect()
		end
	end)
	local Shooting = {Tick = 0, Delay = 0.1}
	Sounds.IgniteFlameOn:Play()
	Sounds.Flame:Play()
	local Fire = Particles.Flame:Clone()
	Fire.Enabled = false
	Fire.Parent = Flamethrower
	while ToolEquipped and CurrentlyEquipped and CheckIfAlive() and MouseDown and Flamethrower.Parent and FlamethrowerWeld.Parent and FlamethrowerWeld.Part0 == Handle and FlamethrowerWeld.Part1 == Flamethrower do
		Fire.Enabled = true
		local Now = tick()
		if (Now - Shooting.Tick) >= Shooting.Delay then
			Shooting.Tick = Now
			local FirePart = BasePart:Clone()
			FirePart.Name = "Projectile"
			FirePart.Transparency = 1
			FirePart.Size = Vector3.new(1, 1, 1)
			FirePart.CanCollide = false
			local Fire = Particles.Flame
			local Direction = CFrame.new(Flamethrower.Position, (Flamethrower.CFrame * CFrame.new(0, 1, 0)).p)
			local VelocitySpread = CFrame.Angles(((math.random(-Fire.VelocitySpread, Fire.VelocitySpread) * 0.01) * 2.5), ((math.random(-Fire.VelocitySpread, Fire.VelocitySpread) * 0.01) * 2.5), ((math.random(-Fire.VelocitySpread, Fire.VelocitySpread) * 0.01) * 2.5))
			local Velocity = ((Direction * VelocitySpread).lookVector * Fire.Speed.Max)
			FirePart.CFrame = (Flamethrower.CFrame + Direction.lookVector * ((Flamethrower.Size.Z / 2) + (FirePart.Size.Z / 2) + 0.25))
			FirePart.Velocity = Velocity
			local Mass = (FirePart:GetMass() * Gravity)
			local Force = Create("BodyForce"){
				force = Vector3.new(0, Mass, 0),
				Parent = FirePart,
			}
			local Values = {
				{Name = "Damage", Class = "NumberValue", Value = 5},
				{Name = "Type", Class = "StringValue", Value = "Fire"},
			}
			for i, v in pairs(Values) do
				local Value = Create(v.Class){
					Name = v.Name,
					Value = v.Value,
					Parent = FirePart,
				}
			end
			Debris:AddItem(FirePart, Fire.Lifetime.Max)
			FirePart.Parent = GetProjectileManager()
		end
		wait()
	end
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	Fire.Enabled = false
	Debris:AddItem(Fire, 2)
	Sounds.Flame:Stop()
	Sounds.IgniteFlameOff:Play()
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() or MouseDown then
		return
	end
	Tool.Enabled = false
	MouseDown = true
	if FireMode == Modes[1] then
		FireProjectiles()
	elseif FireMode == Modes[2] then
		SprayFire()
	end
end

function Deactivated()
	if not MouseDown then
		return
	end
	MouseDown = false
	if FireMode == Modes[1] then
		local DecreaseRate = 100
		local WaitRate = 0.03
		local CurrentMotor = BarrelMotor
		local FireSound = Sounds.Fire
		local MotorDecreaseAmount = (CurrentMotor.MaxVelocity / DecreaseRate)
		local FireVolume = (FireSound.Volume / DecreaseRate)
		local FirePitch = (FireSound.Pitch / DecreaseRate)
		for i = 1, DecreaseRate do
			local DecreaseAmount = (DecreaseRate - i)
			CurrentMotor.MaxVelocity = (MotorDecreaseAmount * DecreaseAmount)
			FireSound.Volume = (FireVolume * DecreaseAmount)
			FireSound.Pitch = (FirePitch * DecreaseAmount)
			wait(WaitRate)
		end
		Sounds.Fire:Stop()
	elseif FireMode == Modes[2] then
		local Smoke = Particles.Smoke:Clone()
		Smoke.Enabled = true
		Debris:AddItem(Smoke, 3)
		Delay(1.5, (function()
			Smoke.Enabled = false
		end))
		Smoke.Parent = Flamethrower
		wait(2.5)
	end
	Tool.Enabled = true
end

function UpdateGui()
	if not ModeGuiCopy then
		return
	end
	local MainFrame = ModeGuiCopy:FindFirstChild("MainFrame")
	if not MainFrame then
		return
	end
	local Button = MainFrame:FindFirstChild("Button")
	if not Button then
		return
	end
	local ModeText = Button:FindFirstChild("ModeText")
	if not ModeText then
		return
	end
	ModeText.Text = FireMode.Text
	ModeText.TextColor3 = FireMode.Color
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		local PlayerGui = Player:FindFirstChild("PlayerGui")
		if PlayerGui then
			ModeGuiCopy = ModeGui:Clone()
			local Values = {
				{Name = "ServerConnection", Class = "ObjectValue", Value = ServerControl},
				{Name = "Tool", Class = "ObjectValue", Value = Tool},
			}
			for i, v in pairs(Values) do
				local Value = Create(v.Class){
					Name = v.Name,
					Value = v.Value,
					Parent = ModeGuiCopy,
				}
			end
			UpdateGui()
			ModeGuiCopy.Parent = PlayerGui
		end
		CraftGun(true)
		Spawn(function()
			InvokeClient("PlayAnimation", Animations.Hold)
		end)
		Deactivated()
	end)
	ToolEquipped = true
end

function Unequipped()
	Spawn(function()
		for i, v in pairs({ModeGuiCopy}) do
			if v and v.Parent then
				v:Destroy()
			end
		end
		CraftGun(false)
		for i, v in pairs(Sounds) do
			v:Stop()
		end
		Deactivated()
	end)
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not mode or not value or not CheckIfAlive() then
		return
	end
	if mode == "Button1Click" then
		local Down = value.Down
		if Down and not MouseDown then
			Activated()
		elseif not Down and MouseDown then
			Deactivated()
		end
	elseif mode == "KeyPress" then
		local Key = value.Key
		local Down = value.Down
		if Key == "q" and Down and not MouseDown and ToolEquipped and CheckIfAlive() then
			for i, v in pairs(Modes) do
				if v == FireMode then
					local NewMode = Modes[(i + 1)]
					FireMode = ((NewMode and NewMode) or Modes[1])
					break
				end
			end
			UpdateGui()
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

CraftGun(true)

ServerControl.OnServerInvoke = OnServerInvoke

--Tool.Activated:connect(Activated)
--Tool.Deactivated:connect(Deactivated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="ModuleScript" referent="RBX26C9C2B0779D4A61B32566728DE82316">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {}

function Functions.Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function Functions.GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Functions.Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
end

function Functions.IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Functions.TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Functions.CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function Functions.CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or Functions.CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function Functions.CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and Functions.CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

return Functions]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX1C26EF87AE6845BF93C1D0E3DF04FCEF">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ProjectileManager</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Model = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

FunctionsLibrary = script:FindFirstChild("Functions")
ParticleScript = script:FindFirstChild("ParticleScript")
Fire = script:FindFirstChild("EffectFire")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Sounds = {
	Hit = script:FindFirstChild("Hit"),
}

FadeRate = 0.025
Rate = (1 / 15)

Removing = false

Values = {}
for i, v in pairs(script:GetChildren()) do
	if string.find(string.lower(v.ClassName), string.lower("Value")) then
		Values[v.Name] = v
	end
end

function GetCreator()
	local Creator = Values.Creator.Value
	return (((Creator and Creator.Parent and Creator:IsA("Player")) and Creator) or nil)
end

function ManageProjectile(Part)
	local AlreadyHit = false
	local Creator = GetCreator()
	local Type = Part:FindFirstChild("Type")
	local Damage = Part:FindFirstChild("Damage")
	if not Type or not Type:IsA("StringValue") or not Damage or not Damage:IsA("NumberValue") then
		return
	end
	Part.Touched:connect(function(Hit)
		local Creator = GetCreator()
		if not Hit or not Hit.Parent or not Creator or AlreadyHit or Functions.CheckIntangible(Hit) then
			return
		end
		local character = Hit.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		local player = Players:GetPlayerFromCharacter(character)
		if not player or (player and player ~= Creator and not Functions.IsTeamMate(Creator, player)) then
			local humanoid = character:FindFirstChild("Humanoid")
			if humanoid and humanoid.Health > 0 then
				Functions.UntagHumanoid(humanoid)
				Functions.TagHumanoid(humanoid, Creator)
				humanoid:TakeDamage(Damage.Value)
				if Type.Value == "Fire" then
					local IgniteChance = math.random(1, 2)
					if ParticleScript and Fire and IgniteChance == 1 then
						local EffectFire = Hit:FindFirstChild(Fire.Name)
						if not EffectFire then
							EffectFire = Fire:Clone()
							EffectFire.Enabled = true
							local ParticleScriptCopy = ParticleScript:Clone()
							ParticleScriptCopy.Disabled = false
							ParticleScriptCopy.Parent = EffectFire
							local Duration = Create("NumberValue"){
								Name = "Duration",
								Parent = EffectFire,
							}
						end
						local Duration = EffectFire:FindFirstChild("Duration")
						if Duration and Duration:IsA("NumberValue") then
							Duration.Value = 4
						end
						EffectFire.Parent = Hit
					end
				elseif Type.Value == "Projectile" then
				end
			end
		end
		if Type.Value == "Projectile" then
			AlreadyHit = true
			Part.Name = "Effect"
			Part.Transparency = 1
			Part.CanCollide = false
			Part.Anchored = true
			for i, v in pairs(Part:GetChildren()) do
				if v:IsA("ParticleEmitter") then
					v.Enabled = false
				end
			end
			local Sound = Sounds.Hit
			if Sound then
				local SoundCopy = Sound:Clone()
				Debris:AddItem(SoundCopy, 1.5)
				SoundCopy.Parent = Part
				SoundCopy:Play()
			end
			Debris:AddItem(Part, 1.5)
		end
	end)
end

function RemoveModel()
	if Removing then
		return
	end
	local Parts = {}
	for i, v in pairs(Model:GetChildren()) do
		if v:IsA("BasePart") then
			table.insert(Parts, v)
		end
	end
	if #Parts == 0 then
		Removing = true
		Model.Name = ""
		Debris:AddItem(Model, 0.5)
	end
end

if not FunctionsLibrary or not Values.Creator then
	RemoveModel()
	return
end

Functions = require(FunctionsLibrary)

Model.ChildAdded:connect(function(Child)
	if Child:IsA("BasePart") and Child.Name == "Projectile" then
		ManageProjectile(Child)
	end
end)

Model.ChildRemoved:connect(function(Child)
	RemoveModel()
end)

wait(1)

RemoveModel()]]></ProtectedString>
				</Properties>
				<Item class="Script" referent="RBXFCF367F7963C407A8E1538EE693AB9AC">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ParticleScript</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Particle = script.Parent

Debris = game:GetService("Debris")

Duration = Particle:WaitForChild("Duration")

while Duration.Value > 0 do
	local Time = wait()
	Duration.Value = (Duration.Value - Time)
end

Particle.Enabled = false

Debris:AddItem(Particle, 2)]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="ParticleEmitter" referent="RBX6453179382654352A8B1AA58EDE6FA73">
					<Properties>
						<Vector3 name="Acceleration">
							<X>0</X>
							<Y>1.5</Y>
							<Z>0</Z>
						</Vector3>
						<ColorSequence name="Color">0 1 0 0 0 1 1 1 0.498039 0 </ColorSequence>
						<float name="Drag">0</float>
						<token name="EmissionDirection">1</token>
						<bool name="Enabled">false</bool>
						<NumberRange name="Lifetime">1 1 </NumberRange>
						<float name="LightEmission">0.25</float>
						<bool name="LockedToPart">true</bool>
						<string name="Name">EffectFire</string>
						<float name="Rate">200</float>
						<NumberRange name="RotSpeed">0 0 </NumberRange>
						<NumberRange name="Rotation">0 0 </NumberRange>
						<NumberSequence name="Size">0 0 0 0.25 0.5 0 0.5 0.5 0.135 1 0.5 0 </NumberSequence>
						<NumberRange name="Speed">0.5 0.5 </NumberRange>
						<Content name="Texture"><url>http://www.roblox.com/asset/?id=262362794</url></Content>
						<NumberSequence name="Transparency">0 1 0 0.25 0.75 0 0.85 0.75 0 1 1 0 </NumberSequence>
						<float name="VelocityInheritance">0</float>
						<float name="VelocitySpread">100</float>
						<float name="ZOffset">1</float>
					</Properties>
				</Item>
				<Item class="Sound" referent="RBX310F648D0FA24CD69B2BFA94AB9E2403">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Hit</string>
						<float name="Pitch">1</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><url>http://www.roblox.com/asset/?id=169310529</url></Content>
						<float name="Volume">0.5</float>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXAA6DD98CF8A1400394B7A1DC15B74532">
				<Properties>
					<string name="Name">Particles</string>
				</Properties>
				<Item class="ParticleEmitter" referent="RBXBBEC9595919C42CBB3A875C64A27F0AB">
					<Properties>
						<Vector3 name="Acceleration">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<ColorSequence name="Color">0 1 1 1 0 1 0.392157 0.392157 0.392157 0 </ColorSequence>
						<float name="Drag">0</float>
						<token name="EmissionDirection">1</token>
						<bool name="Enabled">false</bool>
						<NumberRange name="Lifetime">1.75 1.75 </NumberRange>
						<float name="LightEmission">-0.0500000007</float>
						<bool name="LockedToPart">false</bool>
						<string name="Name">Smoke</string>
						<float name="Rate">10</float>
						<NumberRange name="RotSpeed">0 0 </NumberRange>
						<NumberRange name="Rotation">0 0 </NumberRange>
						<NumberSequence name="Size">0 0 0 0.25 0.5 0.25 0.5 0.5 0.135 1 0.75 0 </NumberSequence>
						<NumberRange name="Speed">1 1 </NumberRange>
						<Content name="Texture"><url>http://www.roblox.com/asset/?id=292289455</url></Content>
						<NumberSequence name="Transparency">0 0.6 0 0.6 0.609 0 0.8 0.75 0 0.9 0.75 0 1 1 0 </NumberSequence>
						<float name="VelocityInheritance">0</float>
						<float name="VelocitySpread">15</float>
						<float name="ZOffset">0</float>
					</Properties>
				</Item>
				<Item class="ParticleEmitter" referent="RBX22CA7737CD7C40B9887A65E3DEA0E468">
					<Properties>
						<Vector3 name="Acceleration">
							<X>0</X>
							<Y>0</Y>
							<Z>10</Z>
						</Vector3>
						<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
						<float name="Drag">0</float>
						<token name="EmissionDirection">1</token>
						<bool name="Enabled">false</bool>
						<NumberRange name="Lifetime">0.5 0.5 </NumberRange>
						<float name="LightEmission">0.75</float>
						<bool name="LockedToPart">false</bool>
						<string name="Name">Sparks</string>
						<float name="Rate">15</float>
						<NumberRange name="RotSpeed">-5 5 </NumberRange>
						<NumberRange name="Rotation">-360 360 </NumberRange>
						<NumberSequence name="Size">0 0.05 0 1 0.05 0 </NumberSequence>
						<NumberRange name="Speed">2.5 2.5 </NumberRange>
						<Content name="Texture"><url>http://www.roblox.com/asset/?id=277951744</url></Content>
						<NumberSequence name="Transparency">0 0.5 0 1 0.5 0 </NumberSequence>
						<float name="VelocityInheritance">0</float>
						<float name="VelocitySpread">250</float>
						<float name="ZOffset">0</float>
					</Properties>
				</Item>
				<Item class="ParticleEmitter" referent="RBX553E610BE6CC4AE982F7FB54080837D8">
					<Properties>
						<Vector3 name="Acceleration">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<ColorSequence name="Color">0 1 0 0 0 1 1 1 0.498039 0 </ColorSequence>
						<float name="Drag">0</float>
						<token name="EmissionDirection">1</token>
						<bool name="Enabled">false</bool>
						<NumberRange name="Lifetime">0.75 0.75 </NumberRange>
						<float name="LightEmission">0.5</float>
						<bool name="LockedToPart">false</bool>
						<string name="Name">Flame</string>
						<float name="Rate">1000</float>
						<NumberRange name="RotSpeed">0 0 </NumberRange>
						<NumberRange name="Rotation">0 0 </NumberRange>
						<NumberSequence name="Size">0 0 0 0.25 0.5 0.25 0.5 0.5 0.135 1 0.75 0 </NumberSequence>
						<NumberRange name="Speed">12.5 12.5 </NumberRange>
						<Content name="Texture"><url>http://www.roblox.com/asset/?id=262362794</url></Content>
						<NumberSequence name="Transparency">0 1 0 0.5 0.25 0 0.75 0.125 0.075 1 1 0 </NumberSequence>
						<float name="VelocityInheritance">0.5</float>
						<float name="VelocitySpread">12.5</float>
						<float name="ZOffset">0</float>
					</Properties>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBX8232F153AF26460A8BCFE5A8A1998229">
				<Properties>
					<string name="Name">ModeGui</string>
				</Properties>
				<Item class="Frame" referent="RBXAE27AF5C5B104B259509EBFEE459F38B">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278216192</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">MainFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextButton" referent="RBX20EED3E43745455AB908774538A3956A">
						<Properties>
							<bool name="Active">true</bool>
							<bool name="AutoButtonColor">false</bool>
							<Color3 name="BackgroundColor3">4278216192</Color3>
							<float name="BackgroundTransparency">0.699999988</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<bool name="Modal">false</bool>
							<string name="Name">Button</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>-225</XO>
								<YS>0</YS>
								<YO>10</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">true</bool>
							<bool name="Selected">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>450</XO>
								<YS>0</YS>
								<YO>60</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">1</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">2</int>
						</Properties>
						<Item class="TextLabel" referent="RBXD1B7759E5DBB48B68E210915183DFEEB">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">6</token>
								<string name="Name">ModeText</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">OFFENSIVE MODE ON</string>
								<Color3 name="TextColor3">4294901760</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0.949999988</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXDEE1BE452D2F49D68A9F4A78F8355090">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">0</token>
								<token name="FontSize">4</token>
								<string name="Name">Text</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0.5</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Press Q to switch between modes.</string>
								<Color3 name="TextColor3">4278190080</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">3</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="LocalScript" referent="RBX628F705919D742A2982324F24A27D4DA">
					<Properties>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">LocalScript</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Gui = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

MainFrame = Gui:WaitForChild("MainFrame")
Button = MainFrame:WaitForChild("Button")

ServerConnection = Gui:WaitForChild("ServerConnection").Value
Tool = Gui:WaitForChild("Tool").Value

function InvokeServer(mode, value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerConnection:InvokeServer(mode, value)
	end)
	return ServerReturn
end

Button.MouseButton1Click:connect(function()
	InvokeServer("KeyPress", {Key = "q", Down = true})
end)

if Tool and Tool.Parent then
	Tool.Changed:connect(function(Property)
		if Property == "Parent" then
			if not Tool.Parent or not Tool.Parent:IsA("Backpack") or not Players:GetPlayerFromCharacter(Tool.Parent) then
				Debris:AddItem(Gui, 1.5)
			end
		end
	end)
end]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
		</Item>
	</Item>
</roblox>