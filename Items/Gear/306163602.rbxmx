<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX544F15CCC8B5414D9C4DB2DE98BEC754">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.375</Y>
				<Z>0.899999976</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">NERFDoominator</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=306098630</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX3561EB062C7A41ABB52F1BF750C2165B">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.0241470002</X>
					<Y>24.5149651</Y>
					<Z>0.0223539993</Z>
					<R00>-0.877298713</R00>
					<R01>3.00044547e-007</R01>
					<R02>0.479945153</R02>
					<R10>-0.122950077</R10>
					<R11>0.96663034</R11>
					<R12>-0.22474274</R12>
					<R20>-0.463929534</R20>
					<R21>-0.256175727</R21>
					<R22>-0.848023415</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>3.67298145e-020</X>
					<Y>0.00101435662</Y>
					<Z>3.6980266e-020</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>1</Y>
					<Z>3</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX080CED99E65C4E8BBE6684AD863A8825">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxassetid://300065581</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.5</Z>
					</Vector3>
					<Content name="TextureId"><url>rbxassetid://300065301</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX2DF1BD5E5DBE4FAC985B572D90BF0A3C">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Fire</string>
					<float name="Pitch">15</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=71526597</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXB09BCCFBAB694206AFD0D271EF2E2140">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Reload</string>
					<float name="Pitch">3</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>rbxassetid://19112023</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX2660414E298442619BFAAD6E0982597A">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")
ContentProvider = game:GetService("ContentProvider")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("Animation") then
			ContentProvider:Preload(v.AnimationId)
		end
	end
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	if ObjectLocalTransparencyModifier then
		ObjectLocalTransparencyModifier:disconnect()
	end
	LocalObjects = {}
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "MouseData" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXA86CF3D82C5C49CFA306BC70D1961319">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX1944A12D5E3D4F28A705455D99D1424E">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

wait()

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

FunctionsLibrary = script:WaitForChild("Functions")
ProjectileManager = script:WaitForChild("ProjectileManager")
Functions = require(FunctionsLibrary)

BaseUrl = "http://www.roblox.com/asset/?id="

Animations = {
	Hold = {Animation = Tool:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = 1, Duration = nil},
}

Sounds = {
	Fire = Handle:WaitForChild("Fire"),
	Reload = Handle:WaitForChild("Reload"),
}

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

BaseProjectile = BasePart:Clone()
BaseProjectile.Name = "Projectile"
BaseProjectile.Material = Enum.Material.Neon
BaseProjectile.Size = Vector3.new(0.2, 0.2, 0.4)
BaseProjectile.CanCollide = false
BaseProjectile.Locked = true
BaseProjectile.Anchored = false
Create("SpecialMesh"){
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "306093090"),
	TextureId = (BaseUrl .. "300065480"),
	Scale = Mesh.Scale,
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseProjectile,
}

Rate = (1 / 30)
Gravity = 196.20

Configuration = {
	BarrelOffset = CFrame.new(0, 0.26, -1.75),
	Damage = 10,
	FireRate = 0.75,
	Projectile = {
		Speed = 50,
		Duration = 1.125,
	},
}

ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Handle.Transparency = 0
Tool.Enabled = true

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent and LeftArm and LeftArm.Parent and RightArm and RightArm.Parent and (LeftShoulder and LeftShoulder.Parent and LeftShoulder.Part0 == Torso and LeftShoulder.Part1 == LeftArm) and (RightShoulder and RightShoulder.Parent and RightShoulder.Part0 == Torso and RightShoulder.Part1 == RightArm) and Player and Player.Parent and Player:IsA("Player")) and true) or false)
end

function CheckForCylinder()
	return (((Cylinder and Cylinder.Parent and CylinderMotor and CylinderMotor.Parent and CylinderMotor.Part0 == Handle and CylinderMotor.Part1 == Cylinder) and true) or false)
end

function CraftGun(Craft)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	if not Craft then
		return
	end
	Cylinder = BasePart:Clone()
	Cylinder.Name = "Cylinder"
	Cylinder.Size = Vector3.new(0.2, 0.2, 0.2)
	Cylinder.CanCollide = false
	Create("SpecialMesh"){
		MeshType = Enum.MeshType.FileMesh,
		MeshId = (BaseUrl .. "300065526"),
		TextureId = (BaseUrl .. "300065480"),
		Scale = Mesh.Scale,
		VertexColor = Vector3.new(1, 1, 1),
		Offset = Vector3.new(0, 0, 0),
		Parent = Cylinder,
	}
	CylinderMotor = Create("Motor6D"){
		Part0 = Handle,
		Part1 = Cylinder,
		C0 = CFrame.new(0, -0.05, -0.025, 1, 0, 0, 0, 1, 0, 0, 0, 1),
		C1 = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
		CurrentAngle = 0,
		DesiredAngle = 1e+010,
		MaxVelocity = 0.1,
		Parent = Cylinder
	}
	for i, v in pairs({Cylinder}) do
		v.Parent = Tool
	end
end

function GetProjectileManager()
	local ProjectileModelName = (Player.Name .. "'sProjectiles")
	local ProjectileModel = game:GetService("Workspace"):FindFirstChild(ProjectileModelName)
	if not ProjectileModel then
		local Values = {
			{Name = "Creator", Class = "ObjectValue", Value = Player},
			{Name = "Tool", Class = "ObjectValue", Value = Tool},
			{Name = "Damage", Class = "NumberValue", Value = Configuration.Damage},
		}
		ProjectileModel = Create("Model"){
			Name = ProjectileModelName,
		}
		local ProjectileManagerCopy = ProjectileManager:Clone()
		for i, v in pairs(Values) do
			local Value = Create(v.Class){
				Name = v.Name,
				Value = v.Value,
				Parent = ProjectileManagerCopy,
			}
		end
		local FunctionsCopy = FunctionsLibrary:Clone()
		FunctionsCopy.Parent = ProjectileManagerCopy
		ProjectileManagerCopy.Disabled = false
		ProjectileManagerCopy.Parent = ProjectileModel
		ProjectileModel.Parent = game:GetService("Workspace")
	end
	return ProjectileModel
end

function FireProjectile(TargetPosition)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local Projectile = BaseProjectile:Clone()
	local StartPosition = (Handle.CFrame * Configuration.BarrelOffset)
	local Direction = CFrame.new(StartPosition.p, TargetPosition)
	local Mass = (Projectile:GetMass() * Gravity)
	local Velocity = (Direction.lookVector * Configuration.Projectile.Speed)
	Projectile.Velocity = Velocity
	local Orientation = (Direction * CFrame.Angles(0, 0, 0))
	local Force = Create("BodyForce"){
		force = Vector3.new(0, Mass, 0),
		Parent = Projectile,
	}
	local Gyro = Create("BodyGyro"){
		maxTorque = Vector3.new(math.huge, 0, math.huge),
		cframe = Orientation,
		Parent = Projectile,
	}
	local Values = {
		{Name = "Damage", Class = "NumberValue", Value = Configuration.Damage},
	}
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = Projectile,
		}
	end
	Projectile.CFrame = Orientation
	Debris:AddItem(Projectile, Configuration.Projectile.Duration)
	Projectile.Parent = GetProjectileManager()
end

function Activated()
	local MouseData = InvokeClient("MouseData")
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() or not CheckForCylinder() or not MouseData or not MouseData.Position then
		return
	end
	Tool.Enabled = false
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	local TargetPosition = MouseData.Position
	CylinderMotor.MaxVelocity = 0.1
	for i = 1, 2 do
		if CheckIfAlive() and CheckForCylinder() and ToolEquipped and CurrentlyEquipped then
			local TempSound = Sounds.Fire:Clone()
			Debris:AddItem(TempSound, 1.5)
			TempSound.Parent = Handle
			TempSound:Play()
			FireProjectile(TargetPosition)
			wait(0.175)
		end
	end
	CylinderMotor.MaxVelocity = 0
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	Sounds.Reload:Play()
	wait(Configuration.FireRate)
	Tool.Enabled = true
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	Player = Players:GetPlayerFromCharacter(Character)
	if not Torso then
		return
	end
	LeftArm = Character:FindFirstChild("Left Arm")
	RightArm = Character:FindFirstChild("Right Arm")
	LeftShoulder = Torso:FindFirstChild("Left Shoulder")
	RightShoulder = Torso:FindFirstChild("Right Shoulder")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		CraftGun(true)
		for i, v in pairs({RightArm}) do
			Spawn(function()
				InvokeClient("SetLocalTransparencyModifier", {Object = v, Transparency = 0, Auto = true})
			end)
		end
		InvokeClient("PlayAnimation", Animations.Hold)
	end)
	ToolEquipped = true
end

function Unequipped()
	Spawn(function()
		CraftGun(true)
		for i, v in pairs(Sounds) do
			v:Stop()
		end
	end)
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not mode or not value or not CheckIfAlive() then
		return
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

CraftGun(true)

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="ModuleScript" referent="RBXCED1FC0161B640D3A628D3233A5DE205">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {}

function Functions.Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function Functions.GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Functions.Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
end

function Functions.IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Functions.TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Functions.CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function Functions.CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or Functions.CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function Functions.CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and Functions.CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

return Functions]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX532B9EE94C464F75BFA7FFCE18409308">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ProjectileManager</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Model = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

FunctionsLibrary = script:FindFirstChild("Functions")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

Sounds = {
	Hit = script:FindFirstChild("Hit"),
}

Rate = (1 / 15)

Projectiles = {}
Removing = false

Values = {}
for i, v in pairs(script:GetChildren()) do
	if string.find(string.lower(v.ClassName), string.lower("Value")) then
		Values[v.Name] = v
	end
end

function GetCreator()
	local Creator = Values.Creator.Value
	return (((Creator and Creator.Parent and Creator:IsA("Player")) and Creator) or nil)
end

function RemoveModel()
	if Removing then
		return
	end
	local Parts = {}
	for i, v in pairs(Model:GetChildren()) do
		if v:IsA("BasePart") then
			table.insert(Parts, v)
		end
	end
	if #Parts == 0 then
		Removing = true
		Model.Name = ""
		Debris:AddItem(Model, 0.5)
	end
end

if not FunctionsLibrary or not Values.Creator then
	RemoveModel()
	return
end

Functions = require(FunctionsLibrary)

function FlyProjectile(Part, Hit)
	if Part.Name == "Effect" then
		return
	end
	local AlreadyHit = false
	local Player = GetCreator()
	local function PartHit(Hit)
		if not Hit or not Hit.Parent or not Player or Part.Name == "Effect" then
			return
		end
		local character = Hit.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		if not character then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player and (player == Player or Functions.IsTeamMate(Player, player)) then
			return
		end
		local humanoid = character:FindFirstChild("Humanoid")
		if not humanoid or humanoid.Health == 0 then
			return
		end
		Functions.UntagHumanoid(humanoid)
		Functions.TagHumanoid(humanoid, Player)
		humanoid:TakeDamage(Values.Damage.Value)
		return character
	end
	local function CheckForContact(Hit)
		local Directions = {{Vector = Part.CFrame.lookVector, Length = (Part.Size.Z + 2)}, {Vector = Vector3.new(0, -1, 0), Length = (Part.Size.Y * 1.25)}, ((Hit and {Vector = CFrame.new(Part.Position, Hit.Position).lookVector, Length = (Part.Size.Z + 2)}) or nil)}
		local ClosestRay = {DistanceApart = math.huge}
		for i, v in pairs(Directions) do
			if v then
				local Direction = CFrame.new(Part.Position, (Part.CFrame + v.Vector * 2).p).lookVector
				local RayHit, RayPos, RayNormal = Functions.CastRay((Part.Position + Vector3.new(0, 0, 0)), Direction, v.Length, {((Player and Player.Character) or nil), Part}, false)
				if RayHit then
					local DistanceApart = (Part.Position - RayPos).Magnitude
					if DistanceApart < ClosestRay.DistanceApart then
						ClosestRay = {Hit = RayHit, Pos = RayPos, Normal = RayNormal, DistanceApart = DistanceApart}
					end
				end
			end
		end
		return ((ClosestRay.Hit and ClosestRay) or nil)
	end
	local ClosestRay = CheckForContact(Hit)
	if ClosestRay then
		local SuccessfullyHit = PartHit(ClosestRay.Hit)
		Part.Transparency = 1
		Part.Size = Vector3.new(0.2, 0.2, 0.2)
		Part.CanCollide = false
		Part.Anchored = true
		local Hit = ClosestRay.Hit
		local SoundPart = BasePart:Clone()
		SoundPart.Name = "Effect"
		SoundPart.Transparency = 1
		SoundPart.Anchored = true
		SoundPart.CanCollide = false
		local Sound = Sounds.Hit:Clone()
		Sound.Parent = SoundPart
		Debris:AddItem(SoundPart, 1.5)
		SoundPart.CFrame = Part.CFrame
		SoundPart.Parent = game:GetService("Workspace")
		Sound:Play()
		Part.Name = "Effect"
	end
end

Model.ChildAdded:connect(function(Child)
	if Child:IsA("BasePart") and Child.Name == "Projectile" then
		table.insert(Projectiles, Child)
		Child.Touched:connect(function(Hit)
			if not Hit or not Hit.Parent then
				return
			end
			FlyProjectile(Child, Hit)
		end)
	end
end)

Model.ChildRemoved:connect(function(Child)
	for i, v in pairs(Projectiles) do
		if v == Child then
			table.remove(Projectiles, i)
		end
	end
	RemoveModel()
end)

Spawn(function()
	while not Removing and Model and Model.Parent do
		for i, v in pairs(Projectiles) do
			if v and v.Parent and v.Name ~= "Effect" then
				FlyProjectile(v)
			end
		end
		wait()
	end
end)

wait(1)

RemoveModel()]]></ProtectedString>
				</Properties>
				<Item class="Sound" referent="RBX7D94C48D3D3E4025A4397C9270D337F3">
					<Properties>
						<bool name="Looped">false</bool>
						<string name="Name">Hit</string>
						<float name="Pitch">1.5</float>
						<bool name="PlayOnRemove">false</bool>
						<Content name="SoundId"><url>http://www.roblox.com/asset/?id=169310529</url></Content>
						<float name="Volume">0.5</float>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Animation" referent="RBX64D97D6DAF124930A75D242BFC2920C7">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=243282565</url></Content>
				<string name="Name">Hold</string>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX8E360958AD1C45789F0A667C11D75159">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.0361456424</X>
					<Y>24.4722519</Y>
					<Z>0.056363374</Z>
					<R00>-0.877298713</R00>
					<R01>3.00044547e-007</R01>
					<R02>0.479945153</R02>
					<R10>-0.122950077</R10>
					<R11>0.96663034</R11>
					<R12>-0.22474274</R12>
					<R20>-0.463929534</R20>
					<R21>-0.256175727</R21>
					<R22>-0.848023415</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Cylinder</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0.07672254</X>
					<Y>-0.0449936613</Y>
					<Z>-0.030714523</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX14E5EDAE73AB45718827EEF586FB99B0">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=300065526</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.5</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=300065480</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Motor6D" referent="RBX52FAFB378362448B840A0BA57A904F00">
				<Properties>
					<CoordinateFrame name="C0">
						<X>0</X>
						<Y>-0.0500000007</Y>
						<Z>-0.0250000004</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="DesiredAngle">0</float>
					<float name="MaxVelocity">0.100000001</float>
					<string name="Name">Motor6D</string>
					<Ref name="Part0">RBX3561EB062C7A41ABB52F1BF750C2165B</Ref>
					<Ref name="Part1">RBX8E360958AD1C45789F0A667C11D75159</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX7F7942834B2642C6BF15D291C377AB76">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-2.22427559</X>
					<Y>24.3246212</Y>
					<Z>-0.236512899</Z>
					<R00>-0.210802868</R00>
					<R01>-0.13936995</R01>
					<R02>-0.96754241</R02>
					<R10>1.86264493e-009</R10>
					<R11>0.989784241</R11>
					<R12>-0.142573789</R12>
					<R20>0.977528572</R20>
					<R21>-0.030054966</R21>
					<R22>-0.208649367</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>0.122013688</X>
					<Y>24.6703625</Y>
					<Z>0.269461572</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>