<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXC8C0D7CCC79442979A797BEDA9F79619">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0.949999988</X>
				<Y>-0.5</Y>
				<Z>-0.100000001</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">ViewMaster-WildLife</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=313457280</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX57319CF5F3A843BB94754C177E7EFDE6">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.25</X>
					<Y>0.75</Y>
					<Z>0.75</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX356562FE508546FD9532BAFCAA7E6BF0">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=313455980</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>3</X>
						<Y>3</Y>
						<Z>3</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=313455937</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXEE76C29A1EAC41888368F91D6E1E3CCA">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=313724674</url></Content>
				<string name="Name">InsertDisk</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX34F8DDBD6A1C49268403AC2BEDE847A8">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=313735596</url></Content>
				<string name="Name">Hold</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX8F9089527D9D445D80901704D12E3BB2">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=313740555</url></Content>
				<string name="Name">LookThrough</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX06AF8F7D8A564A749237728B979C5A83">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>0.0171392318</X>
					<Y>0.102193326</Y>
					<Z>-2.11318946</Z>
					<R00>-0.999960542</R00>
					<R01>0.000480977877</R01>
					<R02>0.00887664221</R02>
					<R10>-2.91038339e-011</R10>
					<R11>0.998535275</R11>
					<R12>-0.0541052967</R12>
					<R20>-0.00888966396</R20>
					<R21>-0.0541031621</R21>
					<R22>-0.998495758</R22>
				</CoordinateFrame>
				<float name="FieldOfView">40</float>
				<CoordinateFrame name="Focus">
					<X>-0.00857639126</X>
					<Y>0.258936316</Y>
					<Z>0.779451489</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="Model" referent="RBXB93276753DB84C24A8130EF0CDAD43E2">
			<Properties>
				<CoordinateFrame name="ModelInPrimary">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">DisplayModel</string>
				<Ref name="PrimaryPart">null</Ref>
			</Properties>
			<Item class="Part" referent="RBXC41C063C023E45349719E1AC3B7F744C">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>0</Y>
						<Z>-0.1875</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">BackImage</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1.17499995</X>
						<Y>0.5</Y>
						<Z>0.200000003</Z>
					</Vector3>
				</Properties>
				<Item class="SurfaceGui" referent="RBX1875DE9FF68F4C07845A2C6512DF059A">
					<Properties>
						<bool name="Active">true</bool>
						<Ref name="Adornee">RBXC41C063C023E45349719E1AC3B7F744C</Ref>
						<Vector2 name="CanvasSize">
							<X>10000</X>
							<Y>10000</Y>
						</Vector2>
						<bool name="Enabled">true</bool>
						<token name="Face">5</token>
						<string name="Name">BackImage</string>
						<float name="ToolPunchThroughDistance">0</float>
					</Properties>
					<Item class="Frame" referent="RBX356EF40415C84C318A42D21697AF7406">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Frame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="ImageLabel" referent="RBX34EA7F39D4594B25ACEC5107C23B9632">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=313456848</url></Content>
								<Color3 name="ImageColor3">4294967295</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">Image</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Weld" referent="RBX67C9F327BEED4ADB947049C5D6BDB6AC">
					<Properties>
						<CoordinateFrame name="C0">
							<X>0</X>
							<Y>0</Y>
							<Z>-0.1875</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">Weld</string>
						<Ref name="Part0">RBX57319CF5F3A843BB94754C177E7EFDE6</Ref>
						<Ref name="Part1">RBXC41C063C023E45349719E1AC3B7F744C</Ref>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX425FDBF27E3B4BC497D15827D61811B7">
				<Properties>
					<bool name="Anchored">false</bool>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<int name="BrickColor">194</int>
					<CoordinateFrame name="CFrame">
						<X>0</X>
						<Y>0.474999994</Y>
						<Z>-0.25999999</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<float name="Elasticity">0.5</float>
					<float name="Friction">0.300000012</float>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">true</bool>
					<token name="Material">256</token>
					<string name="Name">Disk</string>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">0</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">3</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.200000003</Z>
					</Vector3>
				</Properties>
				<Item class="SpecialMesh" referent="RBX09929C8782604D2299B0411251B6D88B">
					<Properties>
						<token name="LODX">2</token>
						<token name="LODY">2</token>
						<Content name="MeshId"><url>http://www.roblox.com/asset/?id=313456639</url></Content>
						<token name="MeshType">5</token>
						<string name="Name">Mesh</string>
						<Vector3 name="Offset">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<Vector3 name="Scale">
							<X>3</X>
							<Y>3</Y>
							<Z>3</Z>
						</Vector3>
						<Content name="TextureId"><url>http://www.roblox.com/asset/?id=313456028</url></Content>
						<Vector3 name="VertexColor">
							<X>1</X>
							<Y>1</Y>
							<Z>1</Z>
						</Vector3>
					</Properties>
				</Item>
				<Item class="Weld" referent="RBX48CB4DA3BEDB46DC8CB41D51BFEE1D0E">
					<Properties>
						<CoordinateFrame name="C0">
							<X>0</X>
							<Y>0.474999994</Y>
							<Z>-0.25999999</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<CoordinateFrame name="C1">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<string name="Name">Weld</string>
						<Ref name="Part0">RBX57319CF5F3A843BB94754C177E7EFDE6</Ref>
						<Ref name="Part1">RBX425FDBF27E3B4BC497D15827D61811B7</Ref>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Script" referent="RBX4AC2A41EEE074CA0BB2FF7DDBBC47FE4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Assets = require(script:WaitForChild("Assets"))

ClientManager = script:WaitForChild("ClientManager")
ScreenOverlayGui = script:WaitForChild("ScreenOverlayGui")
BackImage = script:WaitForChild("BackImage")

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Anchored = false,
	CanCollide = true,
	Locked = true,
}

BaseBackImagePart = BasePart:Clone()
BaseBackImagePart.Name = "BackImage"
BaseBackImagePart.Transparency = 1
BaseBackImagePart.Size = Vector3.new(1.175, 0.5, 0.2)
BaseBackImagePart.CanCollide = false
BackImageCopy = BackImage:Clone()
BackImageCopy.Adornee = BaseBackImagePart
BackImageCopy.Enabled = true
BackImageCopy.Parent = BaseBackImagePart

BaseDisk = BasePart:Clone()
BaseDisk.Name = "Disk"
BaseDisk.Size = Vector3.new(0.5, 0.5, 0.2)
BaseDisk.CanCollide = false
Create("SpecialMesh"){
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. Assets.Disk.MeshId),
	TextureId = (BaseUrl .. Assets.Disk.TextureId),
	Scale = Vector3.new(3, 3, 3),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseDisk
}

Animations = {
	Hold = {Animation = Tool:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
	InsertDisk = {Animation = Tool:WaitForChild("InsertDisk"), FadeTime = 0.125, Weight = nil, Speed = 0.375, Duration = ((1 / 0.375) / 2.5)},
	LookThrough = {Animation = Tool:WaitForChild("LookThrough"), FadeTime = 0.5, Weight = nil, Speed = nil, Duration = nil},
}

Grips = {
	Normal = CFrame.new(0.95, -0.5, -0.1, 1, 0, 0, 0, 1, 0, 0, 0, 1),
	Active = CFrame.new(1, 0, -0.25, 0.951802313, -0.00700343912, 0.30663237, 0.227017254, 0.688337982, -0.688951433, -0.206241682, 0.72535634, 0.656751513),
}

Sounds = {}

Images = Assets.Slides

CurrentImage = 1
InView = false
ToolEquipped = false

DisplayModel = Tool:FindFirstChild("DisplayModel")
if DisplayModel then
	DisplayModel:Destroy()
end

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Handle.Transparency = 0
Tool.Grip = Grips.Normal
Tool.Enabled = true

function DisplayBackImage()
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle and v.Name == "BackImage" then
			v:Destroy()
		end
	end
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	BackImagePart = BaseBackImagePart:Clone()
	BackImageWeld = Create("Weld"){
		Part0 = Handle,
		Part1 = BackImagePart,
		C0 = CFrame.new(0, 0, -0.1875),
		C1 = CFrame.new(0, 0, 0),
		Parent = BackImagePart
	}
	BackImagePart.Parent = Tool
end

function MakeDisk(AttachedPart, Offset)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle and v.Name == "Disk" then
			v:Destroy()
		end
	end
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	local Disk = BaseDisk:Clone()
	local DiskWeld = Create("Weld"){
		Part0 = AttachedPart,
		Part1 = Disk,
		C0 = Offset,
		C1 = CFrame.new(0, 0, 0),
		Parent = Disk
	}
	Disk.Parent = Tool
	return Disk, DiskWeld
end

function ManageTool()
	CurrentImage = 1
	InView = false
	Tool.Grip = Grips.Normal
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	if ScreenOverlayGuiCopy and ScreenOverlayGuiCopy.Parent then
		ScreenOverlayGuiCopy:Destroy()
	end
end

function UpdateImages()
	local SelectedImage = (BaseUrl .. Images[CurrentImage])
	if ScreenOverlayGuiCopy and ScreenOverlayGuiCopy.Parent then
		local ImageFrame = ScreenOverlayGuiCopy:FindFirstChild("ImageFrame")
		if ImageFrame then
			local Image = ImageFrame:FindFirstChild("Image")
			Image.Image = SelectedImage
		end
	end
	if BackImagePart and BackImagePart.Parent then
		local BackImage = BackImagePart:FindFirstChild("BackImage")
		if BackImage then
			local Frame = BackImage:FindFirstChild("Frame")
			if Frame then
				local Image = Frame:FindFirstChild("Image")
				if Image then
					Image.Image = SelectedImage
				end
			end
		end
	end
end

function CreatePlayerManager(CreateNew)
	ClientManagerName = (Player.Name .. "'sViewMasterClientManager")
	ClientManagerCopy = game:GetService("Workspace"):FindFirstChild(ClientManagerName)
	if ClientManagerCopy then
		local Enabled = ClientManagerCopy:FindFirstChild("Enabled")
		if Enabled then
			Enabled.Value = false
		end
		ClientManagerCopy.Name = ""
		Debris:AddItem(ClientManagerCopy, 2)
	end
	if not CreateNew then
		return
	end
	ClientManagerCopy = ClientManager:Clone()
	ClientManagerCopy.Name = ClientManagerName
	ClientManagerCopy.Disabled = false
	local Values = {
		{Name = "Creator", Class = "ObjectValue", Value = Player},
		{Name = "Tool", Class = "ObjectValue", Value = Tool},
		{Name = "Enabled", Class = "BoolValue", Value = true},
	}
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = ClientManagerCopy,
		}
	end
	ClientManagerCopy.Parent = game:GetService("Workspace")
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	if not InView then
		InView = true
		local Animation = Animations.InsertDisk
		local Disk = MakeDisk(LeftArm, CFrame.new(0, (((LeftArm.Size.Y / 2) + (BaseDisk.Size.Y / 2)) * -1), 0))
		Spawn(function()
			InvokeClient("PlayAnimation", Animation)
		end)
		wait(Animation.Duration)
		if ToolEquipped and CurrentlyEquipped and CheckIfAlive() then
			if Disk and Disk.Parent then
				Disk:Destroy()
			end
			local Disk, AttachWeld = MakeDisk(Handle, CFrame.new(0, 0.5, -0.26))
			wait(0.75)
			local Frames = 20
			local FrameRate = (1 / 15)
			local SizeInterval = (Disk.Size.Y / Frames)
			local OriginalOffset = AttachWeld.C0
			for i = 1, Frames do
				if not ToolEquipped or not CurrentlyEquipped or not CheckIfAlive() then
					break
				end
				AttachWeld.C0 = (OriginalOffset * CFrame.new(0, -(SizeInterval * i), 0))
				wait(FrameRate)
			end
			if Disk and Disk.Parent then
				Disk:Destroy()
			end
			local Animation = Animations.LookThrough
			wait(Animation.FadeTime)
			if ToolEquipped and CurrentlyEquipped and CheckIfAlive() then
				CreatePlayerManager(true)
				Tool.Grip = Grips.Active
				Spawn(function()
					InvokeClient("PlayAnimation", Animation)
				end)
				ScreenOverlayGuiCopy = ScreenOverlayGui:Clone()
				if PlayerGui then
					local Values = {
						{Name = "Tool", Class = "ObjectValue", Value = Tool},
					}
					for i, v in pairs(Values) do
						local Value = Create(v.Class){
							Name = v.Name,
							Value = v.Value,
							Parent = ScreenOverlayGuiCopy,
						}
					end
					local LocalScript = ScreenOverlayGuiCopy:FindFirstChild("LocalScript")
					if LocalScript then
						LocalScript.Disabled = false
					end
					ScreenOverlayGuiCopy.Parent = PlayerGui
				end
				DisplayBackImage()
				UpdateImages()
			end
		end
	else
		CurrentImage = (CurrentImage + 1)
		if CurrentImage <= #Images then
			UpdateImages()
		else
			ManageTool()
			CreatePlayerManager(false)
			Spawn(function()
				InvokeClient("StopAnimation", Animations.LookThrough)
			end)
			if ToolEquipped and CurrentlyEquipped and CheckIfAlive() then
				local Disk, AttachWeld = MakeDisk(Handle, CFrame.new(0, (0.5 - BaseDisk.Size.Y), -0.26))
				wait(0.25)
				local Frames = 20
				local FrameRate = (1 / 15)
				local SizeInterval = (Disk.Size.Y / Frames)
				local OriginalOffset = AttachWeld.C0
				for i = 1, Frames do
					if not ToolEquipped or not CurrentlyEquipped or not CheckIfAlive() then
						break
					end
					AttachWeld.C0 = (OriginalOffset * CFrame.new(0, (SizeInterval * i), 0))
					wait(FrameRate)
				end
				if ToolEquipped and CurrentlyEquipped and CheckIfAlive() then
					wait(0.25)
					if Disk and Disk.Parent then
						Disk:Destroy()
					end
				end
			end
		end
	end
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and HumanoidRootPart and HumanoidRootPart.Parent and Torso and Torso.Parent and LeftArm and LeftArm.Parent and RightArm and RightArm.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	PlayerGui = Player:FindFirstChild("PlayerGui")
	Humanoid = Character:FindFirstChild("Humanoid")
	HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
	Torso = Character:FindFirstChild("Torso")
	LeftArm = Character:FindFirstChild("Left Arm")
	RightArm = Character:FindFirstChild("Right Arm")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		ManageTool()
		InvokeClient("PlayAnimation", Animations.Hold)
	end)
	ToolEquipped = true
end

function Unequipped()
	ManageTool()
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function OnServerInvoke(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
end

ManageTool()

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="SurfaceGui" referent="RBX296B0946ECD0425CB322462C03BEAED8">
				<Properties>
					<bool name="Active">true</bool>
					<Ref name="Adornee">null</Ref>
					<Vector2 name="CanvasSize">
						<X>10000</X>
						<Y>10000</Y>
					</Vector2>
					<bool name="Enabled">false</bool>
					<token name="Face">5</token>
					<string name="Name">BackImage</string>
					<float name="ToolPunchThroughDistance">0</float>
				</Properties>
				<Item class="Frame" referent="RBXCF6E307E9160402BAF2B3CF78B18CDC6">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Frame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageLabel" referent="RBX2854D62F335F4DFE8550A70F69F4F2C2">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><null></null></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Image</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="ScreenGui" referent="RBXC60F4E3DDDB046AC9E80B6E8B5B823A9">
				<Properties>
					<string name="Name">ScreenOverlayGui</string>
				</Properties>
				<Item class="LocalScript" referent="RBX6E349146FC6242A9B80824467E0BB2AD">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">LocalScript</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Gui = script.Parent
ImageFrame = Gui:WaitForChild("ImageFrame")
Image = ImageFrame:WaitForChild("Image")
HelpText = Gui:WaitForChild("HelpText")

RunService = game:GetService("RunService")
Debris = game:GetService("Debris")

BaseUrl = "http://www.roblox.com/asset/?id="

Tool = Gui:WaitForChild("Tool").Value

PlayerGui = Gui.Parent
Player = PlayerGui.Parent
Mouse = Player:GetMouse()
Character = Player.Character
Head = Character:WaitForChild("Head")

Destroying = false

function DestroyScript()
	if Destroying then
		return
	end
	for i, v in pairs({HelpText, ImageFrame}) do
		v.Visible = false
	end
	Mouse.Icon = ""
	Debris:AddItem(Gui, 0.5)
	Destroying = true
end

if not Tool then
	DestroyScript()
	return
end

RunService.Stepped:connect(function()
	if Destroying then
		return
	end
	local Camera = game:GetService("Workspace").CurrentCamera
	local Distance = (Camera.CoordinateFrame.p - Head.Position).Magnitude
	if Distance <= 1.5 then
		ImageFrame.Visible = true
		HelpText.Visible = false
		Mouse.Icon = (BaseUrl .. "187746799")
	else
		ImageFrame.Visible = false
		HelpText.Visible = true
		Mouse.Icon = ""
	end
end)

Tool.Changed:connect(function(Property)
	if Property == "Parent" then
		DestroyScript()
	end
end)]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBX83824B7B6A3E4630AF567B9B369FD6C1">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0.850000024</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">HelpText</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.25</XS>
							<XO>0</XO>
							<YS>0.75</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.100000001</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBXD1200E419F63423EBB1239F4C71D2149">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">3</token>
							<token name="FontSize">5</token>
							<string name="Name">TextLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Zoom In To View Image</string>
							<Color3 name="TextColor3">4279970357</Color3>
							<bool name="TextScaled">true</bool>
							<Color3 name="TextStrokeColor3">4279970357</Color3>
							<float name="TextStrokeTransparency">0.899999976</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXC889DA0FFED04ECAB963987AD5C185EC">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">ImageFrame</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>-36</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>36</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageLabel" referent="RBX3530A6C50D1C445C9439A1A3E7601370">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><null></null></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Image</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Script" referent="RBXA9EADE9C420E4500B8AEC966EA3816AD">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ClientManager</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Destroying = false

Values = {}

for i, v in pairs(script:GetChildren()) do
	if string.find(string.lower(v.ClassName), string.lower("Value")) then
		Values[v.Name] = v
	end
end

function DestroyScript()
	if Destroying then
		return
	end
	local GlitchFixer = script:FindFirstChild("GlitchFixer")
	if Creator and Creator:IsA("Player") and GlitchFixer then
		local Locations = {Creator:FindFirstChild("PlayerGui"), Creator:FindFirstChild("Backpack"), Creator.Character}
		for i, v in pairs(Locations) do
			if v and v.Parent then
				local GlitchFixerCopy = GlitchFixer:Clone()
				GlitchFixerCopy.Disabled = false
				GlitchFixerCopy.Parent = v
			end
		end
	end
	Debris:AddItem(script, 0.5)
	Destroying = true
end

if not Values.Creator or not Values.Tool or not Values.Enabled then
	DestroyScript()
	return
end

Creator = Values.Creator.Value
Tool = Values.Tool.Value
Enabled = Values.Enabled

if not Creator or not Creator.Parent or not Creator:IsA("Player") or not Creator.Character or not Creator.Character.Parent or not Tool or not Tool.Parent or not Enabled.Value then
	DestroyScript()
	return
end

Creator.Changed:connect(function(Property)
	if not Creator.Parent or not Creator.Character or not Creator.Character.Parent then
		DestroyScript()
	end
end)

Tool.Changed:connect(function(Property)
	if Property == "Parent" then
		DestroyScript()
	end
end)

Enabled.Changed:connect(function()
	if not Enabled.Value then
		DestroyScript()
	end
end)]]></ProtectedString>
				</Properties>
				<Item class="LocalScript" referent="RBXC0D4E66D09CB4DC484108C69600FF55C">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">GlitchFixer</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Player = Players.LocalPlayer
Character = Player.Character
Mouse = Player:GetMouse()

Mouse.Icon = ""

Debris:AddItem(script, 0.5)]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX18306206F38A47CEB4FCD2E146F954CE">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Assets</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Assets = {
	Disk = {MeshId = 313456639, TextureId = 313456028},
	Slides = {313456848, 313456876, 313456804},
	Images = {},
	Animations = {313735596, 313724674, 313740555},
}

return Assets]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX8FF65EE4F7654E5197BC22A86A6B8EAF">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">PreloadAssets</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

ContentProvider = game:GetService("ContentProvider")

BaseUrl = "http://www.roblox.com/asset/?id="

Assets = require(script.Parent:WaitForChild("Assets"))

for i, v in pairs(Assets) do
	if type(v) == "table" then
		for ii, vv in pairs(v) do
			ContentProvider:Preload(BaseUrl .. vv)
		end
	elseif type(v) == "string" or type(v) == "number" then
		ContentProvider:Preload(BaseUrl .. v)
	end
end]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX640B52FE05F4494D99F37CC8DEDAB8F7">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	ToolEquipped = false
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs(LocalObjects) do
		if v.Object then
			v.Object.LocalTransparencyModifier = 0
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	LocalObjects = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					local Camera = game:GetService("Workspace").CurrentCamera
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							local ViewDistance = (Camera.CoordinateFrame.p - Head.Position).Magnitude
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or CurrentTransparency == 0)) or v.AutoUpdate) then
								if ((v.Distance and ViewDistance <= v.Distance) or not v.Distance) then
									v.Object.LocalTransparencyModifier = v.Transparency
								else
									v.Object.LocalTransparencyModifier = 0
								end
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	elseif mode == "SetCameraOffset" and value then
		pcall(function()
			Humanoid.CameraOffset = value
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
	</Item>
</roblox>