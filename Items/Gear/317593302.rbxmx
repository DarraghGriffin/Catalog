<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX61E9D7AC41D240B29047B20A9616A121">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>1.39999998</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>-0</R02>
				<R10>0</R10>
				<R11>0</R11>
				<R12>1</R12>
				<R20>0</R20>
				<R21>-1</R21>
				<R22>0</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">EgyptianSword</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=316576119</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX6852ACDDB38B4751A6D8D19923E5F356">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>9.2000002e-005</X>
					<Y>110.964546</Y>
					<Z>0.00469399989</Z>
					<R00>0.986403465</R00>
					<R01>-0.145392478</R01>
					<R02>0.0766040757</R02>
					<R10>-0.0556413904</R10>
					<R11>-0.734077096</R11>
					<R12>-0.676782906</R12>
					<R20>0.154632241</R20>
					<R21>0.663318872</R21>
					<R22>-0.7321859</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>1</Y>
					<Z>4</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXB3BB943887534B8C964C21E39FBC5D35">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=316576065</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1.25</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=316576088</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXD630A11B7FA74690B08816472320A9AC">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Unsheath</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222225</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX2524881DCB4749D9981CC11C2D1D6DC2">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Slash</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222216</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX63B2C410BEE341F5AEB794B1D454CED6">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXCDF39B23C15F4F168377F0EB6A2FD34D">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
ContextActionService = game:GetService("ContextActionService")
UserInputService = game:GetService("UserInputService")

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
	if UserInputService.TouchEnabled then
		ContextActionService:BindActionToInputTypes("Special", (function()
			InvokeServer("KeyPress", {Key = "q", Down = true})
		end), true, "")
		ContextActionService:SetTitle("Special", "Special")
	end
end

function Unequipped()
	ToolEquipped = false
	LocalObjects = {}
	if UserInputService.TouchEnabled then
		ContextActionService:UnbindAction("Special")
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value and ToolEquipped then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or  CurrentTransparency == 0)) or v.AutoUpdate) then
								v.Object.LocalTransparencyModifier = v.Transparency
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX2DC13591BA044A04A98C93AAFFF1D275">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Functions = require(script:WaitForChild("Functions"))
HieroglyphicsModule = require(Tool:WaitForChild("Hieroglyphics"))

FreezeScript = script:WaitForChild("FreezeScript")

Gravity = 196.20

Rate = (1 / 60)

Damage = {
	Touch = {Min = 3.5, Max = 6},
	Hit = {Min = 14, Max = 17},
}

Grips = {
	Normal = CFrame.new(0, 0, 1.4, 1, 0, 0, -0, 0, 1, 0, -1, 0),
}

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

Animations = {
	LeftSlash = {Animation = Tool:WaitForChild("LeftSlash"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.5},
	RightSlash = {Animation = Tool:WaitForChild("RightSlash"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.5},
	LeftSwingFast = {Animation = Tool:WaitForChild("LeftSwingFast"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.5},
	RightSwingFast = {Animation = Tool:WaitForChild("RightSwingFast"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.5},
	OverHeadSwing = {Animation = Tool:WaitForChild("OverHeadSwing"), FadeTime = nil, Weight = nil, Speed = nil, Duration = 0.5},
}

Sounds = {
	Unsheath = Handle:WaitForChild("Unsheath"),
	Slash = Handle:WaitForChild("Slash"),
}

Special = {
	Enabled = true,
	Active = false,
	Duration = (60 * 1),
	ReloadTime = (60 * 1),
}

RageMode = false
ReloadReady = true
ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Handle.Transparency = 0
Tool.Grip = Grips.Normal
Tool.Enabled = true

function GetNearbyObjects(Region, Ignore)
	local IgnoreList = (Ignore or {})
	table.insert(IgnoreList, ((Player and Player.Character) or nil))
	for i, v in pairs(Players:GetChildren()) do
		if v:IsA("Player") and v ~= Player and v.Character and v.Character.Parent and Functions.IsTeamMate(Player, v) then
			table.insert(IgnoreList, v.Character)
		end
	end
	return Functions.GetParts(Region, 250, IgnoreList)
end

function UseTechnique(Use, Renew)
	if (not CurrentTechnique or not CurrentTechnique.Technique) and Renew and ReloadReady then
		Spawn(CreateHieroglyphics)
	elseif CurrentTechnique and CurrentTechnique.Technique then
		ReloadReady = false
		CurrentTechnique.Technique = nil
		if Use then
			if CurrentTechnique.Gui and CurrentTechnique.Gui.Frame.Parent then
				Spawn(function()
					local Gui = CurrentTechnique.Gui.Gui
					local Frame = CurrentTechnique.Gui.Frame
					local FadeRate = 0.05
					local FadeAmount = 15
					for i = 1, FadeAmount do
						if not Gui or not Gui.Parent or not Frame or not Frame.Parent then
							break
						end
						Frame.ImageTransparency = ((1 / FadeAmount) * i)
						wait(FadeRate)
					end
					if CurrentTechnique.Gui.Gui.Parent then
						CurrentTechnique.Gui.Gui:Destroy()
					end
				end)
			end
		end
		wait(8)
		ReloadReady = true
		if not ToolEquipped or not CheckIfAlive() then
			return
		end
		Spawn(CreateHieroglyphics)
	else
	end
end

function CreateHieroglyphics()
	if not CheckIfAlive() or not PlayerGui then
		return
	end
	local HieroglyphicsImages = {}
	for i, v in pairs(HieroglyphicsModule) do
		table.insert(HieroglyphicsImages, v)
	end
	local HieroglyphicCount = #HieroglyphicsImages
	local Hieroglyphics = {}
	local Circle = 360
	local HieroglyphicsReady = false
	local HieroglyphicChosen
	HieroglyphicGui = Create("ScreenGui"){
		Name = "HieroglyphicGui",
	}
	local Frame = Create("Frame"){
		Name = "Frame",
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		Position = UDim2.new(0.5, -125, 0.5, -125),
		Size = UDim2.new(0, 250, 0, 250),
		Rotation = 0,
		Parent = HieroglyphicGui,
	}
	for i, v in pairs(PlayerGui:GetChildren()) do
		if v:IsA("GuiBase") and v.Name == HieroglyphicGui.Name then
			v:Destroy()
		end
	end
	Spawn(function()
		for i = 1, HieroglyphicCount do
			local Angle = ((Circle / HieroglyphicCount) * i)
			local Size = 50
			local RadiusX = (math.sin(math.rad(Angle)) * 0.5)
			local RadiusY = (math.cos(math.rad(Angle)) * 0.5)
			local HieroglyphicNumber = math.random(1, #HieroglyphicsImages)
			local Hieroglyphic = HieroglyphicsImages[HieroglyphicNumber]
			table.remove(HieroglyphicsImages, HieroglyphicNumber)	
			local Image = Create("ImageLabel"){
				BackgroundTransparency = 1,
				Image = (BaseUrl .. Hieroglyphic),
				Rotation = -Frame.Rotation,
				ImageTransparency = 1,
				Position = UDim2.new((0.5 + RadiusX), (-Size / 2), (0.5 + RadiusY), (-Size / 2)),
				Size = UDim2.new(0, Size, 0, Size),
				Parent = Frame,
			}
			table.insert(Hieroglyphics, {Id = Hieroglyphic, Image = Image})
			Spawn(function()
				local FadeRate = 0.05
				local FadeAmount = 25
				for i = 1, FadeAmount do
					if not HieroglyphicGui or not HieroglyphicGui.Parent then
						return
					end
					Image.ImageTransparency = (1 - ((1 / FadeAmount) * i))
					wait(FadeRate)
				end
			end)
			wait(0.5)
		end
		wait(5)
		if not HieroglyphicGui or not HieroglyphicGui.Parent then
			return
		end
		HieroglyphicsReady = true
	end)
	Spawn(function()
		while not HieroglyphicChosen do
			if not HieroglyphicGui or not HieroglyphicGui.Parent then
				return
			end
			if HieroglyphicsReady then
				HieroglyphicsReady = false
				Spawn(function()
					local DesiredHieroglyphic = Hieroglyphics[math.random(1, #Hieroglyphics)]
					local FadeRate = 0.05
					local FadeAmount = 25
					for i = 1, FadeAmount do
						if not HieroglyphicGui or not HieroglyphicGui.Parent then
							return
						end
						local Transparency = ((1 / FadeAmount) * i)
						for ii, v in pairs(Hieroglyphics) do
							if v.Image ~= DesiredHieroglyphic.Image then
								v.Image.ImageTransparency = Transparency		
							end
						end
						wait(FadeRate)
					end
					local ResizeComplete, MoveComplete = false, false
					local function TransitionComplete()
						if not ResizeComplete or not MoveComplete then
							return
						end
						CurrentTechnique = {Start = tick(), Technique = DesiredHieroglyphic.Id, Gui = {Gui = HieroglyphicGui, Frame = DesiredHieroglyphic.Image}}
					end
					if not HieroglyphicGui or not HieroglyphicGui.Parent then
						return
					end
					HieroglyphicChosen = DesiredHieroglyphic.Image
					local DesiredSize = (Vector2.new(HieroglyphicChosen.Size.X.Offset, HieroglyphicChosen.Size.Y.Offset) * 3)
					HieroglyphicChosen:TweenSizeAndPosition(
						UDim2.new(0, DesiredSize.X, 0, DesiredSize.Y),
						UDim2.new(0.5, -(DesiredSize.X / 2), 0.5, -(DesiredSize.Y / 2)),
						Enum.EasingDirection.InOut,
						Enum.EasingStyle.Linear,
						1,
						true,
						(function()
							wait(1.5)
							if not HieroglyphicGui or not HieroglyphicGui.Parent then
								return
							end
							local DesiredSize = (Vector2.new(HieroglyphicChosen.Size.X.Offset, HieroglyphicChosen.Size.Y.Offset) / 2)
							Frame.Rotation = 45
							HieroglyphicChosen.Rotation = -Frame.Rotation
							HieroglyphicChosen:TweenSizeAndPosition(
								UDim2.new(0, DesiredSize.X, 0, DesiredSize.Y),
								UDim2.new(0, 0, 0, 0),
								Enum.EasingDirection.InOut,
								Enum.EasingStyle.Linear,
								1,
								true,
								(function()
									ResizeComplete = true
									TransitionComplete()
								end)
							)
							Frame:TweenPosition(
								UDim2.new(0, -75, 0, 40),
								Enum.EasingDirection.InOut,
								Enum.EasingStyle.Linear,
								1,
								true,
								(function()
									MoveComplete = true
									TransitionComplete()
								end)
							)
						end)
					)
				end)
			end
			local RotationRate = 2
			Frame.Rotation = (Frame.Rotation + RotationRate)
			if Frame.Rotation >= 360 then
				Frame.Rotation = 0
			end
			for i, v in pairs(Hieroglyphics) do
				v.Image.Rotation = (v.Image.Rotation - RotationRate)
			end
			wait()
		end
	end)
	HieroglyphicGui.Parent = PlayerGui
end

function SwingSword(SpinTime)
	Spawn(function()
		local StartSpin = tick()
		local EndSpin = (StartSpin + SpinTime)
		while tick() < EndSpin do
			Tool.Grip = (Grips.Normal * CFrame.Angles(math.pi * 2 * ((tick() - StartSpin) / SpinTime), 0, 0))
			wait()
		end
		Tool.Grip = Grips.Normal
	end)
end

function Swing(PossibleAnims)
	if not CheckIfAlive() or not ToolEquipped then
		return
	end
	if PossibleAnims and #PossibleAnims > 0 then
		local Animation = PossibleAnims[math.random(1, #PossibleAnims)]
		CurrentAnimation = Animation
		local AttackAnimation = CurrentAnimation
		if CurrentAnimation == Animations.LeftSlashFast or CurrentAnimation == Animations.RightSlashFast or CurrentAnimation == Animations.OverHeadSwing then
			--SwingSword(0.5)
		end
		Spawn(function()
			InvokeClient("PlayAnimation", CurrentAnimation)
		end)
		wait(Animation.Duration)
		CurrentAnimation = nil
	end
end

function Blow(Hit)
	if not Hit or not Hit.Parent or not CheckIfAlive() or not ToolEquipped then
		return
	end
	local RightArm = Character:FindFirstChild("Right Arm")
	if not RightArm then
		return
	end
	local RightGrip = RightArm:FindFirstChild("RightGrip")
	if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
		return
	end
	local character = Hit.Parent
	if character == Character then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	local torso = character:FindFirstChild("Torso")
	if not humanoid or humanoid.Health == 0 or not torso then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player and (player == Player or Functions.IsTeamMate(Player, player)) then
		return
	end
	local PossibleDamage = ((CurrentAnimation and Damage.Hit) or Damage.Touch)
	local DamageValue = math.random(PossibleDamage.Min, PossibleDamage.Max)
	DamageValue = ((RageMode and (DamageValue * 1.25)) or DamageValue)
	Functions.UntagHumanoid(humanoid)
	Functions.TagHumanoid(humanoid, Player)
	humanoid:TakeDamage(DamageValue)
	if CurrentAnimation and CurrentTechnique then
		if CurrentTechnique.Technique == 316614873 and humanoid.Health <= 0 then
			Spawn(function()
				UseTechnique(true, false)
			end)
			for i, v in pairs(character:GetChildren()) do
				if v:IsA("BasePart") then
					v:Destroy()
				end
			end
			local AshColors = {"Pastel brown", "Light orange", "Burlap", "Fawn brown", "Cork", "Reddish brown", "Bronze"}
			for i = 1, math.random(35, 50) do
				local Ashes = BasePart:Clone()
				Ashes.Name = "Ashes"
				Ashes.BrickColor = BrickColor.new(AshColors[math.random(1, #AshColors)])
				Ashes.Material = Enum.Material.Sand
				for i, v in pairs({"Top", "Bottom", "Front", "Back", "Left", "Right"}) do
					Ashes[(v .. "Surface")] = Enum.SurfaceType.SmoothNoOutlines
				end
				Ashes.Size = Vector3.new((math.random(200, 250) * 0.001), (math.random(200, 250) * 0.001), (math.random(200, 250) * 0.001))
				Ashes.CFrame = (CFrame.new(torso.Position) * CFrame.new((math.random(-2000, 2000) * 0.001), (math.random(-2000, 2000) * 0.001), (math.random(-2000, 2000) * 0.001)) * CFrame.Angles(0, (math.random(-360, 360) * 0.01), 0))
				Debris:AddItem(Ashes, (14 + (i * 0.1)))
				Ashes.Parent = game:GetService("Workspace")
			end
		elseif CurrentTechnique.Technique == 316615073 then
			Spawn(function()
				UseTechnique(true, false)
			end)
			local FreezeScriptCopy = character:FindFirstChild(FreezeScript.Name)
			if not FreezeScriptCopy then
				FreezeScriptCopy = FreezeScript:Clone()
				local Duration = Create("NumberValue"){
					Name = "Duration",
					Parent = FreezeScriptCopy,
				}
			end
			local Duration = FreezeScriptCopy:FindFirstChild("Duration")
			if Duration then
				Duration.Value = 6
			end
			FreezeScriptCopy.Disabled = false
			FreezeScriptCopy.Parent = character
		elseif CurrentTechnique.Technique == 316615216 then
			Spawn(function()
				UseTechnique(true, false)
			end)
			Functions.UntagHumanoid(humanoid)
			Functions.TagHumanoid(humanoid, Player)
			humanoid:TakeDamage(60)
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Attack()
	Sounds.Slash:Play()
	local AttackAnims = {Animations.LeftSlash, Animations.RightSlash, Animations.LeftSwingFast, Animations.RightSwingFast, Animations.OverHeadSwing}
	Swing(AttackAnims)
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() or Special.Active then
		return
	end
	Tool.Enabled = false
	if CurrentTechnique and CurrentTechnique.Technique then
		if CurrentTechnique.Technique == 316615118 or CurrentTechnique.Technique == 316614985 or CurrentTechnique.Technique == 316614299 then
			Spawn(function()
				UseTechnique(true, false)
			end)
			RageMode = true
			Humanoid.WalkSpeed = (16 * 2)
			Humanoid.JumpPower = 60
			local CurrentlyEquipped = true
			local WalkSpeedChanged = false
			for i, v in pairs({ToolUnequipped, WalkSpeedChangedCheck}) do
				if v then
					v:disconnect()
				end
			end
			ToolUnequipped = Tool.Unequipped:connect(function()
				CurrentlyEquipped = false
			end)
			WalkSpeedChangedCheck = Humanoid.Changed:connect(function(Property)
				if Property == "WalkSpeed" then
					WalkSpeedChanged = true
				end
			end)
			Delay(15, (function()
				RageMode = false
				if not WalkSpeedChanged and CurrentlyEquipped and ToolEquipped and CheckIfAlive() then
					Humanoid.WalkSpeed = 16
					Humanoid.JumpPower = 50
				end
			end))
		elseif CurrentTechnique.Technique == 316615142 then
			Spawn(function()
				UseTechnique(true, false)
			end)
			local PlayersAvailable = {}
			for i, v in pairs(Players:GetChildren()) do
				if v:IsA("Player") and v.Character and v.Character.Parent then
					local character = v.Character
					local torso = character:FindFirstChild("Torso")
					if torso then
						table.insert(PlayersAvailable, {Player = v, Character = character, Torso = torso})
					end
				end
			end
			if #PlayersAvailable > 0 then
				local RandomPlayer = PlayersAvailable[math.random(1, #PlayersAvailable)]
				local YourPosition = Torso.CFrame
				local EnemyPosition = RandomPlayer.Torso.CFrame
				Torso.CFrame = EnemyPosition
				RandomPlayer.Torso.CFrame = YourPosition
			end
		elseif CurrentTechnique.Technique == 316615173 or CurrentTechnique.Technique == 316614843 or CurrentTechnique.Technique == 316614325 then
			Spawn(function()
				UseTechnique(true, false)
			end)
			--Does nothing!
		elseif CurrentTechnique.Technique == 316614921 then
			Spawn(function()
				UseTechnique(true, false)
			end)
			if CheckIfAlive() then
				Humanoid.Health = Humanoid.MaxHealth
			end
		elseif CurrentTechnique.Technique == 316615031 then
			Spawn(function()
				UseTechnique(true, false)
			end)
			local Radius = 20
			local Region = Region3.new((Torso.Position - Vector3.new(Radius, Radius, Radius)), (Torso.Position + Vector3.new(Radius, Radius, Radius)))
			local Parts = GetNearbyObjects(Region, {})
			local Humanoids = {}
			for i, v in pairs(Parts) do
				local character = v.Parent
				local humanoid = character:FindFirstChild("Humanoid")
				if humanoid and humanoid.Health > 0 and not Functions.CheckTableForInstance(Humanoids, humanoid) then
					table.insert(Humanoids, humanoid)
					local creator = character:FindFirstChild("Creator")
					if (not creator or (creator and creator.Value ~= Player)) then
						Functions.UntagHumanoid(humanoid)
						Functions.TagHumanoid(humanoid, Player)
						humanoid:TakeDamage(25)
						humanoid.Sit = true
					end
				end
			end
		elseif CurrentTechnique.Technique == 316615002 then
			Spawn(function()
				UseTechnique(true, false)
			end)
			local Radius = 30
			local Region = Region3.new((Torso.Position - Vector3.new(Radius, Radius, Radius)), (Torso.Position + Vector3.new(Radius, Radius, Radius)))
			local Parts = GetNearbyObjects(Region, {})
			for i, v in pairs(Parts) do
				local character = v.Parent
				local humanoid = character:FindFirstChild("Humanoid")
				local player = Players:GetPlayerFromCharacter(character)
				if humanoid and humanoid.Health > 0 and player then
					local playergui = player:FindFirstChild("PlayerGui")
					if playergui then
						for i, v in pairs(playergui:GetChildren()) do
							if v:IsA("ScreenGui") and v.Name == "BlackOutGui" then
								v:Destroy()
							end
						end
						local BlackOutGui = Create("ScreenGui"){
							Name = "BlackOutGui",
							Create("Frame"){
								Name = "Frame",
								Size = UDim2.new(3, 0, 3, 0),
								Position = UDim2.new(-1.5, 0, -1.5, 0),
								BorderSizePixel = 0,
								BackgroundColor3 = Color3.new(0, 0, 0),
								Active = false,
							}
						}
						Debris:AddItem(BlackOutGui, 8)
						BlackOutGui.Parent = playergui
					end
				end
			end
		end
	end
	Attack()
	Tool.Enabled = true
end

function Equipped(Mouse)
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	PlayerGui = Player:FindFirstChild("PlayerGui")
	Spawn(function()
		UseTechnique(false, true)
	end)
	Sounds.Unsheath:Play()
	ToolEquipped = true
end

function Unequipped()
	if CheckIfAlive() then
		Humanoid.WalkSpeed = 16
		Humanoid.JumpPower = 50
	end
	if HieroglyphicGui and HieroglyphicGui.Parent then
		HieroglyphicGui:Destroy()
	end
	RageMode = false
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
	if mode == "KeyPress" then
		local Key = value.Key
		local Down = value.Down
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke

Handle.Touched:connect(Blow)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)

CreateHieroglyphics()]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX36A99836AD6041FA9B4C462755A740FE">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">FreezeScript</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Player = Players:GetPlayerFromCharacter(Character)

Duration = script:FindFirstChild("Duration")

BaseColor = BrickColor.new("Cork")
DarkProperties = {
	All = {
		--BrickColor = BaseColor,
		Material = Enum.Material.Sand,
		TextureId = "",
		Texture = "",
		VertexColor = Vector3.new(BaseColor.Color.r, BaseColor.Color.g, BaseColor.Color.b),
		--BaseTextureId = 0,
		--OverlayTextureId = 0,
		SparkleColor = BaseColor.Color,
		Color = BaseColor.Color,
		SecondaryColor = BaseColor.Color,
	},
	Class = {
		BasePart = {
			Anchored = true,
		},
		ParticleEmitter = {
			Color = ColorSequence.new(BaseColor.Color, BaseColor.Color),
		},
		Sparkles = {
			Color = BaseColor.Color,
			SparkleColor = BaseColor.Color,
		},
		Decal = {
			Texture = "",
		},
	}
}

function GetAllInstances(Parent)
	local Instances = {}
	local function GetInstances(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			table.insert(Instances, v)
			GetInstances(v)
		end
	end
	GetInstances(Parent)
	return Instances
end

function Freeze()
	
	FrozenInstances = GetAllInstances(Character)
	OriginalInstances = {}
	for i, v in pairs(FrozenInstances) do
		local Instance = {Object = v, Properties = {}}
		local PropertiesAltered = {}
		if v:IsA("BasePart") and v.Name == "HumanoidRootPart" then
		elseif v:IsA("Decal") and v.Name == "face" then
		else
			for ii, vv in pairs(DarkProperties.All) do
				pcall(function()
					Instance.Properties[ii] = v[ii]
					PropertiesAltered[ii] = true
					v[ii] = vv
				end)
			end
			for ii, vv in pairs(DarkProperties.Class) do
				if v:IsA(ii) then
					for iii, vvv in pairs(vv) do
						--if not PropertiesAltered[iii] then
							pcall(function()
								Instance.Properties[iii] = v[iii]
								v[iii] = vvv
							end)
						--end
					end
				end
			end
		end
		table.insert(OriginalInstances, Instance)
	end
end

function Unfreeze()
	for i, v in pairs(OriginalInstances) do
		if v.Object then
			for ii, vv in pairs(v.Properties) do
				pcall(function()
					v.Object[ii] = vv
				end)
			end
		end
	end
end

if Duration and Duration.Value >= 0 then
	Freeze()
	while Duration.Value > 0 do
		wait()
	end
	Unfreeze()
end

script:Destroy()]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX082BDCD7FBA14C73A2DBCD0AD27164E7">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Functions = {
	
	CheckTableForString = (function(Table, String)
		for i, v in pairs(Table) do
			if string.lower(v) == string.lower(String) then
				return true
			end
		end
		return false
	end),

	CheckIntangible = (function(Hit)
		local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Ray", "Bullet", "ParticlePart"}
		if Hit and Hit.Parent then
			if (Hit.Transparency >= 1 and not Hit.CanCollide) or Functions.CheckTableForString(ProjectileNames, Hit.Name) then
				return true
			end
			local ObjectParent = Hit.Parent
			local Character = ObjectParent.Parent
			local Humanoid = Character:FindFirstChild("Humanoid")
			if Humanoid and Humanoid.Health > 0 and ObjectParent:IsA("Hat") then
				return true
			end
		end
		return false
	end),
	
	CastRay = (function(StartPos, Vec, Length, Ignore, DelayIfHit)
		local RayHit, RayPos, RayNormal, RayMaterial = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
		if RayHit and Functions.CheckIntangible(RayHit) then
			if DelayIfHit then
				wait()
			end
			RayHit, RayPos, RayNormal, RayMaterial = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
		end
		return RayHit, RayPos, RayNormal, RayMaterial
	end),
	
	CheckTableForInstance = (function(Table, Instance)
		for i, v in pairs(Table) do
			if v == Instance then
				return true
			end
		end
		return false
	end),
	
	GetAllConnectedParts = (function(Object)
		local Parts = {}
		local function GetConnectedParts(Object)
			for i, v in pairs(Object:GetConnectedParts()) do
				local Ignore = false
				for ii, vv in pairs(Parts) do
					if v == vv then
						Ignore = true
					end
				end
				if not Ignore then
					table.insert(Parts, v)
					GetConnectedParts(v)
				end
			end
		end
		GetConnectedParts(Object)
		return Parts
	end),
		
	GetTotalParts = (function(MaxParts, PossibleParts, Parts)
		if MaxParts < PossibleParts then
			return MaxParts
		elseif Parts >= MaxParts then
			return 0
		elseif MaxParts >= PossibleParts then
			local PartCount = (MaxParts - PossibleParts)
			if Parts <= MaxParts then
				PartCount = (MaxParts - Parts)
				if PartCount > PossibleParts then
					return PossibleParts
				else
					return PartCount
				end
			elseif PartCount >= PossibleParts then
				return PossibleParts
			else
				return PartCount
			end
		end
	end),
	
	GetParts = (function(Region, MaxParts, Ignore)
		local Parts = {}
		local RerunFailed = false
		while #Parts < MaxParts and not RerunFailed do
			local Region = Region
			local PossibleParts = Functions.GetTotalParts(MaxParts, 100, #Parts)
			local PartsNearby = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region, Ignore, PossibleParts)
			if #PartsNearby == 0 then
				RerunFailed = true
			else
				for i, v in pairs(PartsNearby) do
					table.insert(Parts, v)
					table.insert(Ignore, v)
				end
			end
		end
		return Parts
	end),
	
	IsTeamMate = (function(Player1, Player2)
		return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
	end),

	TagHumanoid = (function(humanoid, player)
		local Creator_Tag = Instance.new("ObjectValue")
		Creator_Tag.Name = "creator"
		Creator_Tag.Value = player
		Debris:AddItem(Creator_Tag, 2)
		Creator_Tag.Parent = humanoid
	end),

	UntagHumanoid = (function(humanoid)
		for i, v in pairs(humanoid:GetChildren()) do
			if v:IsA("ObjectValue") and v.Name == "creator" then
				v:Destroy()
			end
		end
	end),
}

return Functions]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXACA63C8869814A6CBF72B0FEC04B0035">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=74894663</url></Content>
				<string name="Name">LeftSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX83900BCC58654DBDB76313465A0B02E2">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=86313418</url></Content>
				<string name="Name">LeftSwingFast</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXDC758B82AE5747749DA9255B18EA737E">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=74897796</url></Content>
				<string name="Name">OverHeadSwing</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX67836B73782E4114ADF24194365E42A4">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=74813494</url></Content>
				<string name="Name">RightSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXB785D49AEC654B61ACE88AAADA719B6C">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=86313260</url></Content>
				<string name="Name">RightSwingFast</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXECBCA88CDC824009A4A5DFB3B6C76AB8">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-159.979019</X>
					<Y>151.869385</Y>
					<Z>-46.859066</Z>
					<R00>-0.2810449</R00>
					<R01>0.228843257</R01>
					<R02>-0.932011008</R02>
					<R10>-3.7252903e-009</R10>
					<R11>0.971153736</R11>
					<R12>0.238454252</R12>
					<R20>0.959694624</R20>
					<R21>0.0670163482</R21>
					<R22>-0.272937804</R22>
				</CoordinateFrame>
				<float name="FieldOfView">1.00000012</float>
				<CoordinateFrame name="Focus">
					<X>-0.325767994</X>
					<Y>111.022232</Y>
					<Z>-0.104887158</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX0C6BAF4457104DA599CF9B9200164719">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Preloader</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent

ContentProvider = game:GetService("ContentProvider")

BaseUrl = "http://www.roblox.com/asset/?id="

Hieroglyphics = require(Tool:WaitForChild("Hieroglyphics"))

for i, v in pairs(Hieroglyphics) do
	ContentProvider:Preload(BaseUrl .. v)
end]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX32F2A1BFE0B744209B0A2CE2FD445F6B">
			<Properties>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Hieroglyphics</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Hieroglyphics = {
	316614299, --Pharaoh - Speed, Jump, Damage upgrade
	316614325, --Monkey - Nothing
	316614843, --Box of snakes - Nothing
	316614873, --Artifact - Turns killed enemies into sand
	316614921, --Egg - Heals you entirely
	316614985, --Sphinx - Speed, Jump, Damage upgrade
	316615002, --Cursed eye - Blinds enemies
	316615031, --Quiver with arrows - Damages nearby enemies
	316615073, --Mummy - Turns enemies into sandstone
	316615118, --Beetle - Speed, Jump, Damage upgrade
	316615142, --Bird - Swaps your position with a random player
	316615173, --Text - Nothing
	316615216, --Crocodile - Does massive damage to an enemy
}

return Hieroglyphics]]></ProtectedString>
			</Properties>
		</Item>
	</Item>
</roblox>