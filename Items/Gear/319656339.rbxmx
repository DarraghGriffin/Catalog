<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXFFD3816E80E4479CA79C3592804B7502">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>4.25</X>
				<Y>1.35000002</Y>
				<Z>-1</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">CompanionLOLcat</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=319323891</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX4AF37BE8F2694D9BA0D38EA97685CEFD">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.0527760014</X>
					<Y>4.02852774</Y>
					<Z>0.0273460001</Z>
					<R00>-0.134318948</R00>
					<R01>-0.0234867707</R01>
					<R02>0.990659833</R02>
					<R10>-1.38614045e-014</R10>
					<R11>0.999719083</R11>
					<R12>0.0237015504</R12>
					<R20>-0.990938187</R20>
					<R21>0.00318356743</R21>
					<R22>-0.134281218</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>2</Y>
					<Z>4</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX2EEAA4E8B73E4AC0A0B514B882FA2E85">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=319323837</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.75</X>
						<Y>0.75</Y>
						<Z>0.75</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=319323867</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXBEEA7703572144EEA9E29AB2E41C31D0">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX8886318F30AF40A68F918BF90B5A3215">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
InsertService = game:GetService("InsertService")

Remover = script:WaitForChild("Remover")

NPCModule = require(191816425)

ReloadTime = 5

NPCSpawned = false
ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

Handle.Transparency = 0
Tool.Enabled = true

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function MakeNPC()
	if PlayerNPC and PlayerNPC.Parent then
		PlayerNPC:Destroy()
	end
	PlayerNPC = NPC:Clone()
	NPCHumanoid = PlayerNPC:FindFirstChild("Humanoid")
	NPCTorso = PlayerNPC:FindFirstChild("Torso")
	NPCFunctions.MakeNPC({NPC = PlayerNPC, AIControl = {
		Creator = Player,
		Mode = "Follow",
		MaxDistance = 100,
		Follow = Player,
		Offset = Vector3.new(4.5, 0, -1.5),
		GeneralOffset = false,
		Chase = true,
		ChaseDistance = 50,
		ChaseRange = 0,
		Target = nil,
		TargetPos = Vector3.new(0, 0, 0),
		Damage = 0,
		SelfSufficient = false
	}})
	local Values = {
		{Name = "Creator", Class = "ObjectValue", Value = Player},
		{Name = "Tool", Class = "ObjectValue", Value = Tool},
	}
	for i, v in pairs(Values) do
		local Value = Instance.new(v.Class)
		Value.Name = v.Name
		Value.Value = v.Value
		Value.Parent = PlayerNPC
	end
	if not NPCHumanoid or not NPCTorso then
		return
	end
	for i, v in pairs({Remover}) do
		local ScriptClone = v:Clone()
		ScriptClone.Disabled = false
		ScriptClone.Parent = PlayerNPC
	end
	NPCHumanoid.Died:connect(function()
		Debris:AddItem(PlayerNPC, 3)
	end)
	PlayerNPC.Changed:connect(function(Property)
		if Property == "Parent" and not PlayerNPC.Parent and NPCSpawned then
			Tool.Enabled = false
			NPCSpawned = false
			wait(ReloadTime)
			Tool.Enabled = true
		end
	end)
	NPCTorso.CFrame = (Torso.CFrame * CFrame.new(PlayerNPC.Offset.Value))
	PlayerNPC.Parent = game:GetService("Workspace")
	NPCHumanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	NPCSpawned = true
end

function SetTarget(Data)
	if not PlayerNPC or not PlayerNPC.Parent then
		return
	end
	local MousePosition = Data.MousePosition
	local Target = Data.Target
	local TargetValue = PlayerNPC:FindFirstChild("Target")
	local TargetPosValue = PlayerNPC:FindFirstChild("TargetPos")
	local ModeValue = PlayerNPC:FindFirstChild("Mode")
	local OffsetValue = PlayerNPC:FindFirstChild("Offset")
	if not TargetValue or not TargetPosValue or not ModeValue then
		return
	end
	if Target and Target.Parent then
		local character = Target.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player and IsTeamMate(player, Player) then
			return
		end
		local creator = character:FindFirstChild("Creator")
		local humanoid = character:FindFirstChild("Humanoid")
		if creator and (creator.Value == Player or IsTeamMate(Player, creator.Value)) then
			return
		end
		if humanoid and humanoid.Health > 0 then
			if TargetValue then
				TargetValue.Value = character
				ModeValue.Value = "Attack"
				return
			end
		else
			TargetPosValue.Value = MousePosition
			TargetValue.Value = nil
			ModeValue.Value = "MoveTo"
		end
	else
		ModeValue.Value = "Follow"
	end
end

function Activated()
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if Tool.Enabled and (not PlayerNPC or not PlayerNPC.Parent) then
	else
		local MouseData = InvokeClient("MouseData")
		if not MouseData then
			return
		end
		local MousePosition = MouseData.Position
		local Target = MouseData.Target
		SetTarget({MousePosition = MousePosition, Target = Target})
	end
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Handle.Transparency = 1
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
end)

Tool.Changed:connect(function(Property)
	if not Tool.Parent then
		return
	end
	Spawn(function()
		if not Tool.Enabled or NPCSpawned or not ToolEquipped or not CheckIfAlive() then
			return
		end
		NPCData = NPCModule.GetTable({Key = "MakeNPC", Player = Player})
		NPCFunctions = NPCData.GetData({Player = Player, Tool = Tool})
		LOLcatData = NPCModule.GetTable({Key = "LOLcat", Player = Player})
		if not LOLcatData then
			return
		end
		LOLcatFunctions = LOLcatData.GetData({Player = Player, Tool = Tool, Character = Character})
		if not LOLcatFunctions then
			return
		end
		NPC = LOLcatFunctions.CreateCat()
		Spawn(MakeNPC)
	end)
	Handle.Transparency = ((Players:GetPlayerFromCharacter(Tool.Parent) and ((not NPCSpawned and 1) or 0)) or 0)
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBXD98EF26F8558432B8349A1B9D2C0BD2B">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Remover</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Model = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Creator = Model:FindFirstChild("Creator")
Tool = Model:FindFirstChild("Tool")

function DestroyModel()
	Debris:AddItem(Model, 0.5)
end

if not Creator or not Creator.Value or not Creator.Value:IsA("Player") or not Creator.Value.Parent or not Tool or not Tool.Value or not Tool.Value.Parent then
	DestroyModel()
	return
end

Creator = Creator.Value
Tool = Tool.Value

Character = Creator.Character
if not Character then
	DestroyModel()
	return
end

Creator.Changed:connect(function(Property)
	if Property == "Parent" and not Creator.Parent then
		DestroyModel()
	end
end)

Character.Changed:connect(function(Property)
	if Property == "Parent" and not Character.Parent then
		DestroyModel()
	end
end)

Tool.Changed:connect(function(Property)
	if Property == "Parent" and (not Tool.Parent or (not Tool.Parent:IsA("Backpack") and not Players:GetPlayerFromCharacter(Tool.Parent))) then
		DestroyModel()
	end
end)]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXFA77B15D1D5E4A809037B915309A7BC7">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "MouseData" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX3F12BEBE099E4BDCBA4E0B64C50A243E">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-259.955231</X>
					<Y>31.2107239</Y>
					<Z>-72.935257</Z>
					<R00>-0.270274997</R00>
					<R01>0.0962128937</R01>
					<R02>-0.957963705</R02>
					<R10>-0</R10>
					<R11>0.994994283</R11>
					<R12>0.0999320447</R12>
					<R20>0.962783217</R20>
					<R21>0.0270091332</R21>
					<R22>-0.268922061</R22>
				</CoordinateFrame>
				<float name="FieldOfView">1.00000012</float>
				<CoordinateFrame name="Focus">
					<X>-3.22123194</X>
					<Y>4.42896223</Y>
					<Z>-0.864218473</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>