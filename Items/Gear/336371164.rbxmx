<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX40507F104EFC4CBAA60428B02FEB3D60">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.5</Y>
				<Z>0.699999988</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">ShrinkRay</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=334653725</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX9150F7992B9B4B6D8FFBC869CEE54898">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>17.3299999</Y>
					<Z>22.0100002</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0.880980253</R11>
					<R12>-0.473153085</R12>
					<R20>0</R20>
					<R21>0.473153085</R21>
					<R22>0.880980253</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>1</Y>
					<Z>2</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX04EADD5F8EE142C6B6D07029DC8018E6">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=334653903</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=334653784</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX369AC71203C34D3297814A872C3557D2">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Fire</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=130113322</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX9A1602CAAC134CDCBAC4F6244880E992">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Hit</string>
					<float name="Pitch">2</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=130113415</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX19596485F7074ABEAF120458E34E2BCE">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Reload</string>
					<float name="Pitch">1.5</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset?id=130113370</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBXE81F6C9D98B94228943C283AC82CE1AD">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

ProjectileScript = script:WaitForChild("ProjectileScript")

Sounds = {
	Fire = Handle:WaitForChild("Fire"),
	Hit = Handle:WaitForChild("Hit"),
	Reload = Handle:WaitForChild("Reload"),
}

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Anchored = false,
	CanCollide = true,
	Locked = true,
}

BaseProjectile = BasePart:Clone()
BaseProjectile.Name = "Projectile"
BaseProjectile.BrickColor = BrickColor.new("Pastel Blue")
BaseProjectile.Transparency = 0.375
BaseProjectile.Material = Enum.Material.Neon
BaseProjectile.Size = Vector3.new(0.25, 2, 0.25)
BaseProjectile.CanCollide = false
for i, v in pairs({"Left", "Right", "Top", "Bottom", "Front", "Back"}) do
	BaseProjectile[(v .. "Surface")] = Enum.SurfaceType.SmoothNoOutlines
end
Create("CylinderMesh"){
	Scale = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	VertexColor = Vector3.new(1, 1, 1),
	Parent = BaseProjectile,
}

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

ReloadTime = 2
ToolEquipped = false

Handle.Transparency = 0
Tool.Enabled = true

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Activated()
	local MouseData = InvokeClient("MouseData")
	if not ToolEquipped or not CheckIfAlive() or not Tool.Enabled or not MouseData or not MouseData.Position then
		return
	end
	Tool.Enabled = false
	Sounds.Fire:Play()
	local StartPosition = (Handle.CFrame * CFrame.new(0, 0.25, -((Handle.Size.Z / 2) + (BaseProjectile.Size.Z / 2) + 2)))
	local TargetPosition = MouseData.Position
	local Projectile = BaseProjectile:Clone()
	local ProjectileOrientation = CFrame.new(StartPosition.p, TargetPosition)
	local Force = 75
	local Gravity = 196.20
	local Mass = (Projectile:GetMass() * Gravity)
	local Velocity = (ProjectileOrientation.lookVector * Force)
	local Force = Create("BodyVelocity"){
		Name = "BodyVelocity",
		maxForce = Vector3.new(Mass, Mass, Mass),
		velocity = Velocity,
		Parent = Projectile,
	}
	Projectile.Velocity = Velocity
	Projectile.CFrame = (ProjectileOrientation * CFrame.Angles((math.pi / 2), 0, 0))
	local ProjectileScriptCopy = ProjectileScript:Clone()
	local Values = {
		{Name = "Creator", Value = Player, Class = "ObjectValue"},
		{Name = "Tool", Value = Tool, Class = "ObjectValue"},
	}
	for i, v in pairs(Values) do
		local Creator = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = Projectile,
		}
	end
	local HitSound = Sounds.Hit:Clone()
	HitSound.Parent = Projectile
	ProjectileScriptCopy.Disabled = false
	ProjectileScriptCopy.Parent = Projectile
	Debris:AddItem(Projectile, 3)
	Projectile.Parent = game:GetService("Workspace")
	wait(ReloadTime / 2)
	Sounds.Reload:Play()
	wait(ReloadTime / 2)
	Tool.Enabled = true
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not mode or not value then
		return
	end
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX2EF1A28C32A44D27ABF06748FC79C1C9">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ProjectileScript</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Part = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

ScaleModule = require(201433042)

Sounds = {
	Hit = Part:WaitForChild("Hit"),
}

ShrinkScript = script:WaitForChild("ShrinkScript")

Tool = Part:FindFirstChild("Tool")
if Tool then
	Tool = Tool.Value
end
Creator = Part:WaitForChild("Creator")

AlreadyHit = false

function GetCreator()
	return (((Creator and Creator.Value and Creator.Value.Parent and Creator.Value:IsA("Player")) and Creator.Value) or nil)
end

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function PartHit(Hit)
	local creator = GetCreator()
	local DestroyProjectile = false
	local HumanoidHit = false
	if not Hit or not Hit.Parent or not creator or AlreadyHit then
		return
	end
	local character = Hit.Parent
	if character:IsA("Hat") or character:IsA("Tool") then
		character = character.Parent
	end
	local humanoid = character:FindFirstChild("Humanoid")
	local torso = character:FindFirstChild("Torso")
	if not humanoid or humanoid.Health == 0 or not torso then
		DestroyProjectile = true
	else
		HumanoidHit = true
	end
	local player = Players:GetPlayerFromCharacter(character)
	if not player then
		DestroyProjectile = true
		HumanoidHit = false
	elseif player then
		if player == creator then
			return
		elseif IsTeamMate(creator, player) then
			DestroyProjectile = true
		end
	end
	if HumanoidHit then
		local ShrinkScriptCopy = character:FindFirstChild(ShrinkScript.Name)
		if ShrinkScriptCopy then
			local Shrink = ShrinkScriptCopy:FindFirstChild("Shrink")
			if Shrink then
				Shrink.Value = true
			end 
		else
			ShrinkScriptCopy = ShrinkScript:Clone()
			local Values = {
				{Name = "Creator", Value = creator, Class = "ObjectValue"},
				{Name = "Tool", Value = Tool, Class = "ObjectValue"},
			}
			for i, v in pairs(Values) do
				local Creator = Create(v.Class){
					Name = v.Name,
					Value = v.Value,
					Parent = ShrinkScriptCopy,
				}
			end
			ShrinkScriptCopy.Disabled = false
			ShrinkScriptCopy.Parent = character
		end
		DestroyProjectile = true
	end
	if DestroyProjectile then
		AlreadyHit = true
		Sounds.Hit:Play()
		Part.Anchored = true
		Part.Transparency = 1
		Debris:AddItem(Part, 1.5)
	end
end

Part.Touched:connect(PartHit)]]></ProtectedString>
				</Properties>
				<Item class="Script" referent="RBX815517E01CDC41A3AE607928CC8D15B7">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ShrinkScript</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ShrinkMonitor = script:WaitForChild("Shrink")
ShrinkMonitor.Value = false

Creator = script:FindFirstChild("Creator")
Tool = script:FindFirstChild("Tool")

ResizeModule = require(201433042)

ShrinkAmount = 0.85
ShrinkTimes = 0

UndoingShrink = false

Character = script.Parent
Humanoid = Character:WaitForChild("Humanoid")
Torso = Character:FindFirstChild("Torso")

function Shrink()
	if UndoingShrink then
		return
	end
	local OriginalCF = Torso.CFrame
	local ModelSize = Character:GetModelSize()
	local ModelMass = (ModelSize.X * ModelSize.Y * ModelSize.Z)
	if ModelMass > 2 then
		ShrinkTimes = (ShrinkTimes + 1)
		ResizeModule.ScaleCharacter(Character, ShrinkAmount, {ResizeModels = true, ScaleTools = true, ScaleHats = true})
		Torso.CFrame = OriginalCF
	end
end

function UndoShrink()
	if UndoingShrink then
		return
	end
	UndoingShrink = true
	for i = 1, ShrinkTimes do
		ResizeModule.ScaleCharacter(Character, (1 / ShrinkAmount), {ResizeModels = true})
	end
	script:Destroy()
end

ShrinkMonitor.Changed:connect(function()
	if ShrinkMonitor.Value then
		ShrinkMonitor.Value = false
		Shrink()
	end
end)

Shrink()

if Creator and Creator.Value and Creator.Value.Parent and Creator.Value:IsA("Player") then
	local player = Creator.Value
	player.Changed:connect(function(Property)
		if Property == "Character" and not player.Character or not player.Character.Parent then
			UndoShrink()
		end
	end)
else
	wait(10)
	UndoShrink()
end

if Tool and Tool.Value and Tool.Value.Parent then
	local tool = Tool.Value
	tool.Changed:connect(function(Property)
		if Property == "Parent" and not tool.Parent or (not tool.Parent:IsA("Backpack") and not Players:GetPlayerFromCharacter(tool.Parent)) then
			UndoShrink()
		end
	end)
end]]></ProtectedString>
					</Properties>
					<Item class="BoolValue" referent="RBX41D875A9EFA842408F1E217485C2377E">
						<Properties>
							<string name="Name">Shrink</string>
							<bool name="Value">true</bool>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX9B52E7EA05634524B666F1DADDAE492F">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	ToolEquipped = false
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs(LocalObjects) do
		if v.Object then
			v.Object.LocalTransparencyModifier = 0
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	LocalObjects = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					local Camera = game:GetService("Workspace").CurrentCamera
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							local ViewDistance = (Camera.CoordinateFrame.p - Head.Position).Magnitude
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or CurrentTransparency == 0)) or v.AutoUpdate) then
								if ((v.Distance and ViewDistance <= v.Distance) or not v.Distance) then
									v.Object.LocalTransparencyModifier = v.Transparency
								else
									v.Object.LocalTransparencyModifier = 0
								end
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	elseif mode == "SetCameraOffset" and value then
		pcall(function()
			Humanoid.CameraOffset = value
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX22DB1179F24840D49BF5EBE58F33027F">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX2D8E0147F0304C46B2659AC89CD81BF0">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>3.01193523</X>
					<Y>17.3540554</Y>
					<Z>21.4753838</Z>
					<R00>-0.201369032</R00>
					<R01>-0.0307456236</R01>
					<R02>0.979032815</R02>
					<R10>-0</R10>
					<R11>0.999507308</R11>
					<R12>0.0313886032</R12>
					<R20>-0.979515493</R20>
					<R21>0.0063206926</R21>
					<R22>-0.201269805</R22>
				</CoordinateFrame>
				<float name="FieldOfView">40</float>
				<CoordinateFrame name="Focus">
					<X>-0.218872547</X>
					<Y>17.250473</Y>
					<Z>22.1395741</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>