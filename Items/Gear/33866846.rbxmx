<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXFBCBECE30DFE49A7BE3FF87F2DA55A59">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-1.20000005</Y>
				<Z>0.600000024</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">GravitationalRadiationHammerv0.01</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=33685977</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX8301F3A6BFE74151A77CDF7E9F98CC8C">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">23</int>
				<CoordinateFrame name="CFrame">
					<X>0.345382988</X>
					<Y>17.3297329</Y>
					<Z>21.7005005</Z>
					<R00>0.151517734</R00>
					<R01>0.597622156</R01>
					<R02>-0.787331164</R02>
					<R10>0.00121342135</R10>
					<R11>0.796414077</R11>
					<R12>0.604750276</R12>
					<R20>0.988453805</R20>
					<R21>-0.0925856903</R21>
					<R22>0.11994566</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>5</Y>
					<Z>3</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX5FDC7935D6A4483486E09D2441E0C1A3">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=33685862</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=33685897</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX60720CB8492C49D7B42388B481504F57">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=30172281</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX5B194BA1CE034DF59D6866F3119794C6">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">SendOut</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=30172373</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4C02CE6336584225AD7DF37ED08AD9A9">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">InitialHit</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=30299564</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXD2447BD772434C5892CE0AA5695D69E6">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=33169573</url></Content>
				<string name="Name">GravitySlam</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX70064F0121354F11901E64AF6BECB0EA">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=27432686</url></Content>
				<string name="Name">StaffOut</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXA75BC3DE095A47AFB947A1F6E34FAE29">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		PlayerMouse = Mouse
		Mouse.Button1Down:connect(function()
			InvokeServer("Button1Click", {Down = true})
		end)
		Mouse.Button1Up:connect(function()
			InvokeServer("Button1Click", {Down = false})
		end)
		Mouse.KeyDown:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = true})
		end)
		Mouse.KeyUp:connect(function(Key)
			InvokeServer("KeyPress", {Key = Key, Down = false})
		end)
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	pcall(function()
		local ServerReturn = ServerControl:InvokeServer(mode, value)
		return ServerReturn
	end)
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX7E611520A2E24DADAC577145611781CA">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX1972BC1D4F0048249A7C58C4FCE4450A">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

Gravity = 196.20

HammerStrength = 30
UpStrength = 1500
ReloadTime = 5

Forces = {}

Animations = {
	GravitySlam = {Animation = Tool:WaitForChild("GravitySlam"), FadeTime = 0.1, Weight = 1, Speed = 1, Duration = 0.75},
	StaffOut = {Animation = Tool:WaitForChild("StaffOut"), FadeTime = 0.1, Weight = 1, Speed = 0.75, Duration = nil},
}

Sounds = {
	InitialHit = Handle:WaitForChild("InitialHit"),
	Hit = Handle:WaitForChild("Hit"),
	SendOut = Handle:WaitForChild("SendOut"),
}

ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

Handle.Transparency = 0
Tool.Enabled = true

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function GetAllConnectedParts(Object)
	local Parts = {}
	local function GetConnectedParts(Object)
		for i, v in pairs(Object:GetConnectedParts()) do
			local Ignore = false
			for ii, vv in pairs(Parts) do
				if v == vv then
					Ignore = true
				end
			end
			if not Ignore then
				table.insert(Parts, v)
				GetConnectedParts(v)
			end
		end
	end
	GetConnectedParts(Object)
	return Parts
end

function GetTotalParts(MaxParts, PossibleParts, Parts)
	if MaxParts < PossibleParts then
		return MaxParts
	elseif Parts >= MaxParts then
		return 0
	elseif MaxParts >= PossibleParts then
		local PartCount = (MaxParts - PossibleParts)
		if Parts <= MaxParts then
			PartCount = (MaxParts - Parts)
			if PartCount > PossibleParts then
				return PossibleParts
			else
				return PartCount
			end
		elseif PartCount >= PossibleParts then
			return PossibleParts
		else
			return PartCount
		end
	end
end

function GetParts(Region, MaxParts, Ignore)
	local Parts = {}
	local RerunFailed = false
	while #Parts < MaxParts and not RerunFailed do
		local Region = Region
		local PossibleParts = GetTotalParts(MaxParts, 100, #Parts)
		local PartsNearby = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region, Ignore, PossibleParts)
		if #PartsNearby == 0 then
			RerunFailed = true
		else
			for i, v in pairs(PartsNearby) do
				table.insert(Parts, v)
				table.insert(Ignore, v)
			end
		end
	end
	return Parts
end

function CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end

function GetObjectsNearby(Radius)
	local NegativeRegion = (Handle.Position - Vector3.new(Radius, Radius, Radius))
	local PositiveRegion = (Handle.Position + Vector3.new(Radius, Radius, Radius))
	local Region = Region3.new(NegativeRegion, PositiveRegion)
	local IgnoreList = {Character}
	for i, v in pairs(Players:GetChildren()) do
		if v:IsA("Player") and v ~= Player and v.Character and v.Character.Parent and IsTeamMate(Player, v) then
			table.insert(IgnoreList, v.Character)
		end
	end
	local Parts = GetParts(Region, 500, IgnoreList)
	return Parts
end 

function MakeFire()
	local FirePart = BasePart:Clone()
	FirePart.Name = "FirePart"
	FirePart.Transparency = 1
	local Fire = Create("Fire"){
		Color = Color3.new((85 / 255), (255 / 255), (255 / 255)),
		SecondaryColor = Color3.new((180 / 255), (255 / 255), (255 / 255)),
		Heat = -5,
		Size = 8,
		Parent = FirePart,
	}
	local Weld = Create("Weld"){
		Part0 = FirePart,
		Part1 = Handle,
		C0 = CFrame.new(0, -4.5, 0),
		Parent = FirePart,
	}
	Debris:AddItem(FirePart, 1.5)
	FirePart.Parent = Tool
end

function ExpandFire()
	if not CheckIfAlive() then
		return
	end
	local Fire = Create("Fire"){
		Color = Color3.new((85 / 255), (255 / 255), (255 / 255)),
		SecondaryColor = Color3.new((180 / 255), (255 / 255), (255 / 255)),
		Heat = -5,
		Size = 1,
	}
	local HeatRate = 8
	local HeatDelay = 0.2
	Debris:AddItem(Fire, (HeatRate * HeatDelay))
	Fire.Parent = Torso
	for i = 1, HeatRate do
		Fire.Size = (Fire.Size + 4)
		wait(HeatDelay)
	end
end

function AddPart(Object, Recursive, Table)
	if Object.Anchored and not CheckTableForInstance(Table, Object) then
		return {}
	end
	local Objects = {Object}
	local DistanceApart = (Handle.Position - Object.Position).Magnitude
	local Height = (HammerStrength * (1 - (DistanceApart / HammerStrength)))
	local Mass = (Object:GetMass() * UpStrength)
	local BodyPosition = Create("BodyPosition"){
		position = Object.Position + Vector3.new(0, Height, 0),
		P = Mass,
		D = (Mass / 2),
		maxForce = Vector3.new(Mass, Mass, Mass),
	}
	table.insert(Forces, BodyPosition)
	Debris:AddItem(BodyPosition, 3)
	BodyPosition.Parent = Object
	local humanoid
	if Object.Parent then
		for i, v in pairs(Object.Parent:GetChildren()) do
			if v:IsA("Humanoid") then
				humanoid = v
			end
		end
		if not humanoid and not Object.Parent:IsA("Hat") and not Object.Parent:IsA("Tool") then
			Object:BreakJoints()
		elseif humanoid and Recursive then
			local parts = GetAllConnectedParts(Object)
			for i, v in pairs(parts) do
				if not CheckTableForInstance(Table, v) and not CheckTableForInstance(Objects, v) then
					for ii, vv in pairs(AddPart(v, false, Table)) do
						if not CheckTableForInstance(Table, vv) and CheckTableForInstance(Objects, vv) then
							table.insert(Objects, v)
						end
					end
				end
			end
		end
	end
	return Objects
end

function PickUpNearbyParts(Parts)
	local PartsAffected = {}
	for i, v in pairs(Parts) do
		for ii, vv in pairs(AddPart(v, true, PartsAffected)) do
			table.insert(PartsAffected, vv)
		end
	end
	AddPart(Torso, true, {})
	return PartsAffected
end

function SendOut(Objects)
	if #Objects <= 0 then
		return
	end
	Spawn(function()
		InvokeClient("PlayAnimation", Animations.StaffOut)
	end)
	Sounds.SendOut:Play()
	Spawn(ExpandFire)
	wait(0.3)
	for i, v in pairs(Objects) do
		local Direction = CFrame.new(Handle.Position, v.Position)
		local BodyForce = Create("BodyForce"){
			force = (Direction.lookVector * v:GetMass() * 400),
		}
		Debris:AddItem(BodyForce, 1)
		BodyForce.Parent = v
		if v.Parent then
			for ii, vv in pairs(v.Parent:GetChildren()) do
				if vv:IsA("Humanoid") then
					vv.Sit = true
				end
			end
		end
	end
	wait(0.75)
	Spawn(function()
		InvokeClient("StopAnimation", Animations.StaffOut)
	end)
end

function SendFlying()
	for i, v in pairs(Forces) do
		if v and v.Parent then
			v:Destroy()
		end
	end
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	local CurrentlyEquipped = true
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	Forces = {}
	MakeFire()
	local Animation = Animations.GravitySlam
	Spawn(function()
		InvokeClient("PlayAnimation", Animation)
	end)
	wait(Animation.Duration)
	Sounds.InitialHit:Play()
	Sounds.Hit:Play()
	if not CurrentlyEquipped then
		return
	end
	local Parts = GetObjectsNearby(HammerStrength)
	local Objects = PickUpNearbyParts(Parts)
	wait(2)
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	if not CurrentlyEquipped then
		return
	end
	SendOut(Objects)
end

function Activated()
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	SendFlying()
	wait(ReloadTime)
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	for i, v in pairs(Sounds) do
		v:Stop()
	end
	for i, v in pairs(Forces) do
		if v and v.Parent then
			v:Destroy()
		end
	end
	Forces = {}
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXD5F1C6CA420843F8B287D0FEA6C427AA">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>3.87240243</X>
					<Y>17.1058083</Y>
					<Z>25.204834</Z>
					<R00>0.796477258</R00>
					<R01>0.0601026453</R01>
					<R02>0.601674139</R02>
					<R10>-3.72529074e-009</R10>
					<R11>0.995047867</R11>
					<R12>-0.0993976444</R12>
					<R20>-0.604668677</R20>
					<R21>0.0791679621</R21>
					<R22>0.792532802</R22>
				</CoordinateFrame>
				<float name="FieldOfView">50.0000038</float>
				<CoordinateFrame name="Focus">
					<X>2.66905403</X>
					<Y>17.3046036</Y>
					<Z>23.6197681</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>