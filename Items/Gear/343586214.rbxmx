<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX414B83DD26564BE9968013133831C39F">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.299999952</Y>
				<Z>0.863074839</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>4.37113883e-008</R12>
				<R20>0</R20>
				<R21>-4.37113883e-008</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">RainbowBlaster</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=342887416</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXBBF4360A81654B8CB33A11C7BEF272F9">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.0347720012</X>
					<Y>11.3843956</Y>
					<Z>0.0282969996</Z>
					<R00>-0.890322685</R00>
					<R01>0.183299527</R01>
					<R02>0.416805774</R02>
					<R10>1.19371833e-007</R10>
					<R11>0.91539216</R11>
					<R12>-0.402563572</R12>
					<R20>-0.455330402</R20>
					<R21>-0.358411431</R21>
					<R22>-0.814994156</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>1.60000002</Y>
					<Z>3.20000005</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXA7BBD0A3BE2F47F1815EE84A1282707A">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=98400644</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=342824587</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX14EE23F554C740C4BA6CF284DC036AA2">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Fire</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=1369158</url></Content>
					<float name="Volume">0.200000003</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX1AA6D1A0E1994F5DB36CFDD130E00977">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Reload</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=2101137</url></Content>
					<float name="Volume">0.75</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX02F34EE3EFAA4F4783DC39062C7172EF">
			<Properties>
				<string name="Name">Remotes</string>
			</Properties>
			<Item class="RemoteFunction" referent="RBX68BA19BA3E9A4A888B4BD9FC7B271BBD">
				<Properties>
					<string name="Name">ServerControl</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBX35E961C823544677A6A7AEEF1DECFF1D">
				<Properties>
					<string name="Name">ClientControl</string>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXA99B1F7FB50D4CA3BAC87AE9FB991592">
			<Properties>
				<Content name="AnimationId"><null></null></Content>
				<string name="Name">Fire</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXD894E22B15C847D1802CB9DC4F843312">
			<Properties>
				<Content name="AnimationId"><null></null></Content>
				<string name="Name">Equip</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX89844C75777645D99431FAE1ADD9DA9A">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Functions = require(script:WaitForChild("Functions"))
Sparks = script:WaitForChild("Sparks")

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

Grips = {
	Unequipped = Tool.Grip,
	Equipped = Tool.Grip,
}

Animations = {
	Equip = {Animation = Tool:WaitForChild("Equip"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
	Fire = {Animation = Tool:WaitForChild("Fire"), FadeTime = nil, Weight = nil, Speed = 4, Duration = 0.75},
}

Sounds = {
	Fire = Handle:WaitForChild("Fire"),
	Reload = Handle:WaitForChild("Reload"),
}

Configuration = {
	Damage = {
		Base = 12,
		Distance = {Min = 0, Max = 0},
		Multiplier = 0,
		Critical = {Chance = 0, Damage = {Min = 0, Max = 0}},
	},
	--WindVec = Vector3.new(2, 1, 1).Unit,
	Automatic = true,
	Accuracy = 0.2,
	Spread = 1.25,
	Color = nil,
	ReloadTime = 6,
	Burst = 1,
	Range = 400,
	FadeRate = 0.25,
	Clips = {Amount = 45, Rate = 0.125},
	FiringOffset = CFrame.new(0, 0.5, -1.7),
}

Rate = (1 / 60)

ShotsFired = 0

Firing = false
MouseDown = false
ToolEquipped = false

Remotes = Tool:WaitForChild("Remotes")
ServerControl = (Remotes:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Remotes,
})
ClientControl = (Remotes:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Remotes,
})

for i, v in pairs(Tool:GetChildren()) do
	if v:IsA("BasePart") and v ~= Handle then
		v:Destroy()
	end
end

Handle.Transparency = 0
Tool.Grip = Grips.Unequipped
Tool.Enabled = true

function LaserTouched(Laser, Hit, StartPos, EndPos)
	if not Hit or not Hit.Parent then
		return
	end
	local character = Hit.Parent
	if character:IsA("Hat") or character:IsA("Tool") then
		character = character.Parent
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if humanoid and humanoid.Health > 0 then
		local torso = character:FindFirstChild("Torso")
		if not humanoid or humanoid.Health == 0 or not torso then
			return
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player and Functions.IsTeamMate(Player, player) then
			return
		end
		local RayDistance = (StartPos - EndPos).Magnitude
		local Damage = Configuration.Damage
		local DistanceDamage = Functions.Round(Functions.Clamp(Functions.GetPercentage(0, (Configuration.Range / 2), RayDistance), Damage.Distance.Min, Damage.Distance.Max), 0.5)
		local DeterminedDamage = (Damage.Base)
		DeterminedDamage = (DeterminedDamage + DistanceDamage)
		if Damage.Critical.Chance > 0.5 then
			local CriticalChance = math.random(1, Damage.Critical.Chance)
			if CriticalChance == 1 then
				DeterminedDamage = (DeterminedDamage + math.random(Damage.Critical.Damage.Min, Damage.Critical.Damage.Max))
			end
		end
		if Hit.Name == "Head" then
			DeterminedDamage = Functions.Clamp((DeterminedDamage * (1 + Damage.Multiplier)), 0, 100)
		end
		local HealthAfter = (humanoid.Health - DeterminedDamage)
		Functions.UntagHumanoid(humanoid)
		Functions.TagHumanoid(humanoid, Player)
		humanoid:TakeDamage(DeterminedDamage)
		if HealthAfter <= 0 then
		end
	else
		local ParticlePart = BasePart:Clone()
		ParticlePart.Name = "Effect"
		ParticlePart.Transparency = 1
		ParticlePart.Anchored = true
		ParticlePart.CanCollide = false
		local Color = Laser.BrickColor
		local Particles = Sparks:Clone()
		Particles.Color = ColorSequence.new(Color.Color, Color.Color)
		Particles.Enabled = true
		local Duration = Create("NumberValue"){
			Name = "Duration",
			Value = 0.5,
			Parent = Particles,
		}
		local ParticleScript = Particles:FindFirstChild("ParticleScript")
		if ParticleScript then
			ParticleScript.Disabled = false
		end
		Particles.Parent = ParticlePart
		Debris:AddItem(ParticlePart, 1.5)
		ParticlePart.Parent = game:GetService("Workspace")
		ParticlePart.CFrame = ((CFrame.new(EndPos, StartPos) * CFrame.new(0, ParticlePart.Size.Y, 0)) * CFrame.Angles(-(math.pi / 2), 0, 0))
	end
end

function Reload(Override)
	if not Override and not Tool.Enabled then
		return
	end
	Tool.Enabled = false
	Firing = false
	MouseDown = false
	wait(Configuration.ReloadTime / 2)
	local Sound = Sounds.Reload:Clone()
	Debris:AddItem(Sound, 1.5)
	Sound.Parent = Handle
	Sound:Play()
	wait(Configuration.ReloadTime / 2)
	ShotsFired = 0
	Tool.Enabled = true
end

function FireLaser(StartPosition, TargetPosition)
	local Direction = CFrame.new(StartPosition, TargetPosition)
	local Spread = (Configuration.Spread * 100)
	local SpreadVector = (Vector3.new(math.rad(math.random(-Spread, Spread)), math.rad(math.random(-Spread, Spread)), math.rad(math.random(-Spread, Spread))) * 0.01)
	Direction = (Direction * CFrame.Angles(SpreadVector.X, SpreadVector.Y, SpreadVector.Z)).lookVector
	local RayHit, RayPos, RayNormal = Functions.CastRay(StartPosition, Direction, Configuration.Range, {Character}, false)
	local RayLength = (StartPosition - RayPos).Magnitude
	Direction = CFrame.new(StartPosition, RayPos)
	local Accuracy = (Configuration.Accuracy * 100)
	TargetPosition = (TargetPosition + (Vector3.new(math.random(-Accuracy, Accuracy), math.random(-Accuracy, Accuracy), math.random(-Accuracy, Accuracy)) * 0.01))
	local Laser = BasePart:Clone()
	local FadeDuration = Configuration.FadeRate
	local FadeRate = 10
	local Laser = BasePart:Clone()
	Laser.Name = "Laser"
	Laser.BrickColor = (Configuration.Color or BrickColor.new(math.random(), math.random(), math.random()))
	Laser.Transparency = 0
	Laser.Material = Enum.Material.Neon
	Laser.Size = Vector3.new(0.2, 0.2, RayLength)
	Laser.CFrame = (Direction * CFrame.new(0, 0, -(RayLength / 2)))
	Laser.Anchored = true
	Laser.CanCollide = false
	local Mesh = Create("BlockMesh"){
		Name = "Mesh",
		Scale = Vector3.new(1, 1, 1),
		VertexColor = Vector3.new(1, 1, 1),
		Parent = Laser,
	}
	for i, v in pairs({"Top", "Bottom", "Left", "Right", "Front", "Back"}) do
		local Light = Create("SurfaceLight"){
			Name = "Light",
			Color = Laser.BrickColor.Color,
			Face = Enum.NormalId[v],
			Brightness = 100,
			Range = 3,
			Shadows = false,
			Enabled = true,
			Parent = Laser,
		}
	end
	local OrigCF = Laser.CFrame
	Laser.Size = Vector3.new(Laser.Size.X, Laser.Size.Z, Laser.Size.Y)
	Laser.CFrame = (OrigCF * CFrame.Angles((math.pi / 2), 0, 0))
	Debris:AddItem(Laser, FadeDuration)
	Laser.Parent = game:GetService("Workspace")
	LaserTouched(Laser, RayHit, StartPosition, RayPos)
	Spawn(function()
		local FadeRate = 0.05
		local TimeToFade = 1
		local OrigTransparency = Laser.Transparency
		local TotalFade = (TimeToFade / FadeRate)
		for i = 1, TotalFade do
			if not Laser or not Laser.Parent or Laser.Transparency >= 1 then
				break
			end
			wait(FadeRate)
			--Laser.CFrame = (Laser.CFrame + Configuration.WindVec * FadeRate)
			Laser.Transparency = (OrigTransparency + (i / (TimeToFade / FadeRate)))
			for ii, vv in pairs(Laser:GetChildren()) do
				if vv:IsA("Light") then
					vv.Brightness = (50 - (50 * (Functions.GetPercentage(0, 1, Laser.Transparency) * 0.01)))
					if vv.Brightness <= 0 then
						vv.Enabled = false
					end
				--[[elseif vv:IsA("DataModelMesh") then
					local NewScale = (1 - (1 * (Functions.GetPercentage(0, 1, Laser.Transparency) * 0.01)))
					vv.Scale = Vector3.new(NewScale, vv.Scale.Y, NewScale)]]
				end
			end
		end
	end)	
end

function Activated()
	if not Tool.Enabled or MouseDown or not CheckIfAlive() or Firing then
		return
	end
	Firing = true
	MouseDown = true
	while MouseDown and Firing do
		local MouseData = InvokeClient("MouseData")
		if not MouseDown or not CheckIfAlive() or not MouseData or not MouseData.Position then
			Firing = false
			MouseDown = false
			break
		end
		local Sound = Sounds.Fire:Clone()
		Debris:AddItem(Sound, 1.25)
		Sound.Parent = Handle
		Sound:Play()
		local StartPosition = (Handle.CFrame * Configuration.FiringOffset).p
		local TargetPosition = MouseData.Position
		local Direction = CFrame.new(StartPosition, TargetPosition).lookVector
		local Distance = (StartPosition - TargetPosition).Magnitude
		if Distance > Configuration.Range then
			TargetPosition = (CFrame.new(StartPosition) + Direction * Configuration.Range).p
		end
		Spawn(function()
			InvokeClient("PlayAnimation", Animations.Fire)
		end)
		for i = 1, Configuration.Burst do
			FireLaser(StartPosition, TargetPosition)
		end
		ShotsFired = (ShotsFired + 1)
		if ShotsFired >= Configuration.Clips.Amount then
			Reload(true)
			break
		else
			wait(Configuration.Clips.Rate)
		end
		if not Configuration.Automatic then
			Firing = false
			MouseDown = false
		end
	end
	Firing = false
	MouseDown = false
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	Tool.Grip = Grips.Equipped
	Spawn(function()
		local Limbs = {"Right Arm"}
		for i, v in pairs(Limbs) do
			local Limb = Character:FindFirstChild(v)
			Spawn(function()
				InvokeClient("SetLocalTransparencyModifier", {Object = Limb, Transparency = 0, AutoUpdate = true})
			end)
		end
		InvokeClient("PlayAnimation", Animations.Equip)
	end)
	Firing = false
	MouseDown = false
	ToolEquipped = true
end

function Unequipped()
	Tool.Grip = Grips.Unequipped
	Firing = false
	MouseDown = false
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
	if mode == "KeyPress" then
		local Key = value.Key
		local Down = value.Down
		if Key == "r" and Down then
			Reload(false)
		end
	elseif mode == "MouseDown" then
		local Down = value.Down
		MouseDown = (Down or false)
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="ParticleEmitter" referent="RBX55BC79A8C9F84B4E815C3ACAEB92DA93">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
					<float name="Drag">0</float>
					<token name="EmissionDirection">1</token>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">0.5 0.5 </NumberRange>
					<float name="LightEmission">1</float>
					<bool name="LockedToPart">false</bool>
					<string name="Name">Sparks</string>
					<float name="Rate">100</float>
					<NumberRange name="RotSpeed">0 0 </NumberRange>
					<NumberRange name="Rotation">0 0 </NumberRange>
					<NumberSequence name="Size">0 0.1 0 1 0.1 0 </NumberSequence>
					<NumberRange name="Speed">2.5 2.5 </NumberRange>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=277951744</url></Content>
					<NumberSequence name="Transparency">0 0.25 0 1 0.25 0 </NumberSequence>
					<float name="VelocityInheritance">0</float>
					<float name="VelocitySpread">25</float>
					<float name="ZOffset">0</float>
				</Properties>
				<Item class="Script" referent="RBX2203AACB611D4A96B49D2293288F3B42">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ParticleScript</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Particle = script.Parent

Duration = Particle:WaitForChild("Duration")

wait(Duration.Value)

Particle.Enabled = false
]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX02A55E09B2BC473DBE12E1CF8504941A">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Functions = {}

Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

function Functions.Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function Functions.GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Functions.Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
end

function Functions.CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end
	
function Functions.CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.lower(v) == string.lower(String) then
			return true
		end
	end
	return false
end
	
function Functions.CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or Functions.CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function Functions.CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and Functions.CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function Functions.TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end
	
function Functions.IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

return Functions]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX1AB09FF6E58A43329F5B1D4918293F0B">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX4095203D3BD14BB3A81192AB1F42690C">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputButton = Instance.new("Frame")
InputButton.Name = "InputMonitor"
InputButton.BackgroundTransparency = 1
InputButton.Size = UDim2.new(1, 0, 1, 0)
InputButton.Parent = InputCheck

Animations = {}
LocalObjects = {}

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseDown", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseDown", {Down = false})
	end)
	local PlayerGui = Player:FindFirstChild("PlayerGui")
	if PlayerGui then
		if UserInputService.TouchEnabled then
			InputCheckClone = InputCheck:Clone()
			InputCheckClone.InputMonitor.InputBegan:connect(function()
				InvokeServer("Button1Click", {Down = true})
			end)
			InputCheckClone.InputMonitor.InputEnded:connect(function()
				InvokeServer("Button1Click", {Down = false})
			end)
			InputCheckClone.Parent = PlayerGui
		end
	end
end

function Unequipped()
	ToolEquipped = false
	if InputCheckClone and InputCheckClone.Parent then
		InputCheckClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs(LocalObjects) do
		if v.Object then
			v.Object.LocalTransparencyModifier = 0
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	LocalObjects = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					local Camera = game:GetService("Workspace").CurrentCamera
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							local ViewDistance = (Camera.CoordinateFrame.p - Head.Position).Magnitude
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or CurrentTransparency == 0)) or v.AutoUpdate) then
								if ((v.Distance and ViewDistance <= v.Distance) or not v.Distance) then
									v.Object.LocalTransparencyModifier = v.Transparency
								else
									v.Object.LocalTransparencyModifier = 0
								end
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX27139559961E4766BD1DAB00178B5E96">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>-3.4010067</X>
					<Y>11.6738739</Y>
					<Z>0.725912929</Z>
					<R00>0.157120496</R00>
					<R01>0.0309227183</R01>
					<R02>-0.987095118</R02>
					<R10>-4.65661343e-010</R10>
					<R11>0.999509633</R11>
					<R12>0.0313116238</R12>
					<R20>0.987579525</R20>
					<R21>-0.00491969753</R21>
					<R22>0.157043427</R22>
				</CoordinateFrame>
				<float name="FieldOfView">45</float>
				<CoordinateFrame name="Focus">
					<X>-1.13068843</X>
					<Y>11.6018572</Y>
					<Z>0.364713132</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>