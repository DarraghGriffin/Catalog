<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX0">
		<Properties>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.300000012</Y>
				<Z>-0.699999988</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>-0</R02>
				<R10>0</R10>
				<R11>0</R11>
				<R12>-1</R12>
				<R20>0</R20>
				<R21>1</R21>
				<R22>-0</R22>
			</CoordinateFrame>
			<string name="Name">Atomizer</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=35231550</url></Content>
			<bool name="archivable">true</bool>
		</Properties>
		<Item class="LocalScript" referent="RBX1">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Local Gui</string>
				<ProtectedString name="Source">local Tool = script.Parent;

enabled = true
function onButton1Down(mouse)
	if not enabled then
		return
	end
	print(&quot;ending&quot;)
	enabled = false

	while Tool.Enabled do
		wait(.01)
	end

	print(&quot;Setting Mouse To Wait&quot;)
	mouse.Icon = &quot;rbxasset://textures\\GunWaitCursor.png&quot;

	while not Tool.Enabled do
		wait(.01)
	end

	print(&quot;Setting Mouse to Go&quot;)
	mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;

	enabled = true
end

function onEquippedLocal(mouse)

	if mouse == nil then
		print(&quot;Mouse not found&quot;)
		return 
	end

	mouse.Icon = &quot;rbxasset://textures\\GunCursor.png&quot;
	mouse.Button1Down:connect(function() onButton1Down(mouse) end)
end


Tool.Equipped:connect(onEquippedLocal)
</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX2">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-13.4999962</X>
					<Y>4.9000001</Y>
					<Z>-28</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>0</R11>
					<R12>1</R12>
					<R20>0</R20>
					<R21>-1</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<bool name="DraggingV1">false</bool>
				<float name="Elasticity">0.5</float>
				<token name="FormFactor">2</token>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<bool name="archivable">true</bool>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>0.800000012</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX3">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?versionid=87054449</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=35231521</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<bool name="archivable">true</bool>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Atomizer</string>
				<ProtectedString name="Source">local Tool = script.Parent;

Tool.Enabled = true

function spinParts()

	local vCharacter = Tool.Parent
	
	--local vParts = {vCharacter:FindFirstChild(&quot;Torso&quot;), vCharacter:FindFirstChild(&quot;Left Arm&quot;), vCharacter:FindFirstChild(&quot;Right Arm&quot;), vCharacter:FindFirstChild(&quot;Left Leg&quot;), vCharacter:FindFirstChild(&quot;Right Leg&quot;)}
	--local startPos = {vParts[1].Position, vParts[2].Position, vParts[3].Position, vParts[4].Position, vParts[5].Position}
	--local startFrames = {vParts[1].CFrame, vParts[2].CFrame, vParts[3].CFrame, vParts[4].CFrame, vParts[5].CFram
	local vParts = {vCharacter:FindFirstChild(&quot;Torso&quot;), vCharacter:FindFirstChild(&quot;Head&quot;), vCharacter:FindFirstChild(&quot;Left Arm&quot;), vCharacter:FindFirstChild(&quot;Right Arm&quot;), vCharacter:FindFirstChild(&quot;Left Leg&quot;), vCharacter:FindFirstChild(&quot;Right Leg&quot;)}

	for i = 2,#vParts do
		myPart = vParts[i]
		if myPart ~= nil then
			myPart.Transparency = 1
			myPart.CanCollide = false
		else
			print(i)
		end
	end

	local clonedParts = {}

	--just need to add hats to dummy head	
	newHats = {}
	newHatTransforms = {}
	oldHats = {}
	charParts = vCharacter:GetChildren()
	numHatsSoFar = 1
	for i = 1,#charParts do
		if charParts[i].className == &quot;Hat&quot; then
			myHat = charParts[i]
			newHandle = myHat.Handle:Clone()
			newHandle.Parent = vCharacter
			newHats[numHatsSoFar] = newHandle
			oldHats[numHatsSoFar] = myHat.Handle

			--newHatTransforms[numHatsSoFar] = myHat.Handle.CFrame:inverse()*vParts[2].CFrame
			--newHatTransforms[numHatsSoFar] = myHat.Handle.CFrame*(vParts[2].CFrame:inverse())
			newHatTransforms[numHatsSoFar] = vParts[2].CFrame:inverse()*myHat.Handle.CFrame
			newHats[numHatsSoFar].Anchored = true

			myHat.Handle.Transparency = 1
			numHatsSoFar = numHatsSoFar + 1
		end
	end

--	for i = 1,#vParts do
	randAng = math.random()*2*math.pi
	for i = 2,#vParts do
		myPart = vParts[i]
		if myPart ~= nil then
			clonedParts[i] = myPart:Clone()
			clonedParts[i].CanCollide = true
			clonedParts[i].Transparency = 0
			clonedParts[i].Parent = vCharacter
			newBP = Instance.new(&quot;BodyPosition&quot;)
			newBP.Parent = clonedParts[i]
			newBP.position = vParts[1].Position+(i-1)*Vector3.new(0,1,0)+i*2*Vector3.new(math.sin(randAng+i/2), 0, math.cos(randAng+i/2))
		end
	end

	-- and one more for the Torso
	newBP = Instance.new(&quot;BodyPosition&quot;)
	newBP.Parent = vParts[1]
	newBP.position = vParts[1].Position+Vector3.new(0,6,0) -- was 6
	newBP.maxForce = Vector3.new(0,10000,0)

	myFace = vCharacter.Head.face
	myFace.Parent = nil
	--oldFace = vCharacter.Head.face
	--vCharacter.Head.face.Texture = &quot;http://www.roblox.com/asset/?id=0&quot;

	--vParts[1].Name = &quot;A&quot;
	--vParts[2].Name = &quot;B&quot;
	vParts[3].Name = &quot;C&quot;
	vParts[4].Name = &quot;D&quot;
	vParts[5].Name = &quot;E&quot;
	vParts[6].Name = &quot;F&quot;
	--vParts[1].CFrame = vParts[1].CFrame + Vector3.new(0,10,0)
	
	-- float the limbs to the workspace
	vParts[3].Parent = vCharacter.Parent
	vParts[4].Parent = vCharacter.Parent
	vParts[5].Parent = vCharacter.Parent
	vParts[6].Parent = vCharacter.Parent

	
	for j = 1,20 do --1 to 20

		--below function will put hats on top of dummy head
		--do hat calcs first, for less lag there
			--if j &lt;= 10 then clonedParts[2].BodyPosition.position = vParts[1].Position+Vector3.new(0,1,0)+4*Vector3.new(math.sin(randAng+1), 0, math.cos(randAng+1)) end
			--if j == 15 then vParts[1].BodyPosition.Parent = nil end
			--if j &gt; 15 then clonedParts[2].BodyPosition.position = vParts[2].Position
			--elseif j &gt; 10 then clonedParts[2].BodyPosition.position = vParts[1].Position+Vector3.new(0,2-j/10,0)+4*(2-j/10)*Vector3.new(math.sin(randAng+1), 0, math.cos(randAng+1)) end

		cloneHead = clonedParts[2]
		for i = 1,#newHats do
			--newHats[i].CFrame = CFrame.new(cloneHeadPos)*CFrame.Angles(0,0,0)
			--newHats[i].CFrame = newHatTransforms[i]*cloneHead.CFrame
			newHats[i].CFrame = cloneHead.CFrame*newHatTransforms[i]
		end

		randAng = randAng + .5
		for i = 2,#vParts do
			--randArg was here, and i went from 2 to #vParts
			if j &lt;= 10 then clonedParts[i].BodyPosition.position = vParts[1].Position+(i-1)*Vector3.new(0,1,0)+i*2*Vector3.new(math.sin(randAng+i/2), 0, math.cos(randAng+i/2)) end
			if j == 15 and i == 2 then vParts[1].BodyPosition.Parent = nil end
			if j &gt; 15 then clonedParts[i].BodyPosition.position = vParts[i].Position
			elseif j &gt; 10 then clonedParts[i].BodyPosition.position = vParts[1].Position+(i-1)*Vector3.new(0,2-j/10,0)+i*2*(2-j/10)*Vector3.new(math.sin(randAng+i/2), 0, math.cos(randAng+i/2)) end
		end

		angle = 2*j*math.pi/5
		--Tool.GripRight = Vector3.new(math.cos(angle),math.sin(angle),0)
		--Tool.GripForward = Vector3.new(-math.sin(angle),math.cos(angle),0)
		Tool.GripRight = Vector3.new(math.cos(angle),0,-math.sin(angle))
		Tool.GripUp = Vector3.new(math.sin(angle),0,math.cos(angle))
		--if j &lt;= 10 then Tool.GripPos = Vector3.new(0, 0.7, -.3+j/5+2) end
		if j &lt;= 10 then Tool.GripPos = Vector3.new(0, 0.7, -.3+j/5+.6) end
		--if j &gt; 10 then Tool.GripPos = Vector3.new(0,0.7-.1*(j-10),3.7-.3*(j-10)) end
		if j &gt; 10 then Tool.GripPos = Vector3.new(0,0.7-.1*(j-10),2.3-.3*(j-10)) end

	wait(.05)

	end

		--if charParts[i].className == &quot;CharacterMesh&quot; then
			--for j = 1,#vParts do
				--print(tostring(charParts[i].BodyPart))
				--if vParts[j].Name == tostring(charParts[i].BodyPart) then
					--charParts[i].BodyPart = clonedParts[j]
				--end
			--end
		--end
	--end

	--for i = 1, #charParts do
	--	if charParts[i].className == &quot;CharacterMesh&quot; then
	--		for j = 1, #vParts do
	--			if vParts[j].Name == tostring(charParts[i].BodyPart) then
	--				charParts[i].BodyPart = vParts[j]
	--			end
	--		end
	--	end
	--end

	--vParts[1].Name = &quot;Head&quot;
	--vParts[2].Name = &quot;Torso&quot;
	vParts[3].Name = &quot;Left Arm&quot;
	vParts[4].Name = &quot;Right Arm&quot;
	vParts[5].Name = &quot;Left Leg&quot;
	vParts[6].Name = &quot;Right Leg&quot;

	-- bring back mah limbs
	vParts[3].Parent = vCharacter
	vParts[4].Parent = vCharacter
	vParts[5].Parent = vCharacter
	vParts[6].Parent = vCharacter

	-- if right hand clone has stuff, transfer over to true right hand
	grabbedStuff = clonedParts[4]:GetChildren()
	for i = 1,#grabbedStuff do
		if (grabbedStuff[i].Name == &quot;RightGrip&quot;) then 
			print(&quot;Grabbed Something&quot;)
			grabbedStuff[i].Part0 = vParts[4]
			grabbedStuff[i].Parent = vParts[4]
		end
	end

	for i = 2,#vParts do
		clonedParts[i].Parent = nil
	end

	print(&quot;making visible&quot;)
	for i = 1,#vParts do
		vParts[i].Transparency = 0
		vParts[i].CanCollide = true
	end
	myFace.Parent = vCharacter.Head -- put back face
	for i = 1,#newHats do
		newHats[i].Parent = nil
	end
	for i = 1,#oldHats do
		oldHats[i].Transparency = 0
	end
end



function atomSpin()
	for i = 1,20 do
		angle = i*math.pi/5
		Tool.GripRight = Vector3.new(math.cos(angle),math.sin(angle),0)
		Tool.GripForward = Vector3.new(-math.sin(angle),math.cos(angle),0)
		Tool.GripPos = Vector3.new(0, -.3+i/10, -0.7)
		wait(.02)
	end
end

function gunOut()
	Tool.GripForward = Vector3.new(0,1,0)
	Tool.GripRight = Vector3.new(1,0,0)
	Tool.GripUp = Vector3.new(0,0,1)
end


function onActivated()
	if not Tool.Enabled  then
		return
	end

	Tool.Enabled = false


	local character = Tool.Parent;
	local humanoid = character.Humanoid
	if humanoid == nil then
		print(&quot;Humanoid not found&quot;)
		return 
	end

	local targetPos = humanoid.TargetPoint
	local lookAt = (targetPos - character.Head.Position).unit

	local reload = 3

	atomo = Tool.Parent:FindFirstChild(&quot;AtomoSound&quot;)
	if atomo == nil then
		atomo = Instance.new(&quot;Sound&quot;)
		atomo.Name = &quot;AtomoSound&quot;
		atomo.Volume = .9
		atomo.SoundId = &quot;http://www.roblox.com/asset/?id=35275769&quot;
		atomo.Parent = Tool.Parent
	end

	atomo:Play()

	atomSpin()
	spinParts()
	--atomGetBack()
	wait(reload)

	Tool.Enabled = true

end

script.Parent.Activated:connect(onActivated)
</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>