<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX5A8F92CE38E3469B823565AF00B95E61">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.5</Y>
				<Z>1</Z>
				<R00>1</R00>
				<R01>4.16901021e-005</R01>
				<R02>-1.11593217e-005</R02>
				<R10>-1.11583468e-005</R10>
				<R11>0.499533653</R11>
				<R12>0.866294622</R12>
				<R20>4.16903604e-005</R20>
				<R21>-0.866294622</R21>
				<R22>0.499533623</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">LuckyThrowingAxes</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=380167260</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Animation" referent="RBXBF40B58A1FE547878D17488760335CF1">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=315464872</url></Content>
				<string name="Name">Equip</string>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX031D9B2C2C0B47E89F0DF5C192DB0612">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">26</int>
				<CoordinateFrame name="CFrame">
					<X>-1.65211928</X>
					<Y>2.9781549</Y>
					<Z>2.7440896</Z>
					<R00>-0.547620535</R00>
					<R01>-0.696203947</R01>
					<R02>0.464113176</R02>
					<R10>-0.708429694</R10>
					<R11>0.0906459093</R11>
					<R12>-0.699931741</R12>
					<R20>0.445228398</R20>
					<R21>-0.712093472</R21>
					<R22>-0.542847872</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>-1.40129846e-045</X>
					<Y>0</Y>
					<Z>-1.40129846e-045</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>3</Y>
					<Z>1.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX12C3636610C24F00A08E961874E6BE9C">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=380167105</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.10000002</X>
						<Y>1.10000002</Y>
						<Z>1.10000002</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=380167210</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX987FD701E00C4347A393B58ADEC9CC4F">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Unsheath</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1.125</float>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222225</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.5</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXAE4CEBDCAC1B49D29C4BD9C4FD9EDAC6">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Throw</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1</float>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=105420672</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX9048349C68F74C65B0E8ECEF615DD0BE">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">HitGround</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">0.600000024</float>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=120767420</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3A16285941F6450C9DCF129B9F7A5430">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1</float>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=240899049</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.5</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXFE5980F4BE644DC986E303B262A352F8">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid">{5FEA4D3E-80D8-4231-BE75-4B4887F5FC22}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	ToolEquipped = false
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs(LocalObjects) do
		if v.Object then
			v.Object.LocalTransparencyModifier = 0
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	LocalObjects = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					local Camera = game:GetService("Workspace").CurrentCamera
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							local ViewDistance = (Camera.CoordinateFrame.p - Head.Position).Magnitude
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or CurrentTransparency == 0)) or v.AutoUpdate) then
								if ((v.Distance and ViewDistance <= v.Distance) or not v.Distance) then
									v.Object.LocalTransparencyModifier = v.Transparency
								else
									v.Object.LocalTransparencyModifier = 0
								end
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	elseif mode == "SetCameraOffset" and value then
		pcall(function()
			Humanoid.CameraOffset = value
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX2D32D453DB8C4D709BF073B7A23DAAE9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXE163D9D0A571466AB959B8439E891590">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=317449706</url></Content>
				<string name="Name">Throw</string>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX3EE9DAADCB234517ADFC84172FF1A058">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid">{AC4B30C8-2DD5-4159-B246-22F9C1E82D16}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer
--Updated for R15 avatar by StarWars

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

HitScript = script:WaitForChild("HitScript")

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Anchored = false,
	CanCollide = true,
	Locked = true,
}

Animations = {
	Equip = {Animation = Tool:WaitForChild("Equip"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
	Throw = {Animation = Tool:WaitForChild("Throw"), FadeTime = 0, Weight = nil, Speed = 3, Duration = nil},
	R15Equip = {Animation = Tool:WaitForChild("R15Equip"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
	R15Throw = {Animation = Tool:WaitForChild("R15Throw"), FadeTime = 0, Weight = nil, Speed = 3, Duration = nil},	
}

Sounds = {
	Unsheath = Handle:WaitForChild("Unsheath"),
	Throw = Handle:WaitForChild("Throw"),
}

Gravity = 196.20
Rate = (1 / 60)

ReloadTime = 3

ToolEquipped = false

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

for i, v in pairs(Tool:GetChildren()) do
	if v:IsA("BasePart") and v ~= Handle then
		v:Destroy()
	end
end

Handle.Transparency = 0
Tool.Enabled = true

function CreateDualWield()
	if FakeHandle and FakeHandle.Parent then
		FakeHandle:Destroy()
	end
	local LeftArm = Character:FindFirstChild("Left Arm") or Character:FindFirstChild("LeftLowerArm")
	if LeftArm then
		FakeHandle = Handle:Clone()
		FakeHandle.Name = "FakeHandle"
		local LeftGrip = Create("Weld"){
			Part0 = LeftArm,
			Part1 = FakeHandle,
			C0 = CFrame.new(0, -1, 0, 1, 0, -0, 0, 0, 1, 0, -1, -0),
			C1 = (Tool.Grip * CFrame.Angles(0, 0, 0)),
			Parent = FakeHandle,
		}
		FakeHandle.Parent = Tool
	end
end

function ThrowObjects(Parts, TargetPosition)
	if not Parts or not TargetPosition then
		return
	end
	
	local HeightMultiplier = (math.random() - 0.85)
	local Alpha = (HeightMultiplier * math.pi / 8 + math.pi / 3)
	
	for i, v in pairs(Parts) do	
		
		local Axe = v:Clone()
		
		for i, v in pairs(Axe:GetChildren()) do
			if v:IsA("JointInstance") then
				v.Part0 = nil
				v.Part1 = nil
				v:Destroy()
			end
		end	
		
		Axe.Name = "ThrowingAxe"
		Axe.Size = (Axe.Size * Vector3.new(1, 2, 1.5))
		Axe.CanCollide = true
		Axe.Transparency = 0
		Axe.CFrame = v.CFrame
		Axe.Friction = 1
		Axe.Elasticity = 0
		Debris:AddItem(Axe, 8)
		Axe.Parent = game:GetService("Workspace")

		local SpawnPosition = ((v.CFrame + Vector3.new(0, 2, 0)) + Torso.CFrame.lookVector * (v.Size.Z * 2.5))		
		local DirectionPos = (TargetPosition - v.Position)
		DirectionPos = (DirectionPos - DirectionPos.Unit * 5)
		--Convert to a 2D space
		local DeltaXZSquared = (DirectionPos.X * DirectionPos.X + DirectionPos.Z * DirectionPos.Z)
		local DeltaXZ = math.sqrt(DeltaXZSquared)
		local DeltaY = DirectionPos.Y
		Axe.CFrame = CFrame.new(SpawnPosition.p, Vector3.new(TargetPosition.X, SpawnPosition.p.Y, TargetPosition.Z))
		--Back-solve for the velocity required to hit the target point
		local Gravity = 196.1643
		local Numerator = (-0.5 * Gravity * DeltaXZSquared)
		local Denominator = (math.cos(Alpha) * math.cos(Alpha) * (DeltaY - math.tan(Alpha) * DeltaXZ))
		if Denominator == 0 then
			return
		end
		local MaxSpeed = 300
		local Speed = math.sqrt(Numerator / Denominator)
		Speed = ((Speed > MaxSpeed and MaxSpeed) or Speed)
		local VectorXZ = (Speed * math.cos(Alpha))
		local VectorY = (Speed * math.sin(Alpha))
		local VectorX = (VectorXZ * DirectionPos.X / DeltaXZ)
		local VectorZ = (VectorXZ * DirectionPos.Z / DeltaXZ)
		Axe.Velocity = Vector3.new(VectorX, VectorY, VectorZ)
		--Axe.RotVelocity = Vector3.new((math.random(-360, 360) * 0.01), (math.random(-360, 360) * 0.01), (math.random(-360, 360) * 0.01))
		
		local Mass = (Axe:GetMass() * Gravity)
		local Gyro = Create("BodyGyro"){
			maxTorque = Vector3.new(0, math.huge, 0),
			cframe = Axe.CFrame,
			Parent = Axe,
		}
		local Velocity = ((Axe.CFrame * CFrame.Angles(0, (math.pi / 2), 0)).lookVector * 20)
		local RotVelocity = Create("BodyAngularVelocity"){
			maxTorque = Vector3.new(Mass, Mass, Mass),
			angularvelocity = Velocity,
			Parent = Axe,
		}
		local Values = {
			{Name = "Creator", Value = Player, Class = "ObjectValue"},
			{Name = "Damage", Value = 28, Class = "NumberValue"},
		}
		for i, v in pairs(Values) do
			local Creator = Create(v.Class){
				Name = v.Name,
				Value = v.Value,
				Parent = Axe,
			}
		end
		
		local HitScriptCopy = HitScript:Clone()
		HitScriptCopy.Disabled = false
		HitScriptCopy.Parent = Axe
		
	end
end

function Activated()
	local MouseData = InvokeClient("MouseData")
	if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() or not MouseData or not MouseData.Position then
		return
	end
	local MousePosition = MouseData.Position
	if (Handle.Position - MousePosition).Magnitude > 200 then
		return
	end
	Tool.Enabled = false
	Sounds.Throw:Play()
	Spawn(function()
		if Humanoid then
			if Humanoid.RigType == Enum.HumanoidRigType.R6 then
 				InvokeClient("PlayAnimation", Animations.Throw)
			elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
				InvokeClient("PlayAnimation", Animations.R15Throw)
			end	
		end	
	end)
	local Objects = {Handle, FakeHandle}
	for i, v in pairs(Objects) do
		v.Transparency = 1
	end
	ThrowObjects(Objects, MousePosition)
	wait(ReloadTime)
	for i, v in pairs(Objects) do
		v.Transparency = 0
	end
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")
	if not CheckIfAlive() then
		return
	end
	Sounds.Unsheath:Play()
	Spawn(function()
		CreateDualWield()
		local Limbs = {}
		if Humanoid then
			if Humanoid.RigType == Enum.HumanoidRigType.R6 then
				Limbs = {"Left Arm", "Right Arm"}
			elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
				Limbs = {"LeftLowerArm", "LeftUpperArm", "LeftHand", "RightHand", "RightLowerArm", "RightUpperArm"}
			end
		end
		for i, v in pairs(Limbs) do
			local Arm = Character:FindFirstChild(v)
			if Arm then
				Spawn(function()
					InvokeClient("SetLocalTransparencyModifier", {Object = Arm, Transparency = 0, AutoUpdate = false})
				end)
			end
		end
		if Humanoid then
			if Humanoid.RigType == Enum.HumanoidRigType.R6 then
 				InvokeClient("PlayAnimation", Animations.Equip)
			elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
				InvokeClient("PlayAnimation", Animations.R15Equip)
			end	
		end
	end)
	ToolEquipped = true
end

function Unequipped()
	if FakeHandle and FakeHandle.Parent then
		FakeHandle:Destroy()
	end
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
	if Mode == "KeyPress" then
		local Key = Value.Key
		local Down = Value.Down
		if Key == "q" then
		end
	end
end)

Tool.Changed:connect(function(Property)
	if Property == "Parent" then
		for i, v in pairs({Handle, FakeHandle}) do
			if v and v.Parent then
				v.Transparency = (((Tool.Parent:IsA("Backpack") or Players:GetPlayerFromCharacter(Tool.Parent)) and ((Tool.Enabled and 0) or 1)) or 0)
			end
		end
	end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX39DBBE3896A94A7F901FBBB06C968DBF">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Throw</string>
					<string name="ScriptGuid">{88B4EE00-9B99-48EE-AA3B-F0555A6BF27B}</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

--[[local MaxDistance = 150
local StartPosition = Handle.Position
local Direction = CFrame.new(StartPosition, Vector3.new(TargetPosition.X, StartPosition.Y, TargetPosition.Z))
local SpawnPosition = ((CFrame.new(StartPosition) * CFrame.Angles(Axe.CFrame:toEulerAnglesXYZ())) + Direction.lookVector * Axe.Size.Z * 2)
local Distance = (StartPosition - TargetPosition).Magnitude
if Distance > MaxDistance then
	TargetPosition = (SpawnPosition + Direction.lookVector * MaxDistance)
	Distance = MaxDistance
end
local Velocity = Distance	
local ThrowVelocity = ((Direction.lookVector * Velocity) + Vector3.new(0, (Distance * 1), 0))
--Axe.CFrame = SpawnPosition
Axe.Velocity = ThrowVelocity
--Axe.RotVelocity = Vector3.new((math.random(-360, 360) * 0.01), (math.random(-360, 360) * 0.01), (math.random(-360, 360) * 0.01))]]

--[[local MaxDistance = 150
local Direction = (TargetPosition - Axe.Position)
local Distance = Direction.Magnitude
if Distance >= MaxDistance then
	Distance = 300
	TargetPosition = (CFrame.new(Axe.Position, TargetPosition).lookVector * Distance)
	Direction = (TargetPosition - Axe.Position)
end
Direction = (Direction - Direction.Unit * 5)
local DeltaXZSquared = (Direction.X * Direction.X + Direction.Z * Direction.Z)
local DeltaXZ = math.sqrt(DeltaXZSquared)
local DeltaY = Direction.Y
local Alpha = (math.random() * math.pi / 4 + math.pi / 8)
local Numerator = (-0.5 * Gravity * DeltaXZSquared)
local Denominator = (math.cos(Alpha) * math.cos(Alpha) * (DeltaY - math.tan(Alpha) * DeltaXZ))
if Denominator == 0 then
	return
end
local Speed = math.sqrt(Numerator / Denominator)
Speed = ((Speed > MaxSpeed and MaxSpeed) or Speed)
local VectorXZ = (Speed * math.cos(Alpha))
local VectorY = (Speed * math.sin(Alpha))
local VectorX = (VectorXZ * Direction.X / DeltaXZ)
local VectorZ = (VectorXZ * Direction.Z / DeltaXZ)
Axe.Velocity = Vector3.new(VectorX, VectorY, VectorZ)]]]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="Script" referent="RBX4384DFF24F3648EF9BAC82D4723C5A56">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">HitScript</string>
					<string name="ScriptGuid">{95B7EEE2-210B-4760-8CFF-48B288724226}</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Part = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Functions = require(script:WaitForChild("Functions"))

Creator = Part:WaitForChild("Creator")
Damage = Part:WaitForChild("Damage")

Sounds = {
	Hit = Part:WaitForChild("Hit"),
	HitGround = Part:WaitForChild("HitGround"),
}

AlreadyHit = false

function GetCreator()
	return (((Creator and Creator.Value and Creator.Value:IsA("Player")) and Creator.Value) or nil)
end

Part.Touched:connect(function(Hit)
	if not Hit or not Hit.Parent or AlreadyHit or Hit.Name == Part.Name then
		return
	end
	local CreatorPlayer = GetCreator()
	local character = Hit.Parent
	if character:IsA("Hat") or character:IsA("Tool") then
		character = character.Parent
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if humanoid and humanoid.Health > 0 then
		local player = Players:GetPlayerFromCharacter(character)
		if player and player == CreatorPlayer then
			return
		end
		if player and CreatorPlayer and Functions.IsTeamMate(CreatorPlayer, player) then
		else
			Functions.UntagHumanoid(humanoid)
			if CreatorPlayer then
				Functions.TagHumanoid(humanoid, CreatorPlayer)
			end
			humanoid:TakeDamage(Damage.Value)
		end
		Sounds.Hit:Play()
	else
		Sounds.HitGround:Play()
	end
	AlreadyHit = true
end)]]></ProtectedString>
				</Properties>
				<Item class="ModuleScript" referent="RBXFEE75CE8A8EE4B5EB15A013859379465">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Functions</string>
						<string name="ScriptGuid">{66802B4A-DE02-42F4-861B-7FCCB02B11A9}</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Functions = {}

function Functions.Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function Functions.GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Functions.Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
end

function Functions.IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Functions.TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Functions.GetAllConnectedParts(Object)
	local Parts = {}
	local function GetConnectedParts(Object)
		for i, v in pairs(Object:GetConnectedParts()) do
			local Ignore = false
			for ii, vv in pairs(Parts) do
				if v == vv then
					Ignore = true
				end
			end
			if not Ignore then
				table.insert(Parts, v)
				GetConnectedParts(v)
			end
		end
	end
	GetConnectedParts(Object)
	return Parts
end

function Functions.CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function Functions.CheckIntangible(Hit)
	local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Bullet"}
	if Hit and Hit.Parent then
		if ((not Hit.CanCollide or Functions.CheckTableForString(ProjectileNames, Hit.Name)) and not Hit.Parent:FindFirstChild("Humanoid")) then
			return true
		end
	end
	return false
end

function Functions.CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal, RaySurface = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and Functions.CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal, RaySurface = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal, RaySurface
end

return Functions]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Part" referent="RBX340562AC322B495497CA6A519295650C">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">26</int>
				<CoordinateFrame name="CFrame">
					<X>1.83463717</X>
					<Y>3.23429608</Y>
					<Z>0.702112734</Z>
					<R00>-0.547737479</R00>
					<R01>-0.46457848</R01>
					<R02>-0.695809245</R02>
					<R10>-0.708321452</R10>
					<R11>0.700111687</R11>
					<R12>0.09013585</R12>
					<R20>0.445268989</R20>
					<R21>0.542227387</R21>
					<R22>-0.712548256</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">FakeHandle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>-1.40129846e-045</X>
					<Y>0</Y>
					<Z>-1.40129846e-045</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>3</Y>
					<Z>1.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXF3772D7960B84AFBB4D02C6DE416112F">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=380167105</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.10000002</X>
						<Y>1.10000002</Y>
						<Z>1.10000002</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=380167210</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX9C457191C3B843D69F3AC06819B49A99">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Unsheath</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1.125</float>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222225</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.5</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX5F3407EF0FEF44B3A832ADC646EBDF60">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Throw</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1</float>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=105420672</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX413BF8331BC842B794E81240BF7B8CC3">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">HitGround</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">0.600000024</float>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=120767420</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX74688BD6B2BA45A78FD0A2738F7B881F">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1</float>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=240899049</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.5</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXAE3E1CE635714A0ABD62AE3D51F60B30">
			<Properties>
				<Content name="AnimationId"><url>rbxassetid://517941863</url></Content>
				<string name="Name">R15Equip</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX7492D028E8E74022A137FD74DCED4437">
			<Properties>
				<Content name="AnimationId"><url>rbxassetid://517939634</url></Content>
				<string name="Name">R15Throw</string>
			</Properties>
		</Item>
	</Item>
</roblox>