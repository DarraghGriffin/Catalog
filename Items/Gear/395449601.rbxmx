<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX62899CB72AD84A5286F0F4F462403C22">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>4.25</X>
				<Y>1.74000001</Y>
				<Z>-0.800000012</Z>
				<R00>0.999999881</R00>
				<R01>3.0524563e-005</R01>
				<R02>-0.000457763206</R02>
				<R10>-3.05105932e-005</R10>
				<R11>1</R11>
				<R12>3.0524563e-005</R12>
				<R20>0.000457764138</R20>
				<R21>-3.05105932e-005</R21>
				<R22>0.999999881</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">RedcliffDogCompanion</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=395199546</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="LocalScript" referent="RBXAF5A35E1989240298527BE4A4FD205FE">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXF7A945FF73C84EAAB306406B2FB5AA6E">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-10.8346062</X>
					<Y>1.67665076</Y>
					<Z>-0.0480845608</Z>
					<R00>0.76703012</R00>
					<R01>-0.000774654211</R01>
					<R02>0.641600847</R02>
					<R10>0.00100379752</R10>
					<R11>0.999999523</R11>
					<R12>7.35200592e-006</R12>
					<R20>-0.64160049</R20>
					<R21>0.000638415571</R21>
					<R22>0.767030478</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>3.375</Y>
					<Z>4.75</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX74A49D8F04FC4D4FB74259AC5C01D478">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=395460295</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=395199455</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBXFE2A5EDDDBAC4BA2AB474D54A3584E37">
			<Properties>
				<string name="Name">Remotes</string>
			</Properties>
			<Item class="RemoteFunction" referent="RBXCB83BE0D2CAE49108F5F06A136AEF433">
				<Properties>
					<string name="Name">ServerControl</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXF939026BE5724854869C88561D8B4BA2">
				<Properties>
					<string name="Name">ClientControl</string>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX956C0AFADAF1442DBFA320D9024B77CA">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
end

function Unequipped()
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode then
		return
	end
	if mode == "MouseData" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX6F1EC39024464B3AA783A94B868223E4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid">{9B0A8079-613F-4CB6-97B4-6F644ECEC002}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer
--Updated for R15 avatar by StarWars

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
InsertService = game:GetService("InsertService")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Remover = script:WaitForChild("Remover")

NPCModule = require(191816425)

BaseUrl = "http://www.roblox.com/asset/?id="

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
	Anchored = false,
}

ReloadTime = 25
Duration = (60 * 5)

DogSpawned = false
DogReady = false

CurrentDog = {}

ToolEquipped = false

Remotes = (Tool:FindFirstChild("Remotes") or Create("Folder"){
	Name = "Remotes",
	Parent = Tool,
})
ServerControl = (Remotes:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Remotes,
})

ClientControl = (Remotes:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Remotes,
})

Handle.Transparency = 0
Tool.Enabled = true

function CreateDogModel()
	local DogModel = Create("Model"){
		Name = ToolName,
	}
	local RemoverClone = Remover:Clone()
	local Values = {
		{Name = "Creator", Class = "ObjectValue", Value = Player},
		{Name = "Tool", Class = "ObjectValue", Value = Tool},
	}
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = DogModel,
		}
	end
	RemoverClone.Disabled = false
	RemoverClone.Parent = DogModel
	return DogModel
end

function SetUpDog(Figure)
	Figure.Name = "RedcliffDog"
	local Humanoid = Figure:FindFirstChild("Humanoid")
	local Torso = Figure:FindFirstChild("Torso") or Figure:FindFirstChild("UpperTorso")
	if Humanoid and Torso then
		Humanoid.Died:connect(function()
			Debris:AddItem(Figure, 2)
		end)
		Humanoid.Jumping:connect(function()
		end)
		Figure.Changed:connect(function(Property)
			if Property == "Parent" and not Figure.Parent then
				Debris:AddItem(Figure, 2)
			end
		end)
	end
	return Figure
end

function SpawnDog()
	if DogSpawned then
		return
	end
	for i, v in pairs(game:GetService("Workspace"):GetChildren()) do
		if v:IsA("Model") and v.Name == ToolName then
			v:Destroy()
		end
	end
	Handle.Transparency = 1
	DogSpawned = true
	local NPCData = NPCModule.GetTable({Key = "MakeNPC", Player = Player})
	local RedcliffDogData = NPCModule.GetTable({Key = "RedcliffDog", Player = Player})
	if not NPCData or not RedcliffDogData then
		return
	end
	local NPCFunctions = NPCData.GetData({Player = Player, Tool = Tool})
	local RedcliffDogFunctions = RedcliffDogData.GetData({Player = Player, Tool = Tool})
	DogReady = false
	CurrentDog = {}
	local DogModel = CreateDogModel()
	--NPCFunctions.MakeNPC({NPC = DogModel, AIControl = {Creator = Player, SelfSufficient = true}})
	local RedcliffDogNPC = RedcliffDogFunctions.MakeNPC()
	if not RedcliffDogNPC then
		return
	end
	local BaseNPC = SetUpDog(RedcliffDogNPC:Clone())
	DogModel.Changed:connect(function(Property)
		if Property == "Parent" and not DogModel.Parent then
			for i, v in pairs(CurrentDog) do
				if v and v.Parent then
					v:Destroy()
				end
			end
			CurrentDog = {}
			Tool.Enabled = false
			wait(ReloadTime)
			Tool.Enabled = true
			Handle.Transparency = 0
			DogSpawned = false
			if ToolEquipped and CheckIfAlive() then
				SpawnDog()
			end
		end
	end)	
	Debris:AddItem(DogModel, Duration)
	DogModel.Parent = game:GetService("Workspace")
	local function CreatePawn()
		local DogCopy = BaseNPC:Clone()
		local DogHumanoid = DogCopy.Humanoid
		local DogTorso = DogCopy.Torso
		table.insert(CurrentDog, DogCopy)
		DogCopy.Changed:connect(function(Property)
			if Property == "Parent" and not DogCopy.Parent then
				for i, v in pairs(CurrentDog) do
					if v == DogCopy then
						table.remove(CurrentDog, i)
						if #CurrentDog == 0 then
							if DogModel and DogModel.Parent then
								Debris:AddItem(DogModel, 1)
								DogModel:Destroy()
							end
						end
					end
				end
			end
		end)
		local DesiredOffset = Vector3.new(-3.75, 0, 0)
		DogCopy.Offset.Value = DesiredOffset
		DogCopy.Parent = DogModel
		DogTorso.CFrame = (Torso.CFrame * CFrame.new(DesiredOffset) - Vector3.new(0, 0.2, 0))
		DogHumanoid:ChangeState(Enum.HumanoidStateType.Freefall)
	end
	CreatePawn()
	DogReady = true
end

function Activated()
	if not Tool.Enabled or not ToolEquipped then
		return
	end
	local RedcliffDogModel = game:GetService("Workspace"):FindFirstChild(ToolName)
	if RedcliffDogModel then
		local MouseData = InvokeClient("MouseData")
		if not MouseData then
			return
		end
		local MousePosition = MouseData.Position
		if not MousePosition then
			return
		end
		local MouseTarget = MouseData.Target
		for i, v in pairs(CurrentDog) do
			if v and v.Parent then
				local TargetPos = v:FindFirstChild("TargetPos")
				local Mode = v:FindFirstChild("Mode")
				local Target = v:FindFirstChild("Target")
				if TargetPos and Mode and Target then
					if MouseTarget and MouseTarget.Parent then
						TargetPos.Value = MousePosition
						local TargetParent = MouseTarget.Parent
						if TargetParent and TargetParent:FindFirstChild("Humanoid") then
							Target.Value = TargetParent
							Mode.Value = "Attack"
						else
							Mode.Value = "MoveTo"
							Target.Value = nil
						end
					else
						Mode.Value = "Follow"
						Target.Value = nil
					end
				end
			end
		end
	--[[elseif not RedcliffDogModel and not DogSpawned then
		SpawnDog()]]
	end
end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("UpperTorso")
	if not CheckIfAlive() then
		return
	end
	ToolName = (Player.Name .. "'sRedcliffDog")
	ToolEquipped = true
	Spawn(function()
		SpawnDog()
	end)
end

function Unequipped()
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function OnServerInvoke(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Changed:connect(function(Property)
	if Property == "Parent" and Tool.Parent then
		Handle.Transparency = (((Tool.Parent:IsA("Backpack") or Players:GetPlayerFromCharacter(Tool.Parent) and ((not DogSpawned and 0) or 1)) or 0))
	end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX8306C1F38AD64E6FA80BE6776D8B5AEC">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Remover</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Model = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Creator = Model:FindFirstChild("Creator")
Tool = Model:FindFirstChild("Tool")

function DestroyModel()
	Debris:AddItem(Model, 2)
end

if not Creator or not Creator.Value or not Creator.Value:IsA("Player") or not Creator.Value.Parent or not Tool or not Tool.Value or not Tool.Value.Parent then
	DestroyModel()
	return
end

Creator = Creator.Value
Tool = Tool.Value

Character = Creator.Character
if not Character then
	DestroyModel()
	return
end

Creator.Changed:connect(function(Property)
	if Property == "Parent" and not Creator.Parent then
		DestroyModel()
	end
end)

Character.Changed:connect(function(Property)
	if Property == "Parent" and not Character.Parent then
		DestroyModel()
	end
end)

Tool.Changed:connect(function(Property)
	if Property == "Parent" and (not Tool.Parent or (not Tool.Parent:IsA("Backpack") and not Players:GetPlayerFromCharacter(Tool.Parent))) then
		DestroyModel()
	end
end)]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
	</Item>
</roblox>