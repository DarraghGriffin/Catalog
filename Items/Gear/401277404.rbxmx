<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXE3054495B87049C1995C099BFDC8447F">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0.375</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">RazorJettsSkates</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=397867095</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXDD8A60022B8845798158A756E4F4166E">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.0445099995</X>
					<Y>0.568718016</Y>
					<Z>-0.0482509993</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>3</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXD11C8AEEBD3C4EC58680C07A7A950850">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=397866904</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.25</X>
						<Y>1.25</Y>
						<Z>1.25</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=397867055</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX60F54B620C444B58AE2105D0A952E3C5">
				<Properties>
					<float name="EmitterSize">5</float>
					<bool name="Looped">true</bool>
					<string name="Name">Skating</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1.31772506</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=22917014</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX5D494E86F58F4536A78B0E1EF7884569">
			<Properties>
				<string name="Name">Remotes</string>
			</Properties>
			<Item class="RemoteFunction" referent="RBX8D3EAD8F2D3D4571857D3F37548A3CC8">
				<Properties>
					<string name="Name">ServerControl</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXBA5554BE90484CBBAD215006AE6ECBF4">
				<Properties>
					<string name="Name">ClientControl</string>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX28D3AC8B2E1F4C27917CFBAA8B447706">
			<Properties>
				<string name="Name">Animations</string>
			</Properties>
			<Item class="Animation" referent="RBXFE162E8E93524EF78BD7F53E7B2906B1">
				<Properties>
					<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=398077299</url></Content>
					<string name="Name">Moving</string>
				</Properties>
			</Item>
			<Item class="Animation" referent="RBXC2FFF04EDF1743A6BFE8178943DED29B">
				<Properties>
					<Content name="AnimationId"><url>rbxassetid://742115770</url></Content>
					<string name="Name">R15Idle</string>
				</Properties>
			</Item>
			<Item class="Animation" referent="RBX1211C727446A4E60A65B266FCAD7D31B">
				<Properties>
					<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=398078743</url></Content>
					<string name="Name">Idle</string>
				</Properties>
			</Item>
			<Item class="Animation" referent="RBX0E94F42B9F684661AE2A3B0502491208">
				<Properties>
					<Content name="AnimationId"><url>rbxassetid://742117104</url></Content>
					<string name="Name">R15Moving</string>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXE500B373520F4C6CB64E5580F8CF7E34">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid">{A0E0C915-38A9-4CC5-930F-A3E4535447FF}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer
--// Updated for R15 avatars by StarWars

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputButton = Instance.new("Frame")
InputButton.Name = "InputMonitor"
InputButton.BackgroundTransparency = 1
InputButton.Size = UDim2.new(1, 0, 1, 0)
InputButton.Parent = InputCheck

AnimationsBin = Tool:WaitForChild("Animations")
AnimationObjects = {
	Idle = {Animation = AnimationsBin:WaitForChild("Idle"), FadeTime = nil, Weight = nil, Speed = 0.125, Duration = nil},
	Moving = {Animation = AnimationsBin:WaitForChild("Moving"), FadeTime = nil, Weight = nil, Speed = 0.25, Duration = nil},
	R15Idle = {Animation = AnimationsBin:WaitForChild("R15Idle"), FadeTime = nil, Weight = nil, Speed = 0.125, Duration = nil},
	R15Moving = {Animation = AnimationsBin:WaitForChild("R15Moving"), FadeTime = nil, Weight = nil, Speed = 0.25, Duration = nil}
}

Animations = {}
LocalObjects = {}

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if not Boolean then
		return
	end

	PreventJump = Humanoid.Changed:connect(function(Property)
		if Property ==  "Jump" then
			Humanoid.Jump = false
		end
	end)
end

function RunAnimation(Run)
	local LastPose = ""
	local function SetMoving(Speed)
		local CurrentPose = LastPose
		local PoseAnimation
		if Speed > 0 then
			LastPose = "Moving"
			if Humanoid then
				if Humanoid.RigType == Enum.HumanoidRigType.R15 then
					PoseAnimation = AnimationObjects.R15Moving
				else
					PoseAnimation = AnimationObjects.Moving
				end
			end
		else
			LastPose = "Idle"
			if Humanoid then
				if Humanoid.RigType == Enum.HumanoidRigType.R15 then			
					PoseAnimation = AnimationObjects.R15Idle
				else
					PoseAnimation = AnimationObjects.Idle
				end
			end
		end
		if LastPose ~= CurrentPose and PoseAnimation then
			SetAnimation("PlayAnimation", PoseAnimation)
		end
	end
	if AnimationRunning then
		AnimationRunning:disconnect()
	end
	local NewPose = Humanoid:GetState()
	local Speed = (HumanoidRootPart.Velocity * Vector3.new(1, 0, 1)).Magnitude
	SetMoving(((Speed >= 5 and 1) or 0))
	AnimationRunning = Humanoid.Running:connect(function(Speed)
		local TorsoSpeed = (HumanoidRootPart.Velocity * Vector3.new(1, 0, 1)).Magnitude
		if Speed > 0 and TorsoSpeed > 5 then
			SetMoving(Speed)
		else
			SetMoving(0)
		end
	end)
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent and HumanoidRootPart and HumanoidRootPart.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseDown", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseDown", {Down = false})
	end)
	local PlayerGui = Player:FindFirstChild("PlayerGui")
	if PlayerGui then
		if UserInputService.TouchEnabled then
			InputCheckClone = InputCheck:Clone()
			InputCheckClone.InputMonitor.InputBegan:connect(function()
				InvokeServer("Button1Click", {Down = true})
			end)
			InputCheckClone.InputMonitor.InputEnded:connect(function()
				InvokeServer("Button1Click", {Down = false})
			end)
			InputCheckClone.Parent = PlayerGui
		end
	end
	Humanoid.HipHeight = Humanoid.HipHeight + 0.6
	RunAnimation()
end

function Unequipped()
	ToolEquipped = false
	if CheckIfAlive() then
		Humanoid.HipHeight = Humanoid.HipHeight - 0.6
	end
	if InputCheckClone and InputCheckClone.Parent then
		InputCheckClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs(LocalObjects) do
		if v.Object then
			v.Object.LocalTransparencyModifier = 0
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier, AnimationRunning}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	LocalObjects = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					local Camera = game:GetService("Workspace").CurrentCamera
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							local ViewDistance = (Camera.CoordinateFrame.p - Head.Position).Magnitude
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or CurrentTransparency == 0)) or v.AutoUpdate) then
								if ((v.Distance and ViewDistance <= v.Distance) or not v.Distance) then
									v.Object.LocalTransparencyModifier = v.Transparency
								else
									v.Object.LocalTransparencyModifier = 0
								end
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX192A7B49448C4A048F47C18970716D96">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid">{E55258C4-0E6B-419E-9C9A-8EC709F08E19}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer
--// Updated for R15 avatars by StarWars

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

AnimationsBin = Tool:WaitForChild("Animations")
Animations = {
	Idle = {Animation = AnimationsBin:WaitForChild("Idle"), FadeTime = 0.25, Weight = nil, Speed = 0.5, Duration = nil},
	Moving = {Animation = AnimationsBin:WaitForChild("Moving"), FadeTime = 0.25, Weight = nil, Speed = 0.5, Duration = nil},
	R15Idle = {Animation = AnimationsBin:WaitForChild("R15Idle"), FadeTime = 0.25, Weight = nil, Speed = 0.5, Duration = nil},
	R15Moving = {Animation = AnimationsBin:WaitForChild("R15Moving"), FadeTime = 0.25, Weight = nil, Speed = 0.5, Duration = nil}	
}

Sounds = {
	Skating = Handle:WaitForChild("Skating")
}

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

BaseRollerSkate = BasePart:Clone()
BaseRollerSkate.Name = "RollerSkate"
BaseRollerSkate.Size = Vector3.new(2, 1.75, 1.5)
BaseRollerSkate.CanCollide = false
Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.FileMesh,
	MeshId = "",
	TextureId = (BaseUrl .. "397867055"),
	Scale = Vector3.new(1.65, 1.65, 2),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseRollerSkate,
}
Create("Weld"){
	Name = "Weld",
	Part0 = nil,
	Part1 = BaseRollerSkate,
	C0 = CFrame.new(0, -0.75, -0.325),
	C1 = CFrame.new(0, 0, 0),
	Parent = BaseRollerSkate,
}

BaseWheel = BasePart:Clone()
BaseWheel.Name = "Wheel"
BaseWheel.Size = Vector3.new(0.2, 0.2, 0.2)
BaseWheel.CanCollide = false
Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "397866990"),
	TextureId = (BaseUrl .. "397867055"),
	Scale = Vector3.new(2, 1.65, 1.65),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseWheel,
}
Create("Motor6D"){
	Name = "Motor",
	Part0 = BaseWheel,
	Part1 = nil,
	C0 = (CFrame.new(0, 0, 0) * CFrame.Angles(0, (math.pi / 2), 0)),
	C1 = (CFrame.new(0.775, -0.42, -0.165) * CFrame.Angles(0, -(math.pi / 2), 0)),
	MaxVelocity = 0.1,
	Parent = BaseWheel,
}

LightEffect = BasePart:Clone()
LightEffect.Name = "Effect"
LightEffect.BrickColor = BrickColor.new("New Yeller")
LightEffect.Transparency = 1
LightEffect.Material = Enum.Material.Neon
LightEffect.Shape = Enum.PartType.Cylinder
LightEffect.Size = Vector3.new(0.6, 0.45, 0.45)
LightEffect.CanCollide = false
Create("SpotLight"){
	Name = "Light",
	Color = Color3.new((255 / 255), (255 / 255), (0 / 255)),
	Angle = 45,
	Brightness = 50,
	Range = 3.5,
	Face = Enum.NormalId.Right,
	Shadows = false,
	Enabled = false,
	Parent = LightEffect,
}
Create("Weld"){
	Name = "Weld",
	Part0 = BaseRollerSkate,
	Part1 = LightEffect,
	C0 = (CFrame.new(0, 0, ((BaseRollerSkate.Size.Z / 2) + (LightEffect.Size.X / 2) - 0.35)) * CFrame.Angles(0, -(math.pi / 2), 0)),
	C1 = CFrame.new(0, 0, 0),
	Parent = LightEffect,
}
LightEffect.Parent = BaseRollerSkate

Gravity = workspace.Gravity
Rate = (1 / 60)

ToolEquipped = false

Remotes = Tool:WaitForChild("Remotes")
ServerControl = (Remotes:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Remotes,
})
ClientControl = (Remotes:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Remotes,
})

for i, v in pairs(Tool:GetChildren()) do
	if v:IsA("BasePart") and v ~= Handle then
		v:Destroy()
	end
end

Handle.Transparency = 0
Tool.Enabled = true

function Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)) or Number)
end

function Sign(x)
	return (x > 0 and 1 or x < 0 and -1 or 0)
end

function Tween(a, b, t)
	return ((b - a) * t + a)
end

function CreateDisplay(Equipped)
	Handle.Transparency = ((Equipped and 1) or 0)
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			v:Destroy()
		end
	end
	for i, v in pairs({Stabilizer}) do
		if v and v.Parent then
			v:Destroy()
		end
	end
	Sounds.Skating:Stop()
	if Equipped then
		CurrentlyEquipped = true
		if ToolUnequipped then
			ToolUnequipped:disconnect()
		end
		ToolUnequipped = Tool.Unequipped:connect(function()
			CurrentlyEquipped = false
		end)
		LeftLeg = Character:FindFirstChild("Left Leg") or Character:FindFirstChild('LeftFoot')
		RightLeg = Character:FindFirstChild("Right Leg") or Character:FindFirstChild('RightFoot')
		if LeftLeg then
			LeftRollerSkate = BaseRollerSkate:Clone()
			LeftRollerSkate.Name = "LeftRollerSkate"
			LeftRollerSkate.Mesh.MeshId = (BaseUrl .. "397866775")
			
			local Attachment = Create('Attachment'){
				Name = "LeftAnkleRigAttachment";
				Position = Vector3.new(0, -0.125, 0.25);
				Axis = Vector3.new(1, 0, 0);
				SecondaryAxis = Vector3.new(0, 1, 0);
				Parent = LeftRollerSkate;
			}			
			
			LeftWeld = LeftRollerSkate.Weld
			if Humanoid then
				local LeftGrip = LeftLeg and LeftLeg:FindFirstChild("LeftAnkleRigAttachment")
				if Humanoid.RigType == Enum.HumanoidRigType.R15 and LeftGrip then
					LeftWeld.Part0 = LeftGrip.Parent
					LeftWeld.Part1	= Attachment.Parent		
					LeftWeld.C0 = LeftGrip.CFrame					
					LeftWeld.C1 = Attachment.CFrame	
				else
					--// Must be R6
					LeftWeld.C1 = (LeftWeld.C1 * CFrame.Angles(0, math.rad(-2.5), math.rad(-20)))
					LeftWeld.Part0 = LeftLeg
				end
			end			
			
			LeftLeftWheel = BaseWheel:Clone()
			LeftLeftWheel.Name = "LeftWheel"
			LeftLeftMotor = LeftLeftWheel.Motor
			LeftLeftMotor.Part1 = LeftRollerSkate
			LeftLeftMotor.C0 = (LeftLeftMotor.C0 * CFrame.Angles(0, math.pi, 0))
			LeftLeftMotor.C1 = (CFrame.new(LeftLeftMotor.C1.X, LeftLeftMotor.C1.Y, LeftLeftMotor.C1.Z) * CFrame.Angles(LeftLeftMotor.C1:toEulerAnglesXYZ()))
			LeftLeftWheel.Parent = LeftRollerSkate
			
			LeftRightWheel = BaseWheel:Clone()
			LeftRightWheel.Name = "RightWheel"
			LeftRightMotor = LeftRightWheel.Motor
			LeftRightMotor.Part1 = LeftRollerSkate
			LeftRightMotor.C1 = (CFrame.new(-LeftRightMotor.C1.X, LeftRightMotor.C1.Y, LeftRightMotor.C1.Z) * CFrame.Angles(LeftRightMotor.C1:toEulerAnglesXYZ()) * CFrame.Angles(0, 0, 0))
			LeftRightWheel.Parent = LeftRollerSkate
			
			LeftRollerSkate.Parent = Tool
		end
		if RightLeg then
			RightRollerSkate = BaseRollerSkate:Clone()
			RightRollerSkate.Name = "RightRollerSkate"
			RightRollerSkate.Mesh.MeshId = (BaseUrl .. "397866826")
			
			local Attachment = Create('Attachment'){
				Name = "RightAnkleRigAttachment";
				Position = Vector3.new(0, -0.125, 0.25);
				Axis = Vector3.new(1, 0, 0);
				SecondaryAxis = Vector3.new(0, 1, 0);
				Parent = RightRollerSkate;
			}				
			
			RightWeld = RightRollerSkate.Weld
			if Humanoid then
				local RightGrip = RightLeg and RightLeg:FindFirstChild("RightAnkleRigAttachment")
				if Humanoid.RigType == Enum.HumanoidRigType.R15 and RightGrip then
					RightWeld.Part0 = RightGrip.Parent
					RightWeld.Part1	= Attachment.Parent		
					RightWeld.C0 = RightGrip.CFrame					
					RightWeld.C1 = Attachment.CFrame	
				else
					--// Must be R6
					RightWeld.C1 = (RightWeld.C1 * CFrame.Angles(0, math.rad(2.5), math.rad(20)))
					RightWeld.Part0 = RightLeg
				end
			end
			
			RightLeftWheel = BaseWheel:Clone()
			RightLeftWheel.Name = "LeftWheel"
			RightLeftMotor = RightLeftWheel.Motor
			RightLeftMotor.Part1 = RightRollerSkate
			RightLeftMotor.C0 = (RightLeftMotor.C0 * CFrame.Angles(0, math.pi, 0))
			RightLeftMotor.C1 = (CFrame.new(RightLeftMotor.C1.X, RightLeftMotor.C1.Y, RightLeftMotor.C1.Z) * CFrame.Angles(RightLeftMotor.C1:toEulerAnglesXYZ()))
			RightLeftWheel.Parent = RightRollerSkate
						
			RightRightWheel = BaseWheel:Clone()
			RightRightWheel.Name = "RightWheel"
			RightRightMotor = RightRightWheel.Motor
			RightRightMotor.Part1 = RightRollerSkate
			RightRightMotor.C1 = (CFrame.new(-RightRightMotor.C1.X, RightRightMotor.C1.Y, RightRightMotor.C1.Z) * CFrame.Angles(RightRightMotor.C1:toEulerAnglesXYZ()) * CFrame.Angles(0, 0, 0))
			RightRightWheel.Parent = RightRollerSkate
			
			RightRollerSkate.Parent = Tool
		end
		
		Stabilizer = Create("BodyGyro"){
			Name = "SkateStabilizer",
			maxTorque = Vector3.new(math.huge, 0, math.huge),
			cframe = CFrame.new(0, 0, 0),
			D = 500,
			P = 3000,
			Parent = HumanoidRootPart,
		}
		
		local RollerSkates = {{Part = LeftRollerSkate, Light = LeftRollerSkate.Effect}, {Part = RightRollerSkate, Light = RightRollerSkate.Effect}}
		local Wheels = {LeftLeftWheel, RightLeftWheel, RightLeftWheel, RightRightWheel}
		local WheelMotors = {LeftLeftMotor, LeftRightMotor, RightLeftMotor, RightRightMotor}
		
		local LastMove = 0
		local SelectedSkate = 1
		local LightOn = true
		local LightEnabled = false
		Sounds.Skating:Play()
		while true do
			if not CurrentlyEquipped or not ToolEquipped or not CheckIfAlive() then
				Sounds.Skating:Stop()
				break
			end
			
			local WheelSpeed = {Min = 0, Max = 50}
			local Velocity = ((HumanoidRootPart.Velocity * Vector3.new(1, 0, 1)))
			
			--Skating sound
			local LowPitch = 1.3
			local TopPitch = 2
			local LowV = 0.35
			local TopV = 0.75
			if Velocity.Magnitude < 1 then
				Sounds.Skating.Volume = 0
			else
				Sounds.Skating.Volume = math.min((((TopV - LowV) * (Velocity.Magnitude / WheelSpeed.Max)) + LowV), 1)
				Sounds.Skating.Pitch = (((TopPitch - LowPitch) * (Velocity.Magnitude / WheelSpeed.Max)) + LowPitch)
			end
			
			--Wheel movement			
			local WheelVelocity = (Clamp(GetPercentage(0, 30, Velocity.Magnitude), 0, 100) * 0.01)
			local RotationSpeed = Clamp((WheelSpeed.Max * WheelVelocity), WheelSpeed.Min, WheelSpeed.Max)
			local StartPoint = (HumanoidRootPart.CFrame + HumanoidRootPart.CFrame.lookVector * (HumanoidRootPart.Size.Z / 2))
			local EndPoint = (StartPoint + Velocity.Unit * Velocity.Magnitude)
			local MoveDirection = Clamp(((StartPoint.p - EndPoint.p).Unit + EndPoint.lookVector).Magnitude, 0, 2)
			local Direction = ((MoveDirection < 1 and 1) or -1)
			for i, v in pairs(WheelMotors) do
				if v then
					v.MaxVelocity = math.abs(RotationSpeed * 0.01)
					v.DesiredAngle = (99999999 * Direction)
				end
			end
			
			--Particle display
			local Now = tick()
			local IsMoving = (Velocity.Magnitude >= 5)
			if not IsMoving then
				LastMove = 0
				AdjustingLight = true
				LightEnabled = false
				LightOn = false
				Spawn(function()
					for i = 1, 20 do
						if LightOn then
							break
						end
						for ii, vv in pairs(RollerSkates) do
							local Light = vv.Light
							if Light.Transparency < 1 then
								Light.Transparency = (Light.Transparency + 0.05)
								if Light.Transparency > 1 then
									Light.Transparency = 1
								end
							end
						end
						wait(Rate)
					end
					if not LightOn then
						for i, v in pairs(RollerSkates) do
							local Light = v.Light
							local LightEffect = Light:FindFirstChild('Light')
							Light.Transparency = 1
							if LightEffect then
								LightEffect.Enabled = false
							end
						end
						LightOn = false
					end
					AdjustingLight = false
				end)
			elseif (Now - LastMove) > 1 then
				LightOn = true
				LightEnabled = true
				LastMove = Now
				SelectedSkate = (SelectedSkate + 1)
				if SelectedSkate > #RollerSkates then
					SelectedSkate = 1
				end
				if not AdjustingLight then
					AdjustingLight = true
					Spawn(function()
						for i = 1, 20 do
							if not LightEnabled then
								break
							end
							for ii, vv in pairs(RollerSkates) do
								local Light = vv.Light
								if ii == SelectedSkate then
									Light.Transparency = (Light.Transparency - 0.05)
									if Light.Transparency < 0 then
										Light.Transparency = 0
									end
								elseif ii ~= SelectedSkate and Light.Transparency < 1 then
									Light.Transparency = (Light.Transparency + 0.05)
									if Light.Transparency > 1 then
										Light.Transparency = 1
									end
								end
							end
							wait(Rate)
						end
						if LightEnabled then
							for i, v in pairs(RollerSkates) do
								local Light = v.Light
								local LightEffect = Light:FindFirstChild('Light')
								if i ~= SelectedSkate then
									Light.Transparency = 1
									if LightEffect then
										LightEffect.Enabled = false
									end
								else
									if LightEffect then
										LightEffect.Enabled = true
									end
								end
							end
							LightOn = not LightOn
							AdjustingLight = false
						end
					end)
				end
			end
			local MovingDuration = (Now - LastMove)
			local ParticlesEnabled = ((MovingDuration > 1 and IsMoving) or false)	
			wait(Rate)
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and HumanoidRootPart and HumanoidRootPart.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
	Spawn(function()
		local Limbs = {"Left Leg", "Right Leg", "LeftFoot", "LeftLowerLeg", "LeftUpperLeg", "RightFoot", "RightLowerLeg", "RightUpperLeg"}
		for i, v in pairs(Limbs) do
			local Limb = Character:FindFirstChild(v)
			if Limb then
				Spawn(function()
					InvokeClient("SetLocalTransparencyModifier", {Object = Limb, Transparency = 0, AutoUpdate = true})
				end)
			end
		end
		CreateDisplay(true)
	end)
end

function Unequipped()
	Spawn(function()
		CreateDisplay(false)
	end)
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

Delay(0, (function()
	if not ToolEquipped then
		CreateDisplay(false)
	end
end))

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Changed:connect(function(Property)
	if Property == "Parent" then
		CreateDisplay(false)
	end
end)

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
	</Item>
</roblox>