<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX55DCE0D8C5FF4928AC7FAD4B8FE7D518">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">PostPebblesGuitar</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=406096910</url></Content>
			<string name="ToolTip">FREEBIRD!</string>
		</Properties>
		<Item class="Part" referent="RBX3CA701096A2945A887474518CFD2D136">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.0376209989</X>
					<Y>1.81110895</Y>
					<Z>-0.0372699983</Z>
					<R00>-0.66877383</R00>
					<R01>-0.69286859</R01>
					<R02>-0.26958257</R02>
					<R10>-0.728819191</R10>
					<R11>0.682601452</R11>
					<R12>0.0536460578</R12>
					<R20>0.146847799</R20>
					<R21>0.232354015</R21>
					<R22>-0.961481869</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>3.60000014</Y>
					<Z>1</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX9636B48498BD47848BD90C4D882DA6EB">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=99166955</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.29999995</X>
						<Y>1.29999995</Y>
						<Z>1.29999995</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=406096726</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX9B67599FE9E44D6B8E1F90B7D3452382">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">ChordSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=99170403</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3C431C7EA15B4C89B1930F2E5F6722BF">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Applause</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=60059129</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXBFE4F257A629439FBAE2F86946D90065">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=99198989</url></Content>
				<string name="Name">Pluck</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX8DB688F2EECF4011BFA2A9597AFB0E56">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=99200153</url></Content>
				<string name="Name">Hold</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX76050AC0DABB47A5B7A580E4BA159028">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
ContentProvider = game:GetService("ContentProvider")

Camera = game:GetService("Workspace").CurrentCamera

Animations = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ClientControl.OnClientInvoke = (function(Mode, Value)
	if Mode == "PlayAnimation" and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	elseif Mode == "Preload" and Value then
		ContentProvider:Preload(Value)
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	elseif Mode == "MousePosition" then
		return PlayerMouse.Hit.p
	elseif Mode == "DisableJump" then
		DisableJump(Value)
	elseif Mode == "SetCamera" and Value then
		if Value.Subject and Value.Type then
			Camera.CameraSubject = Value.Subject
			Camera.CameraType = Value.Type
		end
	end
end)

function InvokeServer(Mode, Value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(Mode, Value)
	end)
	return ServerReturn
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	if PreventJump then
		PreventJump:disconnect()
	end
	Animations = {}
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX6F320B402E6A45C5983DA1BBFCBC2AAE">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

Logo = script:WaitForChild("Logo")

Module = require(185791213)

NoteData = {
	Chords = {
		{Key = "z", Sound = {Normal = 99170172, Sharp = 99189531}},
		{Key = "x", Sound = {Normal = 99170311, Sharp = 99189711}},
		{Key = "c", Sound = {Normal = 99170354, Sharp = 99189785}},
		{Key = "v", Sound = {Normal = 99170403, Sharp = 99190216}},
		{Key = "b", Sound = {Normal = 99170481, Sharp = 99189905}},
		{Key = "n", Sound = {Normal = 99170537, Sharp = 99190021}},
		{Key = "m", Sound = {Normal = 99170583, Sharp = 99190550}}
	},
	Pitches = {
		{Key = "g", Pitch = 0.5},
		{Key = "h", Pitch = 0.75},
		{Key = "j", Pitch = 1},
		{Key = "k", Pitch = 1.25},
		{Key = "l", Pitch = 1.5},
	}
}

Grips = {
	Hold = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1),
	Play = CFrame.new(0.01923877, 1.19116962, 0.313162446, 0.49999997, 0.707106769, 0.49999997, 0.0564237535, 0.549525201, -0.833569586, -0.864185274, 0.444996685, 0.23486498)
}

Animations = {
	Hold = {Animation = Tool:WaitForChild("Hold"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
	Pluck = {Animation = Tool:WaitForChild("Pluck"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
	ChordSound = Handle:WaitForChild("ChordSound"),
	Applause = Handle:WaitForChild("Applause")
}

ChordDuration = 0.25

ShiftDown = false
IsPlayingMusic = false
CurrentNote = 1
CurrentPitch = NoteData.Pitches[3] --((NoteData.Pitches[1] and NoteData.Pitches[1]) or nil)

MashMeter = 0
MeltDistance = 30

ClientControl = (Tool:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Tool

ServerControl = (Tool:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Tool

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if Mode == "KeyPress" and Value then
		local Key = string.lower(Value.Key)
		local ByteKey = string.byte(Key)
		local Down = Value.Down
		if Key == "0" or ByteKey == 48 then
			ShiftDown = Down
		else
			if Value.Down then
				if IsPlayingMusic then
					for i, v in pairs(NoteData.Chords) do
						if v.Key == Key then
							local Duration = 1
							local Chord = v
							local SoundId = ((not ShiftDown and v.Sound.Normal) or v.Sound.Sharp)
							local Pitch = CurrentPitch.Pitch
							Module.PlaySound(Handle, {Sound = Sounds.ChordSound, SoundId = SoundId}, ((Chord.Pitch and Chord.Pitch) or (CurrentPitch and CurrentPitch.Pitch) or nil), ChordDuration)
							InvokeClient("PlayAnimation", Animations.Pluck)
							MashMeter = (MashMeter + 1)
							return
						end
					end
				end
				for i, v in pairs(NoteData.Pitches) do
					if v.Key == Key then
						CurrentPitch = v
						return
					end
				end
			end
		end
	end
end)

Tool.Grip = Grips.Hold
Tool.Enabled = true

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function Activated()
	if not Tool.Enabled or not CheckIfAlive() then
		return
	end
	Tool.Enabled = false
	IsPlayingMusic = not IsPlayingMusic
	if IsPlayingMusic then
		Tool.Grip = Grips.Play
		InvokeClient("PlayAnimation", Animations.Hold)
	else
		Tool.Grip = Grips.Hold
		for i, v in pairs(Animations) do
			InvokeClient("StopAnimation", v)
		end
	end
	Tool.Enabled = true
end

function CheckIfAlive()
	return (Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent)
end

function Equipped(Mouse)
	Equipped = true
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		for i, v in pairs(Tool:GetChildren()) do
			if v:IsA("BillboardGui") and v.Name == "Logo" then
				v:Destroy()
			end
		end
		LogoCopy = Logo:Clone()
		LogoCopy.Adornee = Head
		LogoCopy.Enabled = true
		Debris:AddItem(LogoCopy, 5)
		LogoCopy.Parent = Tool
		ControlGui = Module.DisplayControls(Player, "Keys H, J, K, and L change pitch Keys Z, X, C, V, B, N, M play notes Click to equip")
	end)
end

function Unequipped()
	Equipped = false
	ShiftDown = false
	IsPlayingMusic = false
	if ControlGui and ControlGui.Parent then
		ControlGui:Destroy()
	end
	for i, v in pairs(Animations) do
		InvokeClient("StopAnimation", v)
	end
	if LogoCopy and LogoCopy.Parent then
		LogoCopy:Destroy()
	end
	Tool.Grip = Grips.Hold
end

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)

function MeltFace(player)
	if not player then
		return
	end
	local character = player.Character
	if not character then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	local head = character:FindFirstChild("Head")
	if not humanoid or humanoid.Health == 0 or not head then
		return
	end
	humanoid.WalkSpeed = 0
	head.Anchored = true
	local FakeHead = head:Clone()
	FakeHead.Name = "FakeHead"
	FakeHead.Transparency = 1
	FakeHead.Anchored = false
	FakeHead.CanCollide = false
	
	for i, v in pairs(FakeHead:GetChildren()) do
		if not (v:IsA("Decal") or v:IsA("DataModelMesh")) then
			v:Destroy()
		end
	end
	
	for i, v in pairs(head:GetChildren()) do
		if v:IsA("Decal") then
			v:Destroy()
		end
	end
	
	local BV = Instance.new('BodyVelocity')
	FakeHead.CFrame = head.CFrame + head.CFrame.lookVector * 0.25
	BV.velocity = Vector3.new(0, -1, 0)
	BV.maxForce = Vector3.new(50000, 50000, 50000)
	BV.Parent = FakeHead
	Debris:AddItem(FakeHead, 5)
	FakeHead.Parent = game:GetService("Workspace")
	
	local ApplauseSound = Sounds.Applause:Clone()
	ApplauseSound.Parent = head
	ApplauseSound:Play()
	Debris:AddItem(ApplauseSound, 5)

	wait(3)

	if humanoid and humanoid.Parent and head and head.Parent then	
		humanoid.WalkSpeed = 16
		head.Anchored = false
	end
	
end

function MeltNearFaces()
	for i, v in pairs(Players:GetChildren()) do
		if v:IsA("Player") and v ~= Player then
			local character = v.Character
			if not character then
				return
			end
			local humanoid = character:FindFirstChild("Humanoid")
			local head = character:FindFirstChild("Head")
			if not humanoid or humanoid.Health == 0 or not head or (Handle.Position - head.Position).magnitude > MeltDistance then
				return
			end
			Spawn(function()
				MeltFace(v)
			end)
		end
	end
end

while true do
	if MashMeter > 0 then
		MashMeter = (MashMeter - 0.1)
	end
	if MashMeter > 9 then
		MeltNearFaces()
		wait(5)
		MashMeter = 0
	end
	wait(1 / 30)
end]]></ProtectedString>
			</Properties>
			<Item class="BillboardGui" referent="RBXF634F2DE387B49ACA49FB530991F96DA">
				<Properties>
					<bool name="Active">false</bool>
					<Ref name="Adornee">null</Ref>
					<bool name="AlwaysOnTop">false</bool>
					<bool name="Enabled">false</bool>
					<Vector3 name="ExtentsOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">Logo</string>
					<Ref name="PlayerToHideFrom">null</Ref>
					<UDim2 name="Size">
						<XS>3.92499995</XS>
						<XO>0</XO>
						<YS>3.5</YS>
						<YO>0</YO>
					</UDim2>
					<Vector2 name="SizeOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector3 name="StudsOffset">
						<X>-0.375</X>
						<Y>2.125</Y>
						<Z>0</Z>
					</Vector3>
				</Properties>
				<Item class="Frame" referent="RBX257BA4A148C448608F2DA6466A41196C">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Image</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageLabel" referent="RBXFC6BC15DE28F4284B5ABFA145491978A">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=406096986</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX755FEA9C0E7B4372BF58C551DD71A628">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>0.791801155</X>
					<Y>1.12326574</Y>
					<Z>2.72573757</Z>
					<R00>0.979884863</R00>
					<R01>0.0260475464</R01>
					<R02>0.197857022</R02>
					<R10>-0</R10>
					<R11>0.991445541</R11>
					<R12>-0.130522117</R12>
					<R20>-0.199564233</R20>
					<R21>0.127896652</R21>
					<R22>0.971502244</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>0.732443988</X>
					<Y>1.16242242</Y>
					<Z>2.43428659</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>