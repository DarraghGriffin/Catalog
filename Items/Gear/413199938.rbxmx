<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX7BE4967A555146ABAEA4A47FF30E2DFC">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-1.64999998</Y>
				<Z>0.200000003</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">BadLuckSword</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=413084370</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXF725622D099641219B9FA1B7E24F0ADB">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.0168609992</X>
					<Y>2.25605297</Y>
					<Z>0.0356479995</Z>
					<R00>0.492585152</R00>
					<R01>0.503747344</R01>
					<R02>-0.709646821</R02>
					<R10>3.3703958e-007</R10>
					<R11>0.815438211</R11>
					<R12>0.578844249</R12>
					<R20>0.870264232</R20>
					<R21>-0.285130322</R21>
					<R22>0.401672572</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.25</X>
					<Y>4.5</Y>
					<Z>0.75</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX9106C5F46D534E3991AD95F60774615F">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=413084324</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>2.5</X>
						<Y>2.5</Y>
						<Z>2.5</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=413084423</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX4C8C5034467B4A948891752C5D955D68">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Lunge</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222208</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXD93EB86DFB324D02B17D819869E2B81E">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Slash</string>
					<float name="Pitch">1.41499996</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222216</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX3FF15510E25247BAA6FAAA3E682C4220">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Unsheath</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222225</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXE872369963214AEA9181FB3222C700EC">
				<Properties>
					<bool name="Looped">false</bool>
					<float name="MaxDistance">0</float>
					<float name="MinDistance">0</float>
					<string name="Name">Pop</string>
					<float name="Pitch">1.25</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=228086083</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX5E7C71B0505A438BBD096238EC1677DE">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Functions = require(script:WaitForChild("Functions"))

EffectIndicator = script:WaitForChild("UnluckyEffectIndicator")
EffectsScript = script:WaitForChild("Effects")

Gravity = 196.20

Rate = (1 / 60)

Damage = {
	Touch = {Min = 7, Max = 9},
	Hit = {Min = 12, Max = 17},
}

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

Sounds = {
	Unsheath = Handle:WaitForChild("Unsheath"),
	Slash = Handle:WaitForChild("Slash"),
	Lunge = Handle:WaitForChild("Lunge"),
	Pop = Handle:WaitForChild("Pop"),
}

Animations = {
	LeftSlash = {Animation = Tool:WaitForChild("LeftSlash"), FadeTime = nil, Weight = nil, Speed = 1, Duration = 0.75},
	RightSlash = {Animation = Tool:WaitForChild("RightSlash"), FadeTime = nil, Weight = nil, Speed = 1, Duration = 0.75},
	RiseArms = {Animation = Tool:WaitForChild("RiseArms"), FadeTime = nil, Weight = nil, Speed = 1.5, Duration = nil},
}

Specials = {
	Burst = {
		Enabled = true,
		Active = false,
		ReloadTime = 30,
	},
}

EffectTypes = {
	{Value = 1, Duration = 10, Front = Vector3.new(170, 0, 255), Back = Vector3.new(170, 170, 255)}, --Purple
	{Value = 2, Duration = 8, Front = Vector3.new(0, 255, 0), Back = Vector3.new(0, 170, 0)}, --Green
	{Value = 3, Duration = 10, Front = Vector3.new(255, 170, 0), Back = Vector3.new(255, 85, 0)}, --Orange
	{Value = 4, Duration = 20, Front = Vector3.new(85, 255, 255), Back = Vector3.new(85, 170, 255)}, --Blue
}

for i, v in pairs(EffectTypes) do
	local FrontColor = (v.Front / 255)
	v.Front = Color3.new(FrontColor.X, FrontColor.Y, FrontColor.Z)
	local BackColor = (v.Back / 255)
	v.Back = Color3.new(BackColor.X, BackColor.Y, BackColor.Z)
end

ToolEquipped = false

Remotes = Tool:WaitForChild("Remotes")
ServerControl = (Remotes:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Remotes,
})

ClientControl = (Remotes:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Remotes,
})

Handle.Transparency = 0
Tool.Enabled = true

function Skeletonize(character)
	if not character then
		return
	end
	local SkeletonRemains = {
		["Head"] = {MeshId = "4770583", TextureId = "36869975", Scale = Vector3.new(3, 3, 3)},
		["Torso"] = {MeshId = "36780113", TextureId = "36780292", Scale = Vector3.new(1, 1, 1)},
		["Left Arm"] = {MeshId = "36780032", TextureId = "36780292", Scale = Vector3.new(1, 1, 1)},
		["Right Arm"] = {MeshId = "36780156", TextureId = "36780292", Scale = Vector3.new(1, 1, 1)},
		["Left Leg"] = {MeshId = "36780079", TextureId = "36780292", Scale = Vector3.new(1, 1, 1)},
		["Right Leg"] = {MeshId = "36780195", TextureId = "36780292", Scale = Vector3.new(1, 1, 1)},
	}
	local function Materialize(Object)
		if Object:IsA("BasePart") then
			Object.BrickColor = BrickColor.new("Institutional white")
			local Remains = SkeletonRemains[Object.Name]
			if Remains then
				for ii, vv in pairs(Object:GetChildren()) do
					if vv:IsA("DataModelMesh") or vv:IsA("Decal") or vv:IsA("Texture") then
					vv:Destroy()
					end
				end
				local NewMesh = Create("SpecialMesh"){
					Name = "Mesh",
					MeshType = Enum.MeshType.FileMesh,
					MeshId = (BaseUrl .. Remains.MeshId),
					TextureId = "",
					Scale = Remains.Scale,
					VertexColor = Vector3.new(1, 1, 1),
					Offset = Vector3.new(0, 0, 0),
					Parent = Object,
				}
			end
		elseif Object:IsA("CharacterMesh") or Object:IsA("Clothing") then
			Object:Destroy()
		end
	end
	local function Effect(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			Materialize(v)
			Effect(v)
		end
	end
	Effect(character)
end

function Attack(PossibleAnims)
	if not CheckIfAlive() or not ToolEquipped then
		return
	end
	if PossibleAnims and #PossibleAnims > 0 then
		local Animation = PossibleAnims[math.random(1, #PossibleAnims)]
		CurrentAnimation = Animation
		local AttackAnimation = CurrentAnimation
		local AnimationState = InvokeClient("PlayAnimation", CurrentAnimation)
		wait(Animation.Duration)
		CurrentAnimation = nil
	end
end

function Blow(Hit)
	if not Hit or not Hit.Parent or not CheckIfAlive() or not ToolEquipped then
		return
	end
	local RightArm = Character:FindFirstChild("Right Arm")
	if not RightArm then
		return
	end
	local RightGrip = RightArm:FindFirstChild("RightGrip")
	if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
		return
	end
	local character = Hit.Parent
	if character == Character then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if not humanoid or humanoid.Health <= 0 then
		return
	end
	local head = character:FindFirstChild("Head")
	if not head then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player and (player == Player or Functions.IsTeamMate(Player, player)) then
		return
	end
	Functions.UntagHumanoid(humanoid)
	Functions.TagHumanoid(humanoid, Player)
	local PossibleDamage = ((CurrentAnimation and Damage.Hit) or Damage.Touch)
	local DamageValue = math.random(PossibleDamage.Min, PossibleDamage.Max)
	local HealthAfter = (humanoid.Health - DamageValue)
	humanoid:TakeDamage(DamageValue)
	if humanoid.Health <= 0 then
	else
		local UnluckyChance = math.random(1, 10)
		if not character:FindFirstChild(EffectIndicator.Name) and UnluckyChance == 1 then
			
			local EffectChosen = EffectTypes[math.random(1, #EffectTypes)]
			
			local EffectsScriptCopy = EffectsScript:Clone()
			local Values = {
				{Name = "Creator", Class = "ObjectValue", Value = Player},
				{Name = "Mode", Class = "IntValue", Value = EffectChosen.Value},
				{Name = "Duration", Class = "NumberValue", Value = EffectChosen.Duration},
			}
			for i, v in pairs(Values) do
				local Value = Create(v.Class){
					Name = v.Name,
					Value = v.Value,
					Parent = EffectsScriptCopy,
				}
			end
			EffectsScriptCopy.Disabled = false
			EffectsScriptCopy.Parent = character
			
			local EffectIndicatorCopy = EffectIndicator:Clone()
			EffectIndicator.Text.TextColor3 = EffectChosen.Front
			EffectIndicator.Text.TextStrokeColor3 = EffectChosen.Back
			EffectIndicator.Text.Background.TextColor3 = EffectIndicator.Text.TextStrokeColor3
			EffectIndicator.Text.Background.TextStrokeColor3 = EffectIndicator.Text.Background.TextColor3
			EffectIndicatorCopy.Enabled = true
			EffectIndicatorCopy.Adornee = head
			local Creator = Create("ObjectValue"){
				Name = "Creator",
				Value = EffectsScriptCopy,
				Parent = EffectIndicatorCopy,
			}
			EffectIndicatorCopy.Parent = character
			
		end
	end
end

function GetPlayersNearby(Position, Radius)
	local Humanoids = {}
	local NegativeRegion = (Position - Vector3.new(Radius, Radius, Radius))
	local PositiveRegion = (Position + Vector3.new(Radius, Radius, Radius))
	local Region = Region3.new(NegativeRegion, PositiveRegion)
	local IgnoreList = {Character}
	for i, v in pairs(Players:GetChildren()) do
		if v:IsA("Player") and v ~= Player and v.Character and v.Character.Parent and Functions.IsTeamMate(Player, v) then
			table.insert(IgnoreList, v.Character)
		end
	end
	local Parts = Functions.GetParts(Region, 500, IgnoreList)
	for i, v in pairs(Parts) do
		local character = v.Parent
		if character:IsA("Hat") then
			character = character.Parent
		end
		local humanoid = character:FindFirstChild("Humanoid")
		local torso = character:FindFirstChild("Torso")
		if humanoid and humanoid.Health > 0 and torso and not Functions.CheckTableForInstance(Humanoids, humanoid) then
			table.insert(Humanoids, humanoid)
		end
	end
	return Humanoids
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Activated()
	if not Tool.Enabled or not ToolEquipped then
		return
	end
	Tool.Enabled = false
	Sounds.Slash.Pitch = (math.random(1250, 1750) * 0.001)
	Sounds.Slash:Play()
	local AttackAnims = {Animations.LeftSlash, Animations.RightSlash, Animations.SideSwipe}
	Attack(AttackAnims)
	Tool.Enabled = true
end

function Equipped(Mouse)
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	Sounds.Unsheath:Play()
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
	if mode == "KeyPressed" then
		local Key = value.Key
		local Down = value.Down
		if Key == "q" and Down then
			local Special = Specials.Burst
			if not Special.Enabled or Special.Active then
				return
			end
			Special.Enabled = false
			Special.Active = true
			local CurrentlyEquipped = true
			ToolUnequipped = Tool.Unequipped:connect(function()
				CurrentlyEquipped = false
			end)
			Spawn(function()
				InvokeClient("PlayAnimation", Animations.RiseArms)
			end)
			wait(2)
			if ToolUnequipped then
				ToolUnequipped:disconnect()
			end
			if ToolEquipped and CurrentlyEquipped and CheckIfAlive() then
				local PlayersNearby = GetPlayersNearby(Handle.Position, 75)
				for i, v in pairs(PlayersNearby) do
					local character = v.Parent
					local Indicator = character:FindFirstChild(EffectIndicator.Name)
					if Indicator then
						Functions.UntagHumanoid(v)
						Functions.TagHumanoid(v, Player)
						v:TakeDamage(v.MaxHealth)
						if v.Health <= 0 then
							Skeletonize(character)
							local head = character:FindFirstChild("Head")
							if head then
								local PopSound = Sounds.Pop:Clone()
								PopSound.Pitch = (math.random(750, 1000) * 0.001)
								PopSound.Parent = head
								PopSound:Play()
							end
							for ii, vv in pairs(character:GetChildren()) do
								if vv:IsA("BasePart") then
									local Outward = ((CFrame.new(vv.Position) * CFrame.Angles(0, math.rad(math.random(-360, 360)), 0)).lookVector * math.random(2, 8))
									local Up = (Vector3.new(0, 1, 0) * math.random(3, 15))
									vv.Velocity = (vv.Velocity + Outward + Up)
									vv.RotVelocity = Vector3.new(math.random(), math.random(), math.random())
								end
							end
						end
					end
				end
			end
			Special.Active = false
			wait(Special.ReloadTime)
			Special.Enabled = true
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke

Handle.Touched:connect(Blow)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="BillboardGui" referent="RBX726F9AB37A7542CE8B746F7DB23FF0B5">
				<Properties>
					<bool name="Active">false</bool>
					<Ref name="Adornee">null</Ref>
					<bool name="AlwaysOnTop">true</bool>
					<bool name="Enabled">false</bool>
					<Vector3 name="ExtentsOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<string name="Name">UnluckyEffectIndicator</string>
					<Ref name="PlayerToHideFrom">null</Ref>
					<UDim2 name="Size">
						<XS>1</XS>
						<XO>0</XO>
						<YS>1</YS>
						<YO>0</YO>
					</UDim2>
					<Vector2 name="SizeOffset">
						<X>0</X>
						<Y>0</Y>
					</Vector2>
					<Vector3 name="StudsOffset">
						<X>0</X>
						<Y>1.5</Y>
						<Z>0</Z>
					</Vector3>
				</Properties>
				<Item class="TextLabel" referent="RBXC1D4087DCB674B4288630123DA5E813F">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">1</token>
						<token name="FontSize">13</token>
						<string name="Name">Text</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">13</string>
						<Color3 name="TextColor3">4283826175</Color3>
						<bool name="TextScaled">true</bool>
						<Color3 name="TextStrokeColor3">4283804415</Color3>
						<float name="TextStrokeTransparency">0.300000012</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">true</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">2</int>
					</Properties>
					<Item class="TextLabel" referent="RBXDF217E3FAA0E4DC9A67AAD638032C5D4">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">1</token>
							<token name="FontSize">13</token>
							<string name="Name">Background</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>3</XO>
								<YS>0</YS>
								<YO>3</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">13</string>
							<Color3 name="TextColor3">4283804415</Color3>
							<bool name="TextScaled">true</bool>
							<Color3 name="TextStrokeColor3">4283804415</Color3>
							<float name="TextStrokeTransparency">0.300000012</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Script" referent="RBX42F6B63523B24887B7AD83EC4EA545B6">
					<Properties>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Remover</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Gui = script.Parent

Debris = game:GetService("Debris")

Creator = Gui:WaitForChild("Creator")

function RemoveGui()
	Gui.Enabled = false
	Debris:AddItem(Gui, 1)
end

if not Creator or not Creator.Value or not Creator.Value.Parent then
	RemoveGui()
	return
end

Creator = Creator.Value

Creator.Changed:connect(function(Property)
	if Property == "Parent" and not Creator.Parent or not Creator.Parent.Parent then
		RemoveGui()
		return
	end
end)
]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="Script" referent="RBX7BA3CE959203444FA7DDE12447BAA4D7">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Effects</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")
RunService = game:GetService("RunService")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = require(script:WaitForChild("Functions"))

DisableJumpScript = script:WaitForChild("DisableJump")

Character = script.Parent
Humanoid = Character:FindFirstChild("Humanoid")

Player = Players:GetPlayerFromCharacter(Character)

Creator = script:FindFirstChild("Creator")
Mode = script:FindFirstChild("Mode")
Duration = script:FindFirstChild("Duration")

Connections = {}
Removing = false

function DestroyScript()
	if Removing then
		return
	end
	Removing = true
	if Humanoid then
		Humanoid.WalkSpeed = 16
	end
	for i, v in pairs(Connections) do
		if v then
			v:disconnect()
		end
	end
	Debris:AddItem(script, 1)
end

function GetCreator()
	return (((Creator and Creator.Value and Creator.Value.Parent and Creator.Value:IsA("Player")) and Creator.Value) or nil)
end

function PoisonDamage()
	local LastHurt = 0
	local PoisonDamage = RunService.Stepped:connect(function(Time, Step)
		local Now = tick()
		if (Now - LastHurt) >= 1.5 then
			LastHurt = Now
			if not Player or (Player and not Functions.IsTeamMate(Player, CreatorPlayer)) then
				Functions.UntagHumanoid(Humanoid)
				Functions.TagHumanoid(Humanoid, Player)
				Humanoid:TakeDamage(9)
			end
		end
	end)
	table.insert(Connections, PoisonDamage)
end

function Slow()
	Humanoid.WalkSpeed = 10
end

function DisableJump()
	local DisableJumpScriptCopy = DisableJumpScript:Clone()
	local Owner = Create("ObjectValue"){
		Name = "Owner",
		Value = script,
		Parent = DisableJumpScriptCopy,
	}
	DisableJumpScriptCopy.Disabled = false
	DisableJumpScriptCopy.Parent = Character
end

function ExtraDamage()
	IgnoreHealthChange = false
	CurrentHealth = Humanoid.Health
	local HealthChanged = Humanoid.Changed:connect(function(Property)
		local NewHealth = Humanoid.Health
		if not IgnoreHealthChange and NewHealth ~= Humanoid.MaxHealth then
			if NewHealth < CurrentHealth then
				local DamageDealt = (CurrentHealth - NewHealth)
				IgnoreHealthChange = true
				Humanoid.Health = (Humanoid.Health - (DamageDealt * 0.25))
				IgnoreHealthChange = false
			end
		end
		CurrentHealth = NewHealth
	end)
	table.insert(Connections, HealthChanged)
end

CreatorPlayer = GetCreator()

if not Humanoid or Humanoid.Health == 0 or not CreatorPlayer or not Mode or not Duration or Duration.Value <= 0 then
	DestroyScript()
	return
end

Spawn(function()
	print(Mode.Value)
	if Mode.Value == 1 then
		DisableJump()
	elseif Mode.Value == 2 then
		PoisonDamage()
	elseif Mode.Value == 3 then
		Slow()
	elseif Mode.Value == 4 then
		ExtraDamage()
	end
end)

wait(Duration.Value)

DestroyScript()]]></ProtectedString>
				</Properties>
				<Item class="ModuleScript" referent="RBX77A5444D16C24B09989A6A1946A367BA">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Functions</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {}

function Functions.IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Functions.TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

return Functions

]]></ProtectedString>
					</Properties>
				</Item>
				<Item class="LocalScript" referent="RBXCEBC02C13F984891BD527CA4965F9B7F">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">DisableJump</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Debris = game:GetService("Debris")

Owner = script:FindFirstChild("Owner")

function DestroyScript()
	Debris:AddItem(script, 0.5)
end

if not Owner or not Owner.Value or not Owner.Value.Parent then
	DestroyScript()
	return
end

Owner = Owner.Value

Owner.Changed:connect(function(Property)
	if Property == "Parent" and not Owner.Parent or not Owner.Parent.Parent then
		DestroyScript()
		return
	end
end)

Humanoid = script:WaitForChild("Humanoid")

Humanoid.Changed:connect(function(Property)
	if Property == "Jump" then
		Humanoid.Jump = false
	end
end)]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBX1F703549EBD146419AB32664C22A5F90">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {}

function Functions.IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Functions.TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function Functions.GetTotalParts(MaxParts, PossibleParts, Parts)
	if MaxParts < PossibleParts then
		return MaxParts
	elseif Parts >= MaxParts then
		return 0
	elseif MaxParts >= PossibleParts then
		local PartCount = (MaxParts - PossibleParts)
		if Parts <= MaxParts then
			PartCount = (MaxParts - Parts)
			if PartCount > PossibleParts then
				return PossibleParts
			else
				return PartCount
			end
		elseif PartCount >= PossibleParts then
			return PossibleParts
		else
			return PartCount
		end
	end
end

function Functions.GetParts(Region, MaxParts, Ignore)
	local Parts = {}
	local RerunFailed = false
	while #Parts < MaxParts and not RerunFailed do
		local Region = Region
		local PossibleParts = Functions.GetTotalParts(MaxParts, 100, #Parts)
		local PartsNearby = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region, Ignore, PossibleParts)
		if #PartsNearby == 0 then
			RerunFailed = true
		else
			for i, v in pairs(PartsNearby) do
				table.insert(Parts, v)
				table.insert(Ignore, v)
			end
		end
	end
	return Parts
end

function Functions.CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end

return Functions]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX425A76753BF440ABBA060286717F2410">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")

Animations = {}

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function KeyPressed(Key, Down)
	InvokeServer("KeyPressed", {Key = Key, Down = Down})
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	PlayerMouse.KeyDown:connect(function(Key)
		KeyPressed(Key, true)
	end)
	PlayerMouse.KeyUp:connect(function(Key)
		KeyPressed(Key, false)
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX812FFCE1278C46B0ACEF786C69230EF6">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX8B2D213F44694A06B15CFF32D5BE9929">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=74894663</url></Content>
				<string name="Name">LeftSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXE2335FB64C974F8EAF16124E7464BF08">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=74813494</url></Content>
				<string name="Name">RightSlash</string>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX57A71E95377D42AA84FCA1C3009306C1">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=93693205</url></Content>
				<string name="Name">RiseArms</string>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX7BC30EEE6A0D4806901D3AD1515B9E07">
			<Properties>
				<string name="Name">Remotes</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX22221A1C3D6545E381F3A764969F9DAD">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>2.16889644</X>
					<Y>1.04833317</Y>
					<Z>4.43114376</Z>
					<R00>0.880782187</R00>
					<R01>0.0991691351</R01>
					<R02>0.463020951</R02>
					<R10>-7.45058149e-009</R10>
					<R11>0.977823973</R11>
					<R12>-0.209428832</R12>
					<R20>-0.473521858</R20>
					<R21>0.184461191</R21>
					<R22>0.861249745</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">40</float>
				<CoordinateFrame name="Focus">
					<X>0.779835403</X>
					<Y>1.67661881</Y>
					<Z>1.84739804</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>