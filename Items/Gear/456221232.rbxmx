<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX6A3168703F364FDFB7BECDF730FBE965">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.5</Y>
				<Z>0.5</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">NeonPartyBlaster</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>rbxassetid://678068860</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXC72BBBD8DEB949A198FA1CFBCE3FEEA8">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.123082854</X>
					<Y>13.6487951</Y>
					<Z>0.187493011</Z>
					<R00>-0.94339025</R00>
					<R01>-0.124007776</R01>
					<R02>-0.307631403</R02>
					<R10>0</R10>
					<R11>0.92748034</R11>
					<R12>-0.373872042</R12>
					<R20>0.331685096</R20>
					<R21>-0.352707207</R21>
					<R22>-0.874975801</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>1.375</Y>
					<Z>1.89999998</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX144575953E854C77970FF97260DEC079">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxassetid://678069525</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.5</Z>
					</Vector3>
					<Content name="TextureId"><url>rbxassetid://678068755</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX99A172EA7ED74053AA9BEAAEC5433A64">
				<Properties>
					<float name="EmitterSize">10</float>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>rbxassetid://27127113</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX8EBB510C8C854B4CA098F3070A342455">
				<Properties>
					<float name="EmitterSize">10</float>
					<bool name="Looped">false</bool>
					<string name="Name">PewPew</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">0.699999988</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>rbxassetid://27127089</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="ParticleEmitter" referent="RBXDA80020A7B344A22A47CC6B48C30F461">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 1 0 0 0 1 1 0 0 0 </ColorSequence>
					<float name="Drag">0</float>
					<token name="EmissionDirection">5</token>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">0.5 0.5 </NumberRange>
					<float name="LightEmission">0.5</float>
					<bool name="LockedToPart">false</bool>
					<string name="Name">ProjectileSparks</string>
					<float name="Rate">100</float>
					<NumberRange name="RotSpeed">0 0 </NumberRange>
					<NumberRange name="Rotation">0 0 </NumberRange>
					<NumberSequence name="Size">0 0.1 0 1 0.1 0 </NumberSequence>
					<NumberRange name="Speed">4 4 </NumberRange>
					<Content name="Texture"><null></null></Content>
					<NumberSequence name="Transparency">0 0.1 0 1 0.1 0 </NumberSequence>
					<float name="VelocityInheritance">0</float>
					<float name="VelocitySpread">50</float>
					<float name="ZOffset">0</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX47933E8F917842F0A41F9DDC633C5D5B">
			<Properties>
				<string name="Name">Remotes</string>
			</Properties>
			<Item class="RemoteFunction" referent="RBXBCCE3606279449CCAB09EAEE75542EEA">
				<Properties>
					<string name="Name">ServerControl</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXF93F43F904B2441E86FBCFEF289F7841">
				<Properties>
					<string name="Name">ClientControl</string>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX72616A4728A74C1790D1D5B5D138FFE3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid">{EC40C714-368E-4F48-B8C5-9B99AC18738D}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
ProjectileSparks = Handle:WaitForChild("ProjectileSparks")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

ProjectileScript = script:WaitForChild("ProjectileScript")

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

Colors = {"Light blue", "Br. yellowish green", "Bright red", "Bright yellow", "Bright blue", "Br. yellowish orange", "Bright violet"}

BaseProjectile = BasePart:Clone()
BaseProjectile.Name = "Projectile"
BaseProjectile.Shape = Enum.PartType.Ball
BaseProjectile.Material = Enum.Material.Neon
BaseProjectile.Size = Vector3.new(0.5, 0.5, 0.5)
BaseProjectile.Reflectance = 1
BaseProjectile.Transparency = 0.1
ProjectileSparksCopy = ProjectileSparks:Clone()
ProjectileSparksCopy.Enabled = true
ProjectileSparksCopy.Color = ColorSequence.new(BaseProjectile.BrickColor.Color, BaseProjectile.BrickColor.Color)
ProjectileSparksCopy.Parent = BaseProjectile

Sounds = {
	PewPew = Handle:WaitForChild("PewPew"),
	Hit = Handle:WaitForChild("Hit"),
}

Grips = {
	Equipped = Tool.Grip,
	Fire = Tool.Grip,
}

FireRate = 0.2

Remotes = (Tool:FindFirstChild("Remotes") or Create("Folder"){
	Name = "Remotes",
	Parent = Tool,
})

ServerControl = (Remotes:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Remotes,
})

ClientControl = (Remotes:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Remotes,
})

ToolEquipped = false

Tool.Grip = Grips.Equipped
Tool.Enabled = true

function Fire(Direction)
	
	local SpawnOffset = (Handle.CFrame * CFrame.new(0, 0.25, -(Handle.Size.Z / 2)))
	local SpawnPos = (SpawnOffset.p + (Direction * 2))
	
	local Gravity = 196.20
	local Force = 200
	
	local Mass = (BaseProjectile:GetMass() * Gravity)

	local Projectile = BaseProjectile:Clone()
	Projectile.BrickColor = BrickColor.new(Colors[math.random(1, #Colors)])
	Projectile.CFrame = CFrame.new(SpawnPos, (CFrame.new(SpawnPos) + Direction * 2).p)
	Projectile.Velocity = (Direction * Force)
	local HitSound = Sounds.Hit:Clone()
	HitSound.Parent = Projectile
	
	local Velocity = (Direction * Force)
	
	local BodyForce = Create("BodyForce"){
		force = Vector3.new(0, (Mass * 0.8), 0),
		Parent = Projectile,
	}
	
	local Values = {
		{Name = "Creator", Class = "ObjectValue", Value = Player},
		{Name = "Damage", Class = "NumberValue", Value = 0},
	}
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = Projectile,
		}
	end
	
	local ProjectileScriptClone = ProjectileScript:Clone()
	ProjectileScriptClone.Disabled = false
	ProjectileScriptClone.Parent = Projectile
	
	Debris:AddItem(Projectile, 5)
	Projectile.Velocity = Velocity
	Projectile.Parent = game:GetService("Workspace")

	Sounds.PewPew:Play()

end

function Activated()
	local MouseData = InvokeClient("MouseData")
	if not MouseData or not MouseData.Position or not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
		return
	end
	local TargetPos = MouseData.Position
	local Direction = (TargetPos - Handle.Position).unit
	Tool.Enabled = false
	Fire(Direction)
	Tool.Grip = Grips.Fire
	wait(FireRate)
	Tool.Grip = Grips.Equipped
	Tool.Enabled = true

end

function CheckIfAlive()
	return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	for i, v in pairs(Sounds) do
		v:Stop()
	end
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = (function(player, Mode, Value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() or not Mode or not Value then
		return
	end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX54BB4C912073414FBC88725F894AF9ED">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ProjectileScript</string>
					<string name="ScriptGuid">{D0A644FC-9A18-4FA5-939C-128CBBE03345}</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Part = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Creator = Part:FindFirstChild("Creator")
Damage = Part:WaitForChild("Damage")

ParticleScript = script:WaitForChild("ParticleScript")

Sounds = {
	Hit = Part:WaitForChild("Hit"),
}

HitDelay = false

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

function TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end
	
function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function GetCreator()
	return (((Creator and Creator.Parent and Creator.Value and Creator.Value:IsA("Player")) and Creator.Value) or nil)
end

function SplatScreen(Player)
	if not Player then
		return
	end
	local PlayerGui = Player:FindFirstChild("PlayerGui")
	if not PlayerGui then
		return
	end
	local flakes = {678068985, 678069147, 678069356, 678069263}
	local globs = {678068985, 678069147, 678069356, 678069263}
	local ScreenGui = Create("ScreenGui"){
		Name = "PaintSplat",
	}
	local mainFrame = Create("Frame"){
		Name = "PaintballEffect",
		Position = UDim2.new(0, 0, 0, 0),
		Size = UDim2.new(1, 0, 1, 0),
		BackgroundColor = BrickColor.new(1, 1, 1),
		Transparency = 1,
		BorderColor = BrickColor.new(1, 1, 1),
		Rotation = math.random(0, 360),
		Parent = ScreenGui,
	}
	
	local size = ((math.random() * 0.2) + 0.5)
	local s = Create("ImageLabel"){
		Size = UDim2.new(size, 0, size, 0),
		Position = UDim2.new((math.random() - (size / 2)), 0, (math.random() - (size / 2)), 0),
		SizeConstraint = Enum.SizeConstraint.RelativeXX,
		Transparency = 1,
		Image = (BaseUrl .. globs[math.random(1, #globs)]),
		Rotation = math.random(0, 360),
	}
	Debris:AddItem(s, (5 + (math.random() * 2)))
	s.Parent = mainFrame
	
	local size = ((math.random() * 0.3) + 0.4)
	for i = 1, 3 do
		local s = Create("ImageLabel"){
			Size = UDim2.new(size, 0, size, 0),
			Position = UDim2.new((math.random() - (size / 2)), 0, (math.random() - (size / 2)), 0),
			SizeConstraint = Enum.SizeConstraint.RelativeXX,
			Transparency = 1,
			Image = (BaseUrl .. flakes[math.random(1, #flakes)]),
			Rotation = math.random(0, 360),
		}
		Debris:AddItem(s, (3 + (math.random() * 6)))
		s.Parent = mainFrame
	end
	
	Debris:AddItem(ScreenGui, 10)
	ScreenGui.Parent = PlayerGui
	
end

function CreateParticleEffect(Visible, Duration)
	local Fire = Create("Fire"){
		Name = "Fire",
		Heat = 0,
		Size = 5,
		Color = Part.BrickColor.Color,
		SecondaryColor = Part.BrickColor.Color,
	}
	local ParticleScriptCopy = ParticleScript:Clone()
	local Values = {
		{Name = "Visible", Class = "NumberValue", Value = Visible},
	}
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = ParticleScriptCopy,
		}
	end
	ParticleScriptCopy.Disabled = false
	ParticleScriptCopy.Parent = Fire
	Debris:AddItem(Fire, Duration)
	Fire.Parent = Part
end


function PartHit(Hit)
	local CreatorPlayer = GetCreator()
	if not Hit or not Hit.Parent or not CreatorPlayer or HitDelay then
		return
	end
	local character = Hit.Parent
	local HitParent = character
	if character:IsA("Hat") then
		character = character.Parent
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if humanoid and humanoid.Health > 0 then
		for i, v in pairs(character:GetChildren()) do
			if v:IsA("ForceField") then
				return
			end
		end
		local player = Players:GetPlayerFromCharacter(character)
		if player then
			if (CreatorPlayer == player or IsTeamMate(CreatorPlayer, player)) then
				return
			end
			SplatScreen(player)
		end
		UntagHumanoid(humanoid)
		TagHumanoid(humanoid, CreatorPlayer)
		humanoid:TakeDamage(Damage.Value)
		if humanoid.Health <= 0 then
		end
	end
	if (Hit.Transparency >= 1 and not Hit.CanCollide and not humanoid) or Hit.Name == "HumanoidRootPart" then
		return
	end
	HitDelay = true
	if (humanoid or Hit:GetMass() < (1.2 * 200)) and not HitParent:IsA("Hat") and not HitParent:IsA("Tool") then
		--Hit.BrickColor = Part.BrickColor
	end
	Sounds.Hit:Play()
	Part.Anchored = true
	Part.CanCollide = false
	Part.Transparency = 1
	for i, v in pairs(Part:GetChildren()) do
		if v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") or v:IsA("Light") then
			v.Enabled = false
		end
	end
	CreateParticleEffect(0.3, 1.25)
	Debris:AddItem(Part, 2)
end

Part.Touched:connect(PartHit)]]></ProtectedString>
				</Properties>
				<Item class="Script" referent="RBX47AE6A1C7D0B48BAA66BD23086DF3E11">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ParticleScript</string>
						<string name="ScriptGuid">{624CD439-67AD-488E-985D-539281440193}</string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Particle = script.Parent

Visible = script:WaitForChild("Visible")

wait(Visible.Value)

pcall(function()
	Particle.Enabled = false
end)]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX9DE1A183113A4460848D594D7577ABDB">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputButton = Instance.new("Frame")
InputButton.Name = "InputMonitor"
InputButton.BackgroundTransparency = 1
InputButton.Size = UDim2.new(1, 0, 1, 0)
InputButton.Parent = InputCheck

Animations = {}
LocalObjects = {}

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseDown", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseDown", {Down = false})
	end)
	local PlayerGui = Player:FindFirstChild("PlayerGui")
	if PlayerGui then
		if UserInputService.TouchEnabled then
			InputCheckClone = InputCheck:Clone()
			InputCheckClone.InputMonitor.InputBegan:connect(function()
				InvokeServer("Button1Click", {Down = true})
			end)
			InputCheckClone.InputMonitor.InputEnded:connect(function()
				InvokeServer("Button1Click", {Down = false})
			end)
			InputCheckClone.Parent = PlayerGui
		end
	end
end

function Unequipped()
	ToolEquipped = false
	if InputCheckClone and InputCheckClone.Parent then
		InputCheckClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs(LocalObjects) do
		if v.Object then
			v.Object.LocalTransparencyModifier = 0
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	LocalObjects = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					local Camera = game:GetService("Workspace").CurrentCamera
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							local ViewDistance = (Camera.CoordinateFrame.p - Head.Position).Magnitude
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or CurrentTransparency == 0)) or v.AutoUpdate) then
								if ((v.Distance and ViewDistance <= v.Distance) or not v.Distance) then
									v.Object.LocalTransparencyModifier = v.Transparency
								else
									v.Object.LocalTransparencyModifier = 0
								end
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXED2A07BEA7834E68B0EC699600ED8964">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXADE5BD11323943E7B648ED3F32ABFFD1">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>-3.01151586</X>
					<Y>14.4557934</Y>
					<Z>2.1481781</Z>
					<R00>0.541708231</R00>
					<R01>0.161827639</R01>
					<R02>-0.824841797</R02>
					<R10>-0</R10>
					<R11>0.981292605</R11>
					<R12>0.192522094</R12>
					<R20>0.840566576</R20>
					<R21>-0.104290806</R21>
					<R22>0.531574309</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">29.9999981</float>
				<CoordinateFrame name="Focus">
					<X>-0.351400375</X>
					<Y>13.8349094</Y>
					<Z>0.433850408</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>