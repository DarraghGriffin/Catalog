<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXE2B156C02A2348F8B78E81B380CF61A1">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">PumpkinBomb</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>rbxassetid://507363054</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXC8F21A98C4784F179DE161183E9AB8DB">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.0995890871</X>
					<Y>6.95435619</Y>
					<Z>-0.0854130164</Z>
					<R00>0.574957073</R00>
					<R01>-0.108386904</R01>
					<R02>-0.810972691</R02>
					<R10>0.0700880066</R10>
					<R11>0.994067907</R11>
					<R12>-0.0831672177</R12>
					<R20>0.815176129</R20>
					<R21>-0.00902188197</R21>
					<R22>0.579142988</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">0</token>
				<Vector3 name="size">
					<X>1.375</X>
					<Y>1.375</Y>
					<Z>1.375</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX8BAFF56CD07341C6A0A2E689377D66A8">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxassetid://507362935</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1.375</X>
						<Y>1.375</Y>
						<Z>1.375</Z>
					</Vector3>
					<Content name="TextureId"><url>rbxassetid://507363008</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBXA62F787BE57441488BA3C7CD5E89D60B">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

BombScript = script:WaitForChild("BombScript")

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	CanCollide = true,
	Locked = true,
}

Gravity = 196.20
Rate = (1 / 60)
ReloadTime = 15

ToolEquipped = false

Handle.Transparency = 0
Tool.Enabled = true

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and RootPart and RootPart.Parent and Player and Player.Parent and Player:IsA("Player")) and true) or false)
end

function Activated()
	if not CheckIfAlive() or not ToolEquipped or not Tool.Enabled then
		return
	end
	Tool.Enabled = false
	Handle.Transparency = 1
	local Bomb = Handle:Clone()
	Bomb.Name = "Bomb"
	Bomb.Transparency = 0
	Bomb.CanCollide = true
	local Values = {
		{Name = "Creator", Class = "ObjectValue", Value = Player},
		{Name = "Damage", Class = "NumberValue", Value = 60},
		{Name = "Multiply", Class = "IntConstrainedValue", Value = 3},
	}
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = Bomb,
		}
	end
	local BombScriptCopy = BombScript:Clone()
	BombScriptCopy.Disabled = false
	BombScriptCopy.Parent = Bomb
	Bomb.CFrame = (Handle.CFrame * CFrame.new(0, ((Bomb.Size.Y / 2) + (Handle.Size.Y / 2)), 0))
	Debris:AddItem(Bomb, 5)
	Bomb.Parent = game:GetService("Workspace")
	wait(ReloadTime)
	Handle.Transparency = 0
	Tool.Enabled = true
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	RootPart = Character:FindFirstChild("HumanoidRootPart")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	local CurrentlyEquipped = true
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
end

function Unequipped()
	ToolEquipped = false
end

Tool.Changed:connect(function(Property)
	if Property == "Parent" or Property == "Enabled" then
		Handle.Transparency = ((Players:GetPlayerFromCharacter(Tool.Parent) and ((Tool.Enabled and 0) or 1)) or 0)
	end
end)

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBXD5F616BA35FB4B1AA6FAA734D5616472">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">BombScript</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Bomb = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Creator = Bomb:FindFirstChild("Creator")
Damage = Bomb:FindFirstChild("Damage")
Multiply = Bomb:FindFirstChild("Multiply")

Start = tick()

function IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end

function GetCreator()
	return (((Creator and Creator.Value and Creator.Value.Parent and Creator.Value:IsA("Player")) and Creator.Value) or nil)
end

function Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
end

function CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end

function Explode()
	local Explosion = Create("Explosion"){
		Name = "Explosion",
		ExplosionType = Enum.ExplosionType.NoCraters,
		DestroyJointRadiusPercent = 0,
		BlastRadius = 8,
		BlastPressure = 0,
		Position = Bomb.Position,
		Visible = true,
	}
	local CharactersHit = {}
	local CurrDmg = Damage.Value
	Explosion.Hit:connect(function(Hit)
		if not Hit or not Hit.Parent then
			return
		end
		local Character = Hit.Parent
		if CheckTableForInstance(CharactersHit, Character) then
			return
		end
		local Humanoid = Character:FindFirstChild("Humanoid")
		if not Humanoid or Humanoid.Health == 0 then
			return
		end
		local Player = Players:GetPlayerFromCharacter(Character)
		local CreatorPlayer = GetCreator()
		if Player and CreatorPlayer and (Player == CreatorPlayer or IsTeamMate(CreatorPlayer, Player)) then
			return
		end
		table.insert(CharactersHit, Character)
		UntagHumanoid(Humanoid)
		TagHumanoid(Humanoid, Players)
		Humanoid:TakeDamage((CurrDmg and CurrDmg) or 0)
	end)
	Explosion.Parent = game:GetService("Workspace")
end

function MultiplyBomb()
	if Multiply.Value > 0 then
		Multiply.Value = (Multiply.Value - 1)
		Damage.Value = (Damage.Value / 2)
		local NewBomb = Bomb:Clone()
		local SizeDec = 0.75
		NewBomb.Size = (NewBomb.Size * SizeDec)
		local Mesh = NewBomb:FindFirstChild("Mesh")
		if Mesh then
			Mesh.Scale = (Mesh.Scale * SizeDec)
		end
		for i, v in pairs({Creator, Damage, Multiply}) do
			local Value = v:Clone()
			Value.Parent = NewBomb
			local BombScript = script:Clone()
			BombScript.Disabled = false
			BombScript.Parent = NewBomb
		end
		local BombCount = math.ceil(Multiply.Value * 1.5)
		for i = 1, BombCount do
			local NewBombCopy = NewBomb:Clone()
			local DirHeight = Vector3.new(0, (math.random(500, 1500) * 0.01), 0)
			local OriginCF = (CFrame.new(Bomb.Position) * CFrame.Angles(0, math.rad(math.random(-360, 360)), 0))
			local DirAngle = (CFrame.new(Bomb.Position) * CFrame.Angles(0, math.rad(math.random(-360, 360)), 0)) --(OriginCF * CFrame.Angles(0, ((math.pi * 2) / (BombCount - i)), 0))
			local RandomDir = (DirAngle + DirHeight).lookVector
			RandomDir = CFrame.new(Bomb.Position, (CFrame.new(Bomb.Position) + RandomDir * 2).p).lookVector
			NewBombCopy.CFrame = (Bomb.CFrame + RandomDir * ((Bomb.Size.Z / 2) + (NewBombCopy.Size.Z / 2)))
			NewBombCopy.Velocity = (RandomDir * math.random(15, 35))
			Debris:AddItem(NewBombCopy, 3)
			NewBombCopy.Parent = game:GetService("Workspace")
		end
	else
		return
	end
end

wait(2)

Explode()

MultiplyBomb()

Bomb.Name = "Effect"
Bomb.Transparency = 1
Bomb.Anchored = true
Bomb.CanCollide = false
Debris:AddItem(Bomb, 1)]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBXB2B00DA3F95A4CDFA239084A58280446">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXBF39FBED1FCA41A3A298B7EC0B23FD6F">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>2.02083969</X>
					<Y>7.24888372</Y>
					<Z>-1.85282195</Z>
					<R00>-0.681829691</R00>
					<R01>-0.0954701602</R01>
					<R02>0.725254238</R02>
					<R10>7.45058149e-009</R10>
					<R11>0.991446853</R11>
					<R12>0.130510911</R12>
					<R20>-0.731510997</R20>
					<R21>0.0889862254</R21>
					<R22>-0.675997853</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">40</float>
				<CoordinateFrame name="Focus">
					<X>0.860427499</X>
					<Y>7.04006529</Y>
					<Z>-0.771220326</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>