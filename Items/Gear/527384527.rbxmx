<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX52430ED01A8148D7859CCB773E2AC991">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0.150000006</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">GhostPotion</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>rbxassetid://527172247</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXFA84B861BA0C4697878DBA560E8F81E2">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0</X>
					<Y>8.1514101</Y>
					<Z>0</Z>
					<R00>0.984807968</R00>
					<R01>-0.173647001</R01>
					<R02>0</R02>
					<R10>0.173647001</R10>
					<R11>0.984807968</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.75</X>
					<Y>1.25</Y>
					<Z>0.75</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXFECEF4416D804CCEB69AC26E2601EEC5">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxassetid://527171501</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>rbxassetid://527172181</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBXCA3E37695B8743CEAA20099C33AA9420">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">FlyScript</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool.Handle

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ToolEquipped = false

Remotes = Tool:WaitForChild("Remotes")

ServerControl = (Remotes:FindFirstChild("ServerControl") or Instance.new("RemoteFunction"))
ServerControl.Name = "ServerControl"
ServerControl.Parent = Remotes

ClientControl = (Remotes:FindFirstChild("ClientControl") or Instance.new("RemoteFunction"))
ClientControl.Name = "ClientControl"
ClientControl.Parent = Remotes

Duration = 30
CoolDownTime = 15

Using = false
TransparentParts = {}

Handle.Transparency = 0
Tool.Enabled = true

function CoolDown()
	Using = false
	for i, v in pairs({FlightPower, FlightSpin, FlightHold}) do
		if v and v.Parent then
			v:Destroy()
		end
	end
	for i,v in pairs({GhostItemAdded, GhostItemRemoved}) do
		if v then
			v:disconnect()
		end
	end
	for i, v in pairs(TransparentParts) do
		if v and v.Part and v.Part.Parent then
			v.Part.Transparency = v.Transparency
		end
	end
	TransparentParts = {}
	Spawn(function()
		InvokeClient("Fly", {Flying = false})
	end)
	wait(CoolDownTime)
	Tool.Enabled = true 
	Handle.Transparency = 0
end

function SetTransparency(PrimaryParent, Transparency)
	local Parts = {}
	local function SetParentTransparency(Parent)
		for i, v in pairs(Parent:GetChildren()) do
			if v ~= Tool then
				if v.Name ~= "HumanoidRootPart" then
					local ItemTransparent = false
					for ii, vv in pairs(TransparentParts) do
						if vv and vv.Part and vv.Part == v then
							ItemTransparent = true
						end
					end
					if not ItemTransparent then
						pcall(function()
							table.insert(Parts, {Part = v, Transparency = v.Transparency})
							v.Transparency = Transparency
						end)
					end
				end
				SetParentTransparency(v, Transparency)
			end
		end
	end
	SetParentTransparency(PrimaryParent)
	return Parts
end

function Activated()
	if not ToolEquipped or not CheckIfAlive() or not Tool.Enabled or Using then
		return
	end
	
	FlightSpin = Torso:FindFirstChild("FlightSpin")
	FlightPower = Torso:FindFirstChild("FlightPower")
	FlightHold = Torso:FindFirstChild("FlightHold")
	if FlightSpin or FlightPower or FlightHold then
		return
	end
	
	Tool.Enabled = false
	
	Using = true
	
	Handle.Transparency = 1
	
	FlightHold = Instance.new("BodyPosition")
	FlightHold.Name = "FlightHold"
	FlightHold.P = 100000
	FlightHold.maxForce = Vector3.new(0, 0, 0)
	FlightHold.position = Torso.Position
	FlightHold.Parent = Torso
	
	FlightPower = Instance.new("BodyVelocity")
	FlightPower.Name = "FlightPower"
	FlightPower.velocity = Vector3.new(0, 0, 0)
	FlightPower.P = 1000000
	FlightPower.maxForce = Vector3.new(FlightPower.P, FlightPower.P, FlightPower.P)
	FlightPower.P = 10000
	FlightPower.Parent = Torso
	
	FlightSpin = Instance.new("BodyGyro")
	FlightSpin.Name = "FlightSpin"
	FlightSpin.P = 1000000
	FlightSpin.maxTorque = Vector3.new(FlightSpin.P, FlightSpin.P, FlightSpin.P)
	FlightSpin.cframe = Torso.CFrame
	FlightSpin.Parent = Torso
	
	Torso.Velocity = Vector3.new(0, 0, 0)
	Torso.RotVelocity = Vector3.new(0, 0, 0)
	
	Spawn(function()
		InvokeClient("Fly", {Flying = true})
	end)
	
	local BaseTransparency = 0.8
	TransparentParts = SetTransparency(Character, BaseTransparency)
	GhostItemAdded = Character.ChildAdded:connect(function(Child)
		for i, v in pairs(SetTransparency(Child, BaseTransparency)) do
			table.insert(TransparentParts, v)
		end
	end)
	GhostItemRemoved = Character.ChildRemoved:connect(function(Child)
		for i, v in pairs(Child:GetChildren()) do
			for ii, vv in pairs(TransparentParts) do
				if vv.Part == v then
					vv.Part.Transparency = vv.Transparency
					table.remove(TransparentParts, ii)
				end
			end
		end
	end)
	
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	
	wait(Duration)
	
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	
	if not ToolEquipped or not CurrentlyEquipped then
		return
	end
	
	CoolDown()
		
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	Player = Players:GetPlayerFromCharacter(Character)
	if not CheckIfAlive() then
		return
	end
	ToolEquipped = true
end

function Unequipped()
	Spawn(function()
		for i, v in pairs({FlightPower, FlightSpin, FlightHold}) do
			if v and v.Parent then
				v:Destroy()
			end
		end
		CoolDown()
	end)
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

Tool.Changed:connect(function(Property)
	Handle.Transparency = ((Players:GetPlayerFromCharacter(Tool.Parent) and ((Using and 1) or 0)) or 0)
end)

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX1B8DC0D6D938400EA35C1DEF4CCC84B4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")

Animations = {}


AnimationsBin = Tool:WaitForChild("Animations")
Anims = {
	R6Idle = {Animation = AnimationsBin:WaitForChild("R6Idle"), FadeTime = nil, Weight = nil, Speed = nil},
	R15Idle = {Animation = AnimationsBin:WaitForChild("R15Idle"), FadeTime = nil, Weight = nil, Speed = nil},
}

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

CamSpeedZ = 60
CamSpeedX = 40

Controls = {
	Forward = false,
	Backwardward = false,
	Left = false,
	Right = false,
}

hover = -0.1

Rate = (1 / 60)

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function HandleMovementFrame()
	local NewPush = Vector3.new(0, 0, 0)
	local Camera = game:GetService("Workspace").CurrentCamera
	local ForwardVector = Camera.CoordinateFrame:vectorToWorldSpace(Vector3.new(0, 0, -1))

	if Controls.Forward and not Controls.Backward then
		NewPush = (ForwardVector * CamSpeedZ)
	end
	if Controls.Backward and not Controls.Forward then
		NewPush = (NewPush + ForwardVector * -CamSpeedZ)
	end
	if Controls.Left and not Controls.Right then
		NewPush = (NewPush + Camera.CoordinateFrame:vectorToWorldSpace(Vector3.new(-1, 0, 0)) * CamSpeedX)
	end
	if Controls.Right and not Controls.Left then
		NewPush = (NewPush + Camera.CoordinateFrame:vectorToWorldSpace(Vector3.new(1, 0, 0)) * CamSpeedX)
	end

	FlightSpin.cframe = CFrame.new(Vector3.new(0, 0, 0), ForwardVector) --Have torso face forward
	if NewPush.Magnitude < 1 then
		FlightHold.maxForce = Vector3.new(FlightHold.P, FlightHold.P, FlightHold.P)
		FlightPower.maxForce = Vector3.new(0, 0, 0)
		if Torso then
			FlightHold.position = Torso.Position
		end
	else
		FlightHold.maxForce = Vector3.new(0, 0, 0)
		FlightPower.maxForce = Vector3.new((FlightPower.P * 100), (FlightPower.P * 100), (FlightPower.P * 100))
	end
	FlightPower.velocity = NewPush
end

function KeyPressed(Key, Down)	
	local Key = string.lower(Key)
	if Key == "w" then
		Controls.Forward = Down
	elseif Key == "a" then
		Controls.Left = Down
	elseif Key == "s" then
		Controls.Backward = Down
	elseif Key == "d" then
		Controls.Right = Down
	end	
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	PlayerMouse.KeyDown:connect(function(Key)
		KeyPressed(Key, true)
	end)
	PlayerMouse.KeyUp:connect(function(Key)
		KeyPressed(Key, false)
	end)
end

function Unequipped()
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs(Controls) do
		Controls[i] = false
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	elseif mode == "Fly" then
		local Flying = value.Flying
		if not Flying then
			if FlyLoop then
				FlyLoop:disconnect()
			end
			SetAnimation("StopAnimation", Anims.R6Idle)
			SetAnimation("StopAnimation", Anims.R15Idle)
			CurrentlyFlying = false
		elseif Flying then
			if FlyLoop then
				FlyLoop:disconnect()
			end
			CurrentlyFlying = true
			FlightPower = Torso:FindFirstChild("FlightPower")
			FlightSpin = Torso:FindFirstChild("FlightSpin")
			FlightHold = Torso:FindFirstChild("FlightHold")
			if Humanoid.RigType == Enum.HumanoidRigType.R6 then
				SetAnimation("PlayAnimation", Anims.R6Idle)
			else
				SetAnimation("PlayAnimation", Anims.R15Idle)
			end
			FlyLoop = RunService.RenderStepped:connect(function(Step)
				if not CurrentlyFlying then
					FlyLoop:disconnect()
				end
				HandleMovementFrame()
			end)
		end
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXA6C9C38628084068BD258143C41A5071">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX8E840A7654E04DC1B6799E2945587D33">
			<Properties>
				<string name="Name">Remotes</string>
			</Properties>
			<Item class="RemoteFunction" referent="RBXEE9207B852F14E16A23260A385CA3081">
				<Properties>
					<string name="Name">ServerControl</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXC424A902829D4092BD157117E8BB0836">
				<Properties>
					<string name="Name">ClientControl</string>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX921F13D7F2854510A966B806AF4A104F">
			<Properties>
				<string name="Name">Animations</string>
			</Properties>
			<Item class="Animation" referent="RBX1FF76D2D7F3A4596AF146ADBEC008323">
				<Properties>
					<Content name="AnimationId"><url>rbxassetid://522342800</url></Content>
					<string name="Name">R6Idle</string>
				</Properties>
			</Item>
			<Item class="Animation" referent="RBX374C9CC0B4FC4F9080905489C57C7668">
				<Properties>
					<Content name="AnimationId"><url>rbxassetid://522345122</url></Content>
					<string name="Name">R15Idle</string>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX7D19E9981D53445BAE05F7DDC9D1470E">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>0.151700541</X>
					<Y>8.57614899</Y>
					<Z>2.63541603</Z>
					<R00>0.999780655</R00>
					<R01>0.0029899145</R01>
					<R02>-0.0207285266</R02>
					<R10>-2.32830644e-010</R10>
					<R11>0.989756644</R11>
					<R12>0.142764017</R12>
					<R20>0.0209430531</R20>
					<R21>-0.14273271</R21>
					<R22>0.989539623</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">29.9999981</float>
				<CoordinateFrame name="Focus">
					<X>0.193157613</X>
					<Y>8.2906208</Y>
					<Z>0.656335831</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>