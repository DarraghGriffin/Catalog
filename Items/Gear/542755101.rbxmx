<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX69ED5F5A992648D688D2227C3690D79A">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.300000012</Y>
				<Z>0.75</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">8BitGun</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>rbxassetid://542125113</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX4D0D8F37A0FD4860BE7146B75A68E1C2">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.13727662</X>
					<Y>8.0965395</Y>
					<Z>-0.0882470682</Z>
					<R00>0.539850831</R00>
					<R01>0.405447304</R01>
					<R02>0.73768127</R02>
					<R10>0</R10>
					<R11>0.876355112</R11>
					<R12>-0.48166573</R12>
					<R20>-0.841760695</R20>
					<R21>0.260027647</R21>
					<R22>0.47310102</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.5</X>
					<Y>1.125</Y>
					<Z>2.29999995</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX380AE5BA71224C6699441E2EE5733ECC">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxassetid://542124581</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5</X>
						<Y>0.5</Y>
						<Z>0.5</Z>
					</Vector3>
					<Content name="TextureId"><url>rbxassetid://542125034</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXBC3AB1F8275E4B93A7245D8DD1CAD853">
				<Properties>
					<float name="EmitterSize">10</float>
					<bool name="Looped">false</bool>
					<string name="Name">Shot</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">1.20000005</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=11944350</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">1</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBX8245BC5905B9498D83A5471862A8E10C">
			<Properties>
				<string name="Name">Remotes</string>
			</Properties>
			<Item class="RemoteFunction" referent="RBXA5EEACE0E2BA47E292674FB63E9CFB5B">
				<Properties>
					<string name="Name">ServerControl</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXA33191B2C1C54D0D9FC552C21D9FF328">
				<Properties>
					<string name="Name">ClientControl</string>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX840E062EF073489F8B26C258125304AC">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

Animations = {}
LocalObjects = {}

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	ToolEquipped = false
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs(LocalObjects) do
		if v.Object then
			v.Object.LocalTransparencyModifier = 0
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	LocalObjects = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					local Camera = game:GetService("Workspace").CurrentCamera
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							local ViewDistance = (Camera.CoordinateFrame.p - Head.Position).Magnitude
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or CurrentTransparency == 0)) or v.AutoUpdate) then
								if ((v.Distance and ViewDistance <= v.Distance) or not v.Distance) then
									v.Object.LocalTransparencyModifier = v.Transparency
								else
									v.Object.LocalTransparencyModifier = 0
								end
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXBFE9310838E84CB5A72DEF6FB851E6C9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXB0A9810ED2BF4B029A9409BF988E72C5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Functions = require(script:WaitForChild("Functions"))
Sparks = script:WaitForChild("Sparks")

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

PopUp = BasePart:Clone()
PopUp.Name = "Effect"
PopUp.CanCollide = false
Create("SpecialMesh"){
	Name = "Mesh",
	MeshId = "",
	TextureId = (BaseUrl .. "542124984"),
	Scale = Vector3.new(1, 1, 1),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = PopUp,
}

Animations = {}

Sounds = {
	Shot = Handle:WaitForChild("Shot"),
}

Configuration = {
	Damage = {
		Base = 8,
		Distance = {Min = 0, Max = 0},
		Multiplier = 0.30,
		Critical = {Chance = 8, Damage = {Min = 8, Max = 14}},
	},
	--WindVec = Vector3.new(2, 1, 1).Unit,
	Accuracy = 0.375,
	Spread = 0,
	Color = BrickColor.new("Really red"),
	FireRate = 0.2,
	Burst = 1,
	Range = 135,
	FadeRate = 1.125,
	Clips = {Amount = 0, Rate = 0.5},
	FiringOffset = CFrame.new(0, 0.4, (-(Handle.Size.Z / 2) - 0.05)),
}

ShotsFired = 0

ToolEquipped = false

Remotes = Tool:WaitForChild("Remotes")
ServerControl = (Remotes:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Remotes,
})
ClientControl = (Remotes:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Remotes,
})

for i, v in pairs(Tool:GetChildren()) do
	if v:IsA("BasePart") and v ~= Handle then
		v:Destroy()
	end
end

Handle.Transparency = 0
Tool.Enabled = true

function Clamp(Number, Min, Max)
	return math.max(math.min(Max, Number), Min)
end

function GetPercentage(Start, End, Number)
	return (((Number - Start) / (End - Start)) * 100)
end

function Round(Number, RoundDecimal)
	local WholeNumber, Decimal = math.modf(Number)
	return ((Decimal >= RoundDecimal and math.ceil(Number)) or (Decimal < RoundDecimal and math.floor(Number)))
end

function DisplayPopUp()
	for i, v in pairs(Character:GetChildren()) do
		if v.Name == PopUp.Name then
			v:Destroy()
		end
	end
	local PopUpMeshes = {542124360, 542124458, 542124690, 542124783}
	TempPopUp = PopUp:Clone()
	TempPopUp.Mesh.MeshId = (BaseUrl .. PopUpMeshes[math.random(1, #PopUpMeshes)])
	TempPopUp.Mesh.VertexColor = Vector3.new(math.random(), math.random(), (0.25 + math.random()))
	TempPopUp.Mesh.Offset = Vector3.new(0, ((Head.Size.Y / 2) + 1), 0)
	Create("Weld"){
		Name = "Weld",
		Part0 = Head,
		Part1 = TempPopUp,
		C0 = CFrame.new(0, 0, 0),
		C1 = CFrame.new(0, 0, 0),
		Parent = TempPopUp,
	}
	Debris:AddItem(TempPopUp, 2)
	TempPopUp.Parent = Character
end

function LaserTouched(Hit, StartPos, EndPos)
	if not Hit or not Hit.Players then
		return
	end
	local HitObject = Hit.Object
	if HitObject and HitObject.Parent then
		local HitCharacter = HitObject.Parent
		if HitCharacter:IsA("Hat") or HitCharacter:IsA("Tool") then
			HitCharacter = HitCharacter.Parent
		end
		local HitHumanoid = nil
		for i, v in pairs(HitCharacter:GetChildren()) do
			if v:IsA("Humanoid") then
				HitHumanoid = v
			end
		end
		if not HitHumanoid then
			local ParticlePart = BasePart:Clone()
			ParticlePart.Name = "Effect"
			ParticlePart.Transparency = 1
			ParticlePart.Anchored = true
			ParticlePart.CanCollide = false
			local Color = Configuration.Color
			local Particles = Sparks:Clone()
			Particles.Color = ColorSequence.new(Color.Color, Color.Color)
			Particles.Enabled = true
			local Duration = Create("NumberValue"){
				Name = "Duration",
				Value = 0.5,
				Parent = Particles,
			}
			local ParticleScript = Particles:FindFirstChild("ParticleScript")
			if ParticleScript then
				ParticleScript.Disabled = false
			end
			Particles.Parent = ParticlePart
			Debris:AddItem(ParticlePart, 1.5)
			ParticlePart.Parent = game:GetService("Workspace")
			ParticlePart.CFrame = ((CFrame.new(EndPos, StartPos) * CFrame.new(0, ParticlePart.Size.Y, 0)) * CFrame.Angles(-(math.pi / 2), 0, 0))
		end
	end
	if #Hit.Players > 0 then
		DisplayPopUp()
	end
	for i, v in pairs(Hit.Players) do
		if v.Humanoid and v.Hit then
			local humanoid = v.Humanoid
			local character = humanoid.Parent
			local torso = character:FindFirstChild("Torso")
			if not humanoid or humanoid.Health == 0 or not torso then
				return
			end
			local player = Players:GetPlayerFromCharacter(character)
			if player and Functions.IsTeamMate(Player, player) then
				return
			end
			local RayDistance = (StartPos - EndPos).Magnitude
			local Damage = Configuration.Damage
			local DistanceDamage = Round(Clamp(GetPercentage(0, (Configuration.Range / 2), RayDistance), Damage.Distance.Min, Damage.Distance.Max), 0.5)
			local DeterminedDamage = (Damage.Base)
			DeterminedDamage = (DeterminedDamage + DistanceDamage)
			local CriticalChance = math.random(1, Damage.Critical.Chance)
			if CriticalChance == 1 then
				DeterminedDamage = (DeterminedDamage + math.random(Damage.Critical.Damage.Min, Damage.Critical.Damage.Max))
			end
			if v.Hit.Name == "Head" then
				DeterminedDamage = Clamp((DeterminedDamage * (1 + Damage.Multiplier)), 0, 100)
			end
			local HealthAfter = (humanoid.Health - DeterminedDamage)
			Functions.UntagHumanoid(humanoid)
			Functions.TagHumanoid(humanoid, Player)
			humanoid:TakeDamage(DeterminedDamage)
			if HealthAfter <= 0 then
			end
		end
	end
end

function Reload(Override)
	if not Override and not Tool.Enabled then
		return
	end
	Tool.Enabled = false
	wait(Configuration.FireRate / 2)
	--Sounds.Reload2:Play()
	wait(Configuration.FireRate / 2)
	ShotsFired = 0
	Tool.Enabled = true
end

function FireLaser(StartPosition, TargetPosition)
	local Direction = CFrame.new(StartPosition, TargetPosition)
	local Spread = (Configuration.Spread * 100)
	local SpreadVector = (Vector3.new(math.rad(math.random(-Spread, Spread)), math.rad(math.random(-Spread, Spread)), math.rad(math.random(-Spread, Spread))) * 0.01)
	Direction = (Direction * CFrame.Angles(SpreadVector.X, SpreadVector.Y, SpreadVector.Z)).lookVector
	local RayHit, RayPos, RayNormal = Functions.CastRay(StartPosition, Direction, Configuration.Range, {Character}, false)
	local RayLength = (StartPosition - RayPos).Magnitude
	Direction = CFrame.new(StartPosition, RayPos)
	local Accuracy = (Configuration.Accuracy * 100)
	TargetPosition = (TargetPosition + (Vector3.new(math.random(-Accuracy, Accuracy), math.random(-Accuracy, Accuracy), math.random(-Accuracy, Accuracy)) * 0.01))
	local Laser = BasePart:Clone()
	local FadeDuration = Configuration.FadeRate
	local FadeRate = 10
	local Laser = BasePart:Clone()
	Laser.Name = "Laser"
	Laser.BrickColor = Configuration.Color
	Laser.Transparency = 0
	Laser.Material = Enum.Material.Neon
	Laser.Size = Vector3.new(0.2, 0, RayLength)
	Laser.CFrame = (Direction * CFrame.new(0, 0, -(RayLength / 2)))
	Laser.Anchored = true
	Laser.CanCollide = false
	local Mesh = Create("CylinderMesh"){
		Name = "Mesh",
		Scale = Vector3.new(1, 1, 1),
		VertexColor = Vector3.new(1, 1, 1),
		Parent = Laser,
	}
	for i, v in pairs({"Top", "Bottom", "Left", "Right", "Front", "Back"}) do
		local Light = Create("SurfaceLight"){
			Name = "Light",
			Color = Laser.BrickColor.Color,
			Face = Enum.NormalId[v],
			Brightness = 100,
			Range = 3,
			Shadows = false,
			Enabled = true,
			Parent = Laser,
		}
	end
	local OrigCF = Laser.CFrame
	Laser.Size = Vector3.new(Laser.Size.X, Laser.Size.Z, Laser.Size.Y)
	Laser.CFrame = (OrigCF * CFrame.Angles((math.pi / 2), 0, 0))
	Debris:AddItem(Laser, FadeDuration)
	Laser.Parent = game:GetService("Workspace")
	LaserTouched(RayHit, StartPosition, RayPos)
	Spawn(function()
		local FadeRate = 0.05
		local TimeToFade = 0.4
		local OrigTransparency = Laser.Transparency
		local TotalFade = (TimeToFade / FadeRate)
		for i = 1, TotalFade do
			if not Laser or not Laser.Parent or Laser.Transparency >= 1 then
				break
			end
			wait(FadeRate)
			--Laser.CFrame = (Laser.CFrame + Configuration.WindVec * FadeRate)
			Laser.Transparency = (OrigTransparency + (i / (TimeToFade / FadeRate)))
			for ii, vv in pairs(Laser:GetChildren()) do
				if vv:IsA("Light") then
					vv.Brightness = (50 - (50 * (GetPercentage(0, 1, Laser.Transparency) * 0.01)))
					if vv.Brightness <= 0 then
						vv.Enabled = false
					end
				--[[elseif vv:IsA("DataModelMesh") then
					local NewScale = (1 - (1 * (GetPercentage(0, 1, Laser.Transparency) * 0.01)))
					vv.Scale = Vector3.new(NewScale, vv.Scale.Y, NewScale)]]
				end
			end
		end
	end)
end

function Activated()
	local MouseData = InvokeClient("MouseData")
	if not Tool.Enabled or not CheckIfAlive() or not MouseData or not MouseData.Position then
		return
	end
	Tool.Enabled = false
	local FireSound = Sounds.Shot:Clone()
	Debris:AddItem(FireSound, 1.25)
	FireSound.Parent = Handle
	FireSound:Play()
	local StartPosition = (Handle.CFrame * Configuration.FiringOffset).p
	local TargetPosition = MouseData.Position
	local Direction = CFrame.new(StartPosition, TargetPosition).lookVector
	local Distance = (StartPosition - TargetPosition).Magnitude
	if Distance > Configuration.Range then
		TargetPosition = (CFrame.new(StartPosition) + Direction * Configuration.Range).p
	end
	--[[Spawn(function()
		InvokeClient("PlayAnimation", Animations.Fire)
	end)]]
	for i = 1, Configuration.Burst do
		FireLaser(StartPosition, TargetPosition)
	end
	ShotsFired = (ShotsFired + 1)
	if ShotsFired >= Configuration.Clips.Amount then
		Reload(true)
	else
		wait(Configuration.Clips.Rate)
	end
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	if not CheckIfAlive() then
		return
	end
	--Sounds.Equip:Play()
	--[[Spawn(function()
		local Limbs = {"Left Arm", "Right Arm"}
		for i, v in pairs(Limbs) do
			local Limb = Character:FindFirstChild(v)
			Spawn(function()
				InvokeClient("SetLocalTransparencyModifier", {Object = Limb, Transparency = 0, AutoUpdate = true})
			end)
		end
		InvokeClient("PlayAnimation", Animations.Equip)
	end)]]
	ToolEquipped = true
end

function Unequipped()
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
	if mode == "KeyPress" then
		local Key = value.Key
		local Down = value.Down
		if Key == "r" and Down then
			Reload(false)
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="ParticleEmitter" referent="RBX2A4EA62DC72E4F92A478E963466512F1">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 1 1 1 0 1 1 1 1 0 </ColorSequence>
					<float name="Drag">0</float>
					<token name="EmissionDirection">1</token>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">0.5 0.5 </NumberRange>
					<float name="LightEmission">1</float>
					<bool name="LockedToPart">false</bool>
					<string name="Name">Sparks</string>
					<float name="Rate">100</float>
					<NumberRange name="RotSpeed">0 0 </NumberRange>
					<NumberRange name="Rotation">0 0 </NumberRange>
					<NumberSequence name="Size">0 0.1 0 1 0.1 0 </NumberSequence>
					<NumberRange name="Speed">2.5 2.5 </NumberRange>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=277951744</url></Content>
					<NumberSequence name="Transparency">0 0.25 0 1 0.25 0 </NumberSequence>
					<float name="VelocityInheritance">0</float>
					<float name="VelocitySpread">25</float>
					<float name="ZOffset">0</float>
				</Properties>
				<Item class="Script" referent="RBX35DDDECF15F74CC28A5EE6E658C15046">
					<Properties>
						<bool name="Disabled">true</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ParticleScript</string>
						<string name="ScriptGuid"></string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Particle = script.Parent

Duration = Particle:WaitForChild("Duration")

wait(Duration.Value)

Particle.Enabled = false
]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBXDE62CE86A8714C03B11644D847698A70">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {
	
	CheckTableForInstance = (function(Table, Instance)
		for i, v in pairs(Table) do
			if v == Instance then
				return true
			end
		end
		return false
	end),
	
	CheckTableForString = (function(Table, String)
		for i, v in pairs(Table) do
			if string.lower(v) == string.lower(String) then
				return true
			end
		end
		return false
	end),
	
	CheckIntangible = (function(Hit, IgnoreHumanoids)
		local ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Ray", "Bullet", "ParticlePart"}
		if not Hit or not Hit.Parent then
			return true
		end
		local character = Hit.Parent
		if character:IsA("Hat") or character:IsA("Tool") then
			character = character.Parent
		end
		local humanoid = nil
		for i, v in pairs(character:GetChildren()) do
			if v:IsA("Humanoid") then
				humanoid = v
				break
			end
		end
		if not IgnoreHumanoids and humanoid then
			return
		end
		if ((humanoid or (Hit.Transparency >= 1 and not Hit.CanCollide) or Functions.CheckTableForString(ProjectileNames, Hit.Name))) then
			return true
		end
		return false
	end),
	
	CastRay = (function(StartPos, Vec, Length, Ignore, DelayIfHit, HitObjects)
		local MaxPlayersHit = 1
		local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
		local HitObjects = (HitObjects or {Object = RayHit, Players = {}})
		HitObjects.Object = RayHit
		if RayHit and Functions.CheckIntangible(RayHit, (#HitObjects.Players < MaxPlayersHit)) then
			local character = RayHit.Parent
			local humanoid = nil
			for i, v in pairs(character:GetChildren()) do
				if v:IsA("Humanoid") then
					humanoid = v
					break
				end
			end
			local HumanoidFound = false
			for i, v in pairs(HitObjects.Players) do
				if v.Humanoid == humanoid then
					HumanoidFound = true
				end
			end
			if humanoid and not HumanoidFound and #HitObjects.Players < MaxPlayersHit then
				table.insert(HitObjects.Players, {Hit = RayHit, Humanoid = humanoid})
			end
			if DelayIfHit then
				wait()
			end
			RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).Magnitude)), Ignore, DelayIfHit, HitObjects)
		end
		return HitObjects, RayPos, RayNormal
	end),

	TagHumanoid = (function(humanoid, player)
		local Creator_Tag = Create("ObjectValue"){
			Name = "creator",
			Value = player,
		}
		Debris:AddItem(Creator_Tag, 2)
		Creator_Tag.Parent = humanoid
	end),
	
	UntagHumanoid = (function(humanoid)
		for i, v in pairs(humanoid:GetChildren()) do
			if v:IsA("ObjectValue") and v.Name == "creator" then
				v:Destroy()
			end
		end
	end),
	
	IsTeamMate = (function(Player1, Player2)
		return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
	end),
	
}

return Functions]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBXFFE9CB935EAC40388796A7A41CAEA0E5">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>0.761668444</X>
					<Y>9.21066856</Y>
					<Z>-3.91059256</Z>
					<R00>-0.978147686</R00>
					<R01>-0.0499755964</R01>
					<R02>0.201815709</R02>
					<R10>3.7252903e-009</R10>
					<R11>0.970681429</R11>
					<R12>0.240369737</R12>
					<R20>-0.207911372</R20>
					<R21>0.235117108</R21>
					<R22>-0.949469805</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">29.9999981</float>
				<CoordinateFrame name="Focus">
					<X>0.438762903</X>
					<Y>8.82607651</Y>
					<Z>-2.39143896</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>