<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXD0316CE553EC4F32B7E4B8AD5A4361E6">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>-0.5</Y>
				<Z>-0.0500000007</Z>
				<R00>-1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>-1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">QuantumEntangler </string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=72618529 </url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX1FCF3505B953460AAB48BA1694229A42">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>14.9593372</X>
					<Y>2.5113678</Y>
					<Z>-21.9699554</Z>
					<R00>-1.54972076e-006</R00>
					<R01>0.161241323</R01>
					<R02>0.986914992</R02>
					<R10>-2.29477882e-006</R10>
					<R11>0.986914992</R11>
					<R12>-0.161241293</R12>
					<R20>-1</R20>
					<R21>-2.62260437e-006</R21>
					<R22>-1.1920929e-006</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.759997845</X>
					<Y>1.95999861</Y>
					<Z>0.370000005</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXF21A5A1640A34FCA9F1024E00C26419B">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=72603563 </url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=72603603 </url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBXF03367E14F39470681D302211238686D">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">EntanglerScript</string>
				<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)
InsertService = game:GetService(&quot;InsertService&quot;)

InfoGui = script:WaitForChild(&quot;InfoGui&quot;)
AIScript = script:WaitForChild(&quot;AIScript&quot;)

CloneId = 68452456
CloneModel = InsertService:LoadAsset(CloneId)
Clone = CloneModel:GetChildren()[1]:Clone()
if CloneModel and CloneModel.Parent then
&#9;CloneModel:Destroy()
end

CloneValue = Instance.new(&quot;ObjectValue&quot;)
CloneValue.Changed:connect(function()
&#9;if not InfoGuiClone or not InfoGuiClone.Parent then
&#9;&#9;return
&#9;end
&#9;local Frame = InfoGuiClone:FindFirstChild(&quot;Frame&quot;)
&#9;if not Frame then
&#9;&#9;return
&#9;end
&#9;local TextLabel = Frame:FindFirstChild(&quot;TextLabel&quot;)
&#9;if not TextLabel then
&#9;&#9;return
&#9;end
&#9;TextLabel.Text = ((CloneValue.Value and &quot;Press Q/E to swap with your double!&quot;) or &quot;Summon your double!&quot;)
end)

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Shape = Enum.PartType.Block
BasePart.Material = Enum.Material.Plastic
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.Locked = true
BasePart.CanCollide = true
BasePart.Anchored = false

ShockWave = BasePart:Clone()
ShockWave.Size = Vector3.new(1, 0.2, 1)
ShockWave.Transparency = 1
ShockWave.Anchored = true
ShockWave.CanCollide = false
TopDecal = Instance.new(&quot;Decal&quot;)
TopDecal.Specular = 20
TopDecal.Face = Enum.NormalId.Top
TopDecal.Texture = &quot;http://www.roblox.com/asset/?version=1&amp;id=72634953&quot;
TopDecal.Parent = ShockWave
BottomDecal = TopDecal:Clone()
BottomDecal.Face = Enum.NormalId.Bottom
BottomDecal.Parent = ShockWave
Mesh = Instance.new(&quot;BlockMesh&quot;)
Mesh.Parent = ShockWave

Animations = {
&#9;Stab = {Animation = Tool:WaitForChild(&quot;Stab&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil},
&#9;Rage = {Animation = Tool:WaitForChild(&quot;Rage&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

ShockDamage = 14

CanSwap = true
CanExplode = true
ToolEquipped = false

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Enabled = true

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function IsTeamMate(Player1, Player2)
&#9;return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function SpawnClone(character, torso)
&#9;
&#9;if not character then
&#9;&#9;return
&#9;end
&#9;
&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if not humanoid or humanoid.Health == 0 then
&#9;&#9;return
&#9;end

&#9;PlayerClone = Clone:Clone()
&#9;PlayerClone.Name = character.Name
&#9;
&#9;CloneValue.Value = PlayerClone
&#9;
&#9;local ThisClone = PlayerClone
&#9;
&#9;local CloneHumanoid = PlayerClone:FindFirstChild(&quot;Humanoid&quot;)
&#9;if CloneHumanoid then
&#9;&#9;CloneHumanoid.Died:connect(function()
&#9;&#9;&#9;Debris:AddItem(PlayerClone, 2)
&#9;&#9;end)
&#9;&#9;PlayerClone.Changed:connect(function(Property)
&#9;&#9;&#9;if Property == &quot;Parent&quot; and not PlayerClone.Parent then
&#9;&#9;&#9;&#9;if CloneValue.Value == ThisClone then
&#9;&#9;&#9;&#9;&#9;CloneValue.Value = nil
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
&#9;
&#9;local Target = Instance.new(&quot;ObjectValue&quot;)
&#9;Target.Name = &quot;Target&quot;
&#9;Target.Value = humanoid
&#9;Target.Parent = PlayerClone
&#9;
&#9;local AIScriptClone = AIScript:Clone()
&#9;AIScriptClone.Disabled = false
&#9;AIScriptClone.Parent = PlayerClone
&#9;
&#9;for i, v in pairs(character:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;for ii, vv in pairs(PlayerClone:GetChildren()) do
&#9;&#9;&#9;&#9;if v:IsA(&quot;BasePart&quot;) and v.Name == vv.Name then
&#9;&#9;&#9;&#9;&#9;vv.BrickColor = v.BrickColor
&#9;&#9;&#9;&#9;&#9;for iii, vvv in pairs(vv:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;if not vvv:IsA(&quot;JointInstance&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;vvv:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;for iii, vvv in pairs(v:GetChildren()) do
&#9;&#9;&#9;&#9;&#9;&#9;if vvv:IsA(&quot;FaceInstance&quot;) or vvv:IsA(&quot;DataModelMesh&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;local Object = vvv:Clone()
&#9;&#9;&#9;&#9;&#9;&#9;&#9;Object.Parent = vv
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;elseif v:IsA(&quot;Clothing&quot;) or v:IsA(&quot;Hat&quot;) or v:IsA(&quot;CharacterMesh&quot;) then
&#9;&#9;&#9;local Object = v:Clone()
&#9;&#9;&#9;Object.Parent = PlayerClone
&#9;&#9;end
&#9;end&#9;
&#9;
&#9;Debris:AddItem(PlayerClone, 60)
&#9;PlayerClone.Parent = game:GetService(&quot;Workspace&quot;)
&#9;PlayerClone:MoveTo(Torso.Position + Vector3.new(5, 0, 5))
&#9;
end

function Swap()
&#9;if not PlayerClone or not PlayerClone.Parent or not CheckIfAlive() or not CanSwap then
&#9;&#9;return
&#9;end
&#9;local humanoid = PlayerClone:FindFirstChild(&quot;Humanoid&quot;)
&#9;local torso = PlayerClone:FindFirstChild(&quot;Torso&quot;)
&#9;if not humanoid or humanoid.Health == 0 or not torso then
&#9;&#9;return
&#9;end
&#9;CanSwap = false
&#9;local myCFrame = Torso.CFrame
&#9;local cloneCFrame = torso.CFrame
&#9;Torso.CFrame = CFrame.new(cloneCFrame.p, cloneCFrame.p + cloneCFrame.lookVector)
&#9;torso.CFrame = CFrame.new(myCFrame.p, myCFrame.p + myCFrame.lookVector)
&#9;wait(0.75)
&#9;CanSwap = true
end

function BlastHumanoids(torso)
&#9;if not torso then
&#9;&#9;return
&#9;end
&#9;local AOE = Vector3.new(10, 10, 10)&#9;
&#9;local Parts = game:GetService(&quot;Workspace&quot;):FindPartsInRegion3WithIgnoreList(Region3.new((torso.Position - AOE), (torso.Position + AOE)), {Character, PlayerClone}, 100)
&#9;for i, v in pairs(Parts) do
&#9;&#9;local character = v.Parent
&#9;&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;&#9;local IgnorePlayer = false
&#9;&#9;if player and IsTeamMate(Player, player) then
&#9;&#9;&#9;IgnorePlayer = true
&#9;&#9;end
&#9;&#9;if character and not IgnorePlayer then
&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 and torso then
&#9;&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;&#9;humanoid:TakeDamage(ShockDamage)
&#9;&#9;&#9;&#9;humanoid.Sit = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function Explode()
&#9;if not PlayerClone or not PlayerClone.Parent or not CheckIfAlive() or not CanExplode then
&#9;&#9;return
&#9;end
&#9;local humanoid = PlayerClone:FindFirstChild(&quot;Humanoid&quot;)
&#9;local torso = PlayerClone:FindFirstChild(&quot;Torso&quot;)
&#9;if not humanoid or humanoid.Health == 0 or not torso then
&#9;&#9;return
&#9;end
&#9;CanExplode = false
&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Rage)
&#9;wait(0.35)
&#9;local Blasted = false
&#9;Humanoid.WalkSpeed = 0
&#9;humanoid.WalkSpeed = 0
&#9;local ShockWaveDuration = 1
&#9;local ShockWaveTick = tick()
&#9;local ShockWaveClone = ShockWave:Clone()
&#9;local ShockWaveMesh = ShockWaveClone.Mesh
&#9;local ShockWaveClone2 = ShockWave:Clone()
&#9;local ShockWaveMesh2 = ShockWaveClone2.Mesh
&#9;Debris:AddItem(ShockWaveClone, ShockWaveDuration)
&#9;Debris:AddItem(ShockWaveClone2, ShockWaveDuration)
&#9;ShockWaveClone.Parent = game:GetService(&quot;Workspace&quot;)
&#9;ShockWaveClone2.Parent = game:GetService(&quot;Workspace&quot;)
&#9;ShockWaveClone.CFrame = Torso.CFrame
&#9;ShockWaveClone2.CFrame = torso.CFrame
&#9;while (tick() - ShockWaveTick) &lt; ShockWaveDuration and ShockWaveClone and ShockWaveClone.Parent do
&#9;&#9;ShockWaveMesh.Scale = Vector3.new((ShockWaveMesh.Scale.X + 1.1), 0.2, (ShockWaveMesh.Scale.Z + 1.1))
&#9;&#9;ShockWaveMesh2.Scale = Vector3.new((ShockWaveMesh2.Scale.X + 1.1), 0.2, (ShockWaveMesh2.Scale.Z + 1.1))
&#9;&#9;ShockWaveClone.CFrame = Torso.CFrame
&#9;&#9;ShockWaveClone2.CFrame = torso.CFrame
&#9;&#9;if (tick() - ShockWaveTick) &lt; 0.85 and not Blasted then
&#9;&#9;&#9;Blasted = true 
&#9;&#9;&#9;BlastHumanoids(torso)
&#9;&#9;&#9;BlastHumanoids(Torso)
&#9;&#9;end
&#9;&#9;wait()
&#9;end
&#9;for i, v in pairs({ShockWaveClone, ShockWaveClone2}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
&#9;Humanoid.WalkSpeed = 16
&#9;humanoid.WalkSpeed = 16
&#9;wait(7.5)
&#9;CanExplode = true
end
function CheckIfAlive()
&#9;return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Activated()
&#9;if not Tool.Enabled or not CheckIfAlive() or not ToolEquipped then 
&#9;&#9;return 
&#9;end
&#9;if PlayerClone and PlayerClone.Parent then
&#9;&#9;return
&#9;end
&#9;Tool.Enabled = false
&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Stab)
&#9;wait(0.5)
&#9;SpawnClone(Character, Torso)
&#9;wait(0.5)
&#9;Tool.Enabled = true
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerGui = Player:FindFirstChild(&quot;PlayerGui&quot;)
&#9;if PlayerGui then
&#9;&#9;InfoGuiClone = InfoGui:Clone()
&#9;&#9;InfoGuiClone.Frame.TextLabel.Text = &quot;Summon your double!&quot;
&#9;&#9;InfoGuiClone.Parent = PlayerGui
&#9;end
&#9;ToolEquipped = true
end

function Unequipped()
&#9;if InfoGuiClone and InfoGuiClone.Parent then
&#9;&#9;InfoGuiClone:Destroy()
&#9;end
&#9;ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
&#9;if player == Player and ToolEquipped and value and CheckIfAlive() then
&#9;&#9;if mode == &quot;KeyPress&quot; then
&#9;&#9;&#9;local Down = value.Down
&#9;&#9;&#9;local Key = value.Key
&#9;&#9;&#9;local ByteKey = string.byte(Key)
&#9;&#9;&#9;if (Key == &quot;q&quot; or Key == &quot;e&quot;) and Down then
&#9;&#9;&#9;&#9;Swap()
&#9;&#9;&#9;elseif Key == &quot;x&quot; and Down then
&#9;&#9;&#9;&#9;Explode()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke
Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX4E75FA0E1B9E473BB0152AF3F150642F">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">AIScript</string>
					<ProtectedString name="Source">--Fixed by Luckymaxer

Figure = script.Parent

Humanoid = Figure:WaitForChild(&quot;Humanoid&quot;)
Torso = Figure:WaitForChild(&quot;Torso&quot;)

Humanoid.MaxHealth = 350
Humanoid.Health = Humanoid.MaxHealth

local wanderTarget 
local wanderAngle 
local wanderConeSize = 6
local maxWanderAngle = 0.75 

function getWanderTarget()
&#9;math.random(tick())
&#9;wanderAngle = (math.random() - 0.5) * maxWanderAngle
&#9;local rotatedLookVector = CFrame.Angles(0, wanderAngle, 0) * Torso.CFrame.lookVector
&#9;return (Torso.Position + wanderConeSize * rotatedLookVector)
end

while true do  &#9;
&#9;local ray = game.Workspace:FindPartOnRay(Ray.new(Torso.Position, Torso.CFrame.lookVector * 5.0), nil)
&#9;if ray and Humanoid and ray.Parent ~= Figure then
&#9;&#9;Humanoid.Jump = true
&#9;end     
&#9;wanderTarget = getWanderTarget()&#9;
&#9;Humanoid:MoveTo(wanderTarget, Torso)
&#9;wait(0.125)
end</ProtectedString>
				</Properties>
			</Item>
			<Item class="ScreenGui" referent="RBX5CFDC6CC748447549EBD6E9F9402A766">
				<Properties>
					<string name="Name">InfoGui</string>
				</Properties>
				<Item class="Frame" referent="RBX804F555406B74332A5BCBEE6983387C0">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Frame</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-110</XO>
							<YS>1</YS>
							<YO>-130</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>220</XO>
							<YS>0</YS>
							<YO>30</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">3</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX4558180AE21C41898435B019E5066CC3">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">0</token>
							<token name="FontSize">2</token>
							<string name="Name">TextLabel</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Summon your double!</string>
							<Color3 name="TextColor3">4294934272</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">1</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXBD38EE1A4DAD414C9942E1B9DAEA9AC4">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=72635723</url></Content>
				<string name="Name">Rage</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXBBCC3A5DBB4A42BF905BAB0AC9039332">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
RunService = game:GetService(&quot;RunService&quot;)
ContextActionService = game:GetService(&quot;ContextActionService&quot;)
UserInputService = game:GetService(&quot;UserInputService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ReloadCounter = 0

ToolEquipped = false

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
&#9;if UserInputService.TouchEnabled then
&#9;&#9;ContextActionService:BindActionToInputTypes(&quot;Swap&quot;, function()
&#9;&#9;&#9;spawn(function() InvokeServer(&quot;KeyPress&quot;, {Key = &quot;q&quot;, Down = true}) end)
&#9;&#9;end, true, &quot;&quot;)
&#9;&#9;ContextActionService:SetTitle(&quot;Swap&quot;, &quot;Swap&quot;)
&#9;&#9;ContextActionService:BindActionToInputTypes(&quot;Explode&quot;, function()
&#9;&#9;&#9;spawn(function() InvokeServer(&quot;KeyPress&quot;, {Key = &quot;x&quot;, Down = true}) end)
&#9;&#9;end, true, &quot;&quot;)
&#9;&#9;ContextActionService:SetTitle(&quot;Explode&quot;, &quot;Explode&quot;)
&#9;end
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;if UserInputService.TouchEnabled then
&#9;&#9;ContextActionService:UnbindAction(&quot;Swap&quot;)
&#9;&#9;ContextActionService:UnbindAction(&quot;Explode&quot;)
&#9;end
&#9;Animations = {}
end

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function OnClientInvoke(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ClientControl.OnClientInvoke = OnClientInvoke</ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXB78F3C563B604396982EE9CB50C38421">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Mouse_Icon = &quot;rbxasset://textures/GunCursor.png&quot;
Reloading_Icon = &quot;rbxasset://textures/GunWaitCursor.png&quot;

Tool = script.Parent

Mouse = nil

function UpdateIcon()
&#9;if Mouse then
&#9;&#9;Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
&#9;end
end

function OnEquipped(ToolMouse)
&#9;Mouse = ToolMouse
&#9;UpdateIcon()
end

function OnChanged(Property)
&#9;if Property == &quot;Enabled&quot; then
&#9;&#9;UpdateIcon()
&#9;end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBXF5776286F9194958B57D7F8B31C92A74">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/Asset?ID=72635328</url></Content>
				<string name="Name">Stab</string>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXF3E1F4B580B54DA08FC39A18C037AC4E">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>16.6671314</X>
					<Y>2.44971085</Y>
					<Z>-21.8957901</Z>
					<R00>0.0125569599</R00>
					<R01>0.0662344992</R01>
					<R02>0.99772507</R02>
					<R10>-0</R10>
					<R11>0.997803807</R11>
					<R12>-0.0662397221</R12>
					<R20>-0.999921203</R20>
					<R21>0.000831769546</R21>
					<R22>0.0125293816</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>16.5075016</X>
					<Y>2.46030879</Y>
					<Z>-21.8977947</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>