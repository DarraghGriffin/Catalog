<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX693F1A0F63EF4A0788657E64704DA9EF">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0.5</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">AnimeMagicalStaff</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><url>rbxassetid://745769347</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX24293564CCDC4109A3840B67454816ED">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.0967789963</X>
					<Y>23.2016048</Y>
					<Z>22.1765099</Z>
					<R00>-0.0998702794</R00>
					<R01>-0.663030565</R01>
					<R02>-0.741900921</R02>
					<R10>-6.23739606e-006</R10>
					<R11>0.74562937</R11>
					<R12>-0.666361272</R12>
					<R20>0.995000482</R20>
					<R21>-0.0665449798</R21>
					<R22>-0.0744703263</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<int name="CollisionGroupId">0</int>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.25</X>
					<Y>5.75</Y>
					<Z>1.5</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXAB642DBB1C704DFAB2463AED63F6D4F2">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>rbxassetid://745769178</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.850000024</X>
						<Y>0.850000024</Y>
						<Z>0.850000024</Z>
					</Vector3>
					<Content name="TextureId"><url>rbxassetid://745769497</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBXD77CAB31D50346D486C1B47ABB49F7CE">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Strike</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">6</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=72585619</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.5</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX8785FE4B82C74104ACB8A023A7C4CCB2">
				<Properties>
					<float name="EmitterSize">0</float>
					<bool name="Looped">false</bool>
					<string name="Name">Fire</string>
					<bool name="PlayOnRemove">false</bool>
					<float name="PlaybackSpeed">2</float>
					<bool name="Playing">false</bool>
					<token name="RollOffMode">0</token>
					<Ref name="SoundGroup">null</Ref>
					<Content name="SoundId"><url>http://www.roblox.com/asset/?id=10756118</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.75</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX93A56639C55F4B8D9B26312741528E56">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">FlightControl</string>
				<string name="ScriptGuid">{9D758C46-BF2F-47CC-8ADC-E45491B96C2D}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")

Rate = (1 / 60)

CameraSpeed = {
	X = 20,
	Z = 25,
}

Controls = {
	Forward = {
		Mode = false,
		Keys = {Key = "w", ByteKey = 17}
	},
	Backward = {
		Mode = false,
		Keys = {Key = "s", ByteKey = 18}
	},
	Left = {
		Mode = false,
		Keys = {Key = "a", ByteKey = 20}
	},
	Right = {
		Mode = false,
		Keys = {Key = "d", ByteKey = 19}
	},
}

Flight = {
	JumpCount = 0,
	LastJump = 0,
	Active = false,
}

ToolEquipped = false

function InitiateFlight()
	Flight.JumpCount = 0
	Flight.LastJump = 0
	Flight.Active = true
	
	FlightSpin = Instance.new("BodyGyro")
	FlightSpin.Name = "FlightSpin"
	FlightSpin.P = 1000000
	FlightSpin.maxTorque = Vector3.new(FlightSpin.P, FlightSpin.P, FlightSpin.P)
	FlightSpin.cframe = RootPart.CFrame
	
	FlightPower = Instance.new("BodyVelocity")
	FlightPower.Name = "FlightPower"
	FlightPower.velocity = Vector3.new(0, 0, 0)
	FlightPower.P = 1000000
	FlightPower.maxForce = Vector3.new(FlightPower.P, FlightPower.P, FlightPower.P)
	FlightPower.P = 10000
	
	FlightHold = Instance.new("BodyPosition")
	FlightHold.Name = "FlightHold"
	FlightHold.P = 100000
	FlightHold.maxForce = Vector3.new(0, 0, 0)
	FlightHold.position = RootPart.Position
	
	FlightSpin.Parent = RootPart
	FlightPower.Parent = RootPart
	FlightHold.Parent = RootPart
	
	local Camera = game:GetService("Workspace").CurrentCamera
	Camera.CameraType = Enum.CameraType.Track
	Flying = true
	Humanoid.WalkSpeed = 0
	Humanoid.PlatformStand = true
	Humanoid.AutoRotate = false
	DisableJump(true)
	RootPart.Velocity = Vector3.new(0, 0, 0)
	RootPart.RotVelocity = Vector3.new(0, 0, 0)
	local IsMoving = false
	while Flight.Active and FlightSpin.Parent and FlightPower.Parent and FlightHold.Parent and CheckIfAlive() do
		local NewPush = Vector3.new(0, 0, 0)
		local ForwardVector = Camera.CoordinateFrame:vectorToWorldSpace(Vector3.new(0, 0, -1))
		local SideVector = Camera.CoordinateFrame:vectorToWorldSpace(Vector3.new(-1, 0, 0))
		NewPush = (NewPush + (((Controls.Forward.Mode and not Controls.Backward.Mode) and (ForwardVector * CameraSpeed.Z)) or ((not Controls.Forward.Mode and Controls.Backward.Mode) and (ForwardVector * CameraSpeed.Z * -1)) or NewPush))
		NewPush = (NewPush + (((Controls.Left.Mode and not Controls.Right.Mode) and (SideVector * CameraSpeed.X)) or ((not Controls.Left.Mode and Controls.Right.Mode) and (SideVector * CameraSpeed.X * -1)) or NewPush))
		FlightSpin.cframe = CFrame.new(Vector3.new(0, 0, 0), ForwardVector)
		if NewPush.magnitude < 1 then
			FlightHold.maxForce = Vector3.new((FlightHold.P * 100), (FlightHold.P * 100), (FlightHold.P * 100))
			FlightPower.maxForce = Vector3.new(0, 0, 0)
			if IsMoving then
				FlightHold.position = RootPart.Position
			end
			IsMoving = false
		else
			IsMoving = true
			FlightHold.maxForce = Vector3.new(0, 0, 0)
			FlightPower.maxForce = Vector3.new((FlightPower.P * 100), (FlightPower.P * 100), (FlightPower.P * 100))
		end
		FlightPower.velocity = NewPush
		wait(Rate)
	end
	if CheckIfAlive() then
		EndFlight()
	end
end

function EndFlight()
	Flight.JumpCount = 0
	Flight.LastJump = 0
	Flight.Active = false
	for i, v in pairs({FlightSpin, FlightPower, FlightHold}) do
		if v and v.Parent then
			v:Destroy()
		end
	end
	local Camera = game:GetService("Workspace").CurrentCamera
	Camera.CameraType = Enum.CameraType.Custom
	if CheckIfAlive() then
		Humanoid.WalkSpeed = 16
		Humanoid.PlatformStand = false
		Humanoid.AutoRotate = true
		DisableJump(false)
		Humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and RootPart and RootPart.Parent and Player and Player.Parent) and true) or false)
end

function KeyPress(Key, Down)
	local Key = string.lower(Key)
	local ByteKey = string.byte(Key)
	if Key == " " and Down then
		if Flight.Active then
			EndFlight()
		else
			local Now = tick()
			Flight.JumpCount = (Flight.JumpCount + 1)
			if (Now - Flight.LastJump) <= 0.5 then
				if Flight.JumpCount >= 2 then
					InitiateFlight()
				else
					Flight.JumpCount = 0
				end
			end
			Flight.LastJump = Now
		end
	else
		for i, v in pairs(Controls) do
			if Key == v.Keys.Key or ByteKey == v.Keys.ByteKey then
				Controls[i].Mode = Down
			end
		end
	end
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	RootPart = Character:FindFirstChild("HumanoidRootPart")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	Mouse.KeyDown:connect(function(Key)
		KeyPress(Key, true)
	end)
	Mouse.KeyUp:connect(function(Key)
		KeyPress(Key, false)
	end)
end

function Unequipped()
	for i, v in pairs({PreventJump}) do
		if v then
			v:disconnect()
		end
	end
	for i, v in pairs(Controls) do
		Controls[i].Mode = false
	end
	Spawn(function()
		EndFlight()
	end)
	ToolEquipped = false
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX44A6C9E21E1345A090BA2C26F6CE0378">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">MouseIcon</string>
				<string name="ScriptGuid">{A9E03675-A2A2-488B-9E3B-26FB68B3A59E}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Mouse_Icon = "rbxasset://textures/GunCursor.png"
Reloading_Icon = "rbxasset://textures/GunWaitCursor.png"

Tool = script.Parent

Mouse = nil

function UpdateIcon()
	if Mouse then
		Mouse.Icon = Tool.Enabled and Mouse_Icon or Reloading_Icon
	end
end

function OnEquipped(ToolMouse)
	Mouse = ToolMouse
	UpdateIcon()
end

function OnChanged(Property)
	if Property == "Enabled" then
		UpdateIcon()
	end
end

Tool.Equipped:connect(OnEquipped)
Tool.Changed:connect(OnChanged)
]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX743FE9BD608D4C94BE229CFC29B41547">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid">{25B6D90B-8189-48BD-A7D0-A7197BC64BFB}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
RunService = game:GetService("RunService")
UserInputService = game:GetService("UserInputService")

InputCheck = Instance.new("ScreenGui")
InputCheck.Name = "InputCheck"
InputButton = Instance.new("Frame")
InputButton.Name = "InputMonitor"
InputButton.BackgroundTransparency = 1
InputButton.Size = UDim2.new(1, 0, 1, 0)
InputButton.Parent = InputCheck

Animations = {}
LocalObjects = {}

Remotes = Tool:WaitForChild("Remotes")
ServerControl = Remotes:WaitForChild("ServerControl")
ClientControl = Remotes:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(mode, value)
	if not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop(value.FadeTime)
				table.remove(Animations, i)
			end
		end
	end
end

function DisableJump(Boolean)
	if PreventJump then
		PreventJump:disconnect()
	end
	if Boolean then
		PreventJump = Humanoid.Changed:connect(function(Property)
			if Property ==  "Jump" then
				Humanoid.Jump = false
			end
		end)
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Head and Head.Parent and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	Head = Character:FindFirstChild("Head")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseDown", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseDown", {Down = false})
	end)
	local PlayerGui = Player:FindFirstChild("PlayerGui")
	if PlayerGui then
		if UserInputService.TouchEnabled then
			InputCheckClone = InputCheck:Clone()
			InputCheckClone.InputMonitor.InputBegan:connect(function()
				InvokeServer("Button1Click", {Down = true})
			end)
			InputCheckClone.InputMonitor.InputEnded:connect(function()
				InvokeServer("Button1Click", {Down = false})
			end)
			InputCheckClone.Parent = PlayerGui
		end
	end
end

function Unequipped()
	ToolEquipped = false
	if InputCheckClone and InputCheckClone.Parent then
		InputCheckClone:Destroy()
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	for i, v in pairs(LocalObjects) do
		if v.Object then
			v.Object.LocalTransparencyModifier = 0
		end
	end
	for i, v in pairs({PreventJump, ObjectLocalTransparencyModifier}) do
		if v then
			v:disconnect()
		end
	end
	Animations = {}
	LocalObjects = {}
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if not ToolEquipped or not CheckIfAlive() or not mode then
		return
	end
	if mode == "PlayAnimation" and value then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MouseData" then
		return {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}
	elseif mode == "DisableJump" then
		DisableJump(value)
	elseif mode == "SetLocalTransparencyModifier" and value then
		pcall(function()
			local ObjectFound = false
			for i, v in pairs(LocalObjects) do
				if v == value then
					ObjectFound = true
				end
			end
			if not ObjectFound then
				table.insert(LocalObjects, value)
				if ObjectLocalTransparencyModifier then
					ObjectLocalTransparencyModifier:disconnect()
				end
				ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
					local Camera = game:GetService("Workspace").CurrentCamera
					for i, v in pairs(LocalObjects) do
						if v.Object and v.Object.Parent then
							local CurrentTransparency = v.Object.LocalTransparencyModifier
							local ViewDistance = (Camera.CoordinateFrame.p - Head.Position).Magnitude
							if ((not v.AutoUpdate and (CurrentTransparency == 1 or CurrentTransparency == 0)) or v.AutoUpdate) then
								if ((v.Distance and ViewDistance <= v.Distance) or not v.Distance) then
									v.Object.LocalTransparencyModifier = v.Transparency
								else
									v.Object.LocalTransparencyModifier = 0
								end
							end
						else
							table.remove(LocalObjects, i)
						end
					end
				end)
			end
		end)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX86B7D2C0A76B42C5955A3B85A2363186">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid">{E764C683-B873-4D6E-B197-E8696547AAC3}</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")
Mesh = Handle:WaitForChild("Mesh")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

ReadyParticle = script:WaitForChild("ReadyParticle")
HitScript = script:WaitForChild("HitScript")

Grips = {
	Unequipped = Tool.Grip,
	Equipped = Tool.Grip,
}

AnimationsBin = Tool:WaitForChild("Animations")
R6Anims = AnimationsBin:WaitForChild("R6")
R15Anims = AnimationsBin:WaitForChild("R15")

Animations = {
	Slash = {Animation = R6Anims:WaitForChild("Slash"), FadeTime = nil, Weight = nil, Speed = 1, Duration = 0.5},
	Chop = {Animation = R6Anims:WaitForChild("Chop"), FadeTime = 0, Weight = nil, Speed = 1.25, Duration = 0.5},
	Spin = {Animation = R6Anims:WaitForChild("Spin"), FadeTime = nil, Weight = nil, Speed = 1, Duration = 1},
	R15Slash = {Animation = R15Anims:WaitForChild("Slash"), FadeTime = nil, Weight = nil, Speed = 1, Duration = 0.5},
	R15Chop = {Animation = R15Anims:WaitForChild("Chop"), FadeTime = 0, Weight = nil, Speed = 1.25, Duration = 0.5},
	R15Spin = {Animation = R15Anims:WaitForChild("Spin"), FadeTime = nil, Weight = nil, Speed = 1, Duration = 1},	
}

Sounds = {
	Fire = Handle:WaitForChild("Fire"),
	Strike = Handle:WaitForChild("Strike"),
}

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

BaseOrb = BasePart:Clone()
BaseOrb.Name = "Projectile"
BaseOrb.Transparency = 0.2
BaseOrb.BrickColor = BrickColor.new("Pink")
BaseOrb.Material = Enum.Material.Neon
BaseOrb.Size = Vector3.new(1, 1, 1)
BaseOrb.CanCollide = false
Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.Sphere,
	Scale = Vector3.new(1, 1, 1),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseOrb,
}
ParticleEffect = ReadyParticle:Clone()
ParticleEffect.LockedToPart = false
ParticleEffect.Enabled = true
ParticleEffect.Parent = BaseOrb
StrikeSound = Sounds.Strike:Clone()
StrikeSound.Parent = BaseOrb

Gravity = 196.20
Rate = (1 / 60)

Shots = {Total = 6, Used = 0}
ShotReload = 10
FireRate = 0.125

ToolEquipped = false

Remotes = Tool:WaitForChild("Remotes")
ServerControl = (Remotes:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Remotes,
})
ClientControl = (Remotes:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Remotes,
})

for i, v in pairs(Tool:GetChildren()) do
	if v:IsA("BasePart") and v ~= Handle then
		v:Destroy()
	end
end

Handle.Transparency = 0
Tool.Grip = Grips.Unequipped
Tool.Enabled = true

function Fire(TargetPosition)
	Shots.Used = (Shots.Used + 1)
	Delay(ShotReload, (function()
		Shots.Used = (Shots.Used - 1)
		if Shots.Used < Shots.Total then
			Tool.Enabled = true
		end
	end))
	local CurrentlyEquipped = true
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
	end)
	local AttackAnimations = {Animations.Slash, Animations.Chop}
	if Humanoid and Humanoid.RigType == Enum.HumanoidRigType.R15 then
		AttackAnimations = {Animations.R15Slash, Animations.R15Chop}
	end
	local AnimationChosen = AttackAnimations[math.random(1, #AttackAnimations)]
	Spawn(function()
		InvokeClient("PlayAnimation", AnimationChosen)
	end)
	wait(AnimationChosen.Duration / 2)
	if not CheckIfAlive() or not ToolEquipped or not CurrentlyEquipped then
		return
	end
	local Projectile = BaseOrb:Clone()
	local SpawnPosition = (Handle.CFrame * CFrame.new(0, ((Handle.Size.Y / 2) - (Projectile.Size.Y / 2)), 0))
	local TargetDirection = CFrame.new(SpawnPosition.p, TargetPosition)
	local Speed = 75
	local Velocity = (TargetDirection.lookVector * Speed)
	local Mass = (Projectile:GetMass() * Gravity)
	local BodyVelocity = Create("BodyVelocity"){
		Name = "BodyVelocity",
		maxForce = Vector3.new(Mass, Mass, Mass),
		velocity = Velocity,
		Parent = Projectile,
	}
	Projectile.Velocity = Velocity
	local Values = {
		{Name = "Creator", Class = "ObjectValue", Value = Player},
		{Name = "Damage", Class = "NumberValue", Value = 5},
	}
	for i, v in pairs(Values) do
		local Value = Create(v.Class){
			Name = v.Name,
			Value = v.Value,
			Parent = Projectile,
		}
	end
	local HitScriptCopy = HitScript:Clone()
	HitScriptCopy.Disabled = false
	HitScriptCopy.Parent = Projectile
	Projectile.CFrame = SpawnPosition
	Debris:AddItem(Projectile, 15)
	Projectile.Parent = game:GetService("Workspace")
end

function Activated()
	local MouseData = InvokeClient("MouseData")
	if not Tool.Enabled or not CheckIfAlive() or not MouseData or not MouseData.Position or Shots.Used >= Shots.Total then
		return
	end
	Tool.Enabled = false
	local Sound = Sounds.Fire:Clone()
	Debris:AddItem(Sound, 1.25)
	Sound.Parent = Handle
	Sound:Play()
	Fire(MouseData.Position)
	wait(FireRate)
	if Shots.Used < Shots.Total then
		Tool.Enabled = true
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	Tool.Grip = Grips.Equipped
	ToolEquipped = true
end

function Unequipped()
	Tool.Grip = Grips.Unequipped
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not value or not CheckIfAlive() then
		return
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX28DDED467A5A438EB5821C5D0002919E">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">HitScript</string>
					<string name="ScriptGuid">{415E001F-18B1-4117-A951-5E93A5526A0B}</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer
--Updated for R15 avatar by StarWars

Part = script.Parent

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

BaseUrl = "http://www.roblox.com/asset/?id="

Functions = require(script:WaitForChild("Functions"))

Sounds = {
	Strike = Part:WaitForChild("Strike"),
}

Creator = Part:FindFirstChild("Creator")
Damage = Part:WaitForChild("Damage")

BasePart = Create("Part"){
	Shape = Enum.PartType.Block,
	Material = Enum.Material.Plastic,
	FormFactor = Enum.FormFactor.Custom,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Locked = true,
	CanCollide = true,
	Anchored = false,
}

Rate = (1 / 60)

HitDelay = false

function GetCreator()
	return (((Creator and Creator.Parent and Creator.Value and Creator.Value:IsA("Player")) and Creator.Value) or nil)
end

function LightningStrike(Source, Destination)
	local SegLength = {Min = 0.5, Max = 3}
	local LastDistance = 0
	local Points = {Source}
	local Direction = (Destination - Source).Unit
	local Distance = (Source - Destination).Magnitude
	
	local CreatorPlayer = GetCreator()
	
	while (Distance - LastDistance) > SegLength.Max do
		LastDistance = (LastDistance + ((math.random() * (SegLength.Max - SegLength.Min)) + SegLength.Max))
		local NewVector = (Source + (LastDistance * Direction) + Vector3.new(math.random(), math.random(), math.random()))
		table.insert(Points, NewVector)
		--wait(Rate)
	end	
	table.insert(Points, Destination)
	
	local Parts = {}
	
	local LightningModel = Instance.new("Model")
	LightningModel.Name = "LightningModel"
	Debris:AddItem(LightningModel, 5)
	LightningModel.Parent = game:GetService("Workspace")	
	
	local ObjectHit
	for Index, i in pairs(Points) do
		local LastPart = BasePart:Clone()
		LastPart.Name = "Effect"
		LastPart.BrickColor = Part.BrickColor
		LastPart.Material = Part.Material
		LastPart.Transparency = Part.Transparency
		LastPart.Anchored = true
		LastPart.CanCollide = false
		local Mesh = Instance.new("BlockMesh")
		Mesh.Scale = Vector3.new(0.75, 1, 0.75)
		Mesh.Parent = LastPart
		if Points[Index + 1] then
			local RayDistance = (i - Points[Index + 1]).Magnitude
			LastPart.Size = Vector3.new(0.5, RayDistance, 0.5)
			LastPart.CFrame = CFrame.new(((i + Points[Index + 1]) / 2), Points[Index + 1]) * CFrame.Angles((math.pi / 2), 0, 0)
			local RayHit, RayPos, RayNormal = Functions.CastRay(LastPart.Position, CFrame.new((LastPart.CFrame * CFrame.new(0, (LastPart.Size.Y / 2), 0)).p, (LastPart.CFrame * CFrame.new(0, 1, 0)).p).lookVector, RayDistance, {((CreatorPlayer and CreatorPlayer.Character) or nil), LightningModel}, false)
			Debris:AddItem(LastPart, 1)
			LastPart.Parent = LightningModel
			local FadeRate = 15
			Spawn(function()
				for i = 1, FadeRate do
					LastPart.Transparency = ((1 / FadeRate) * i)
					wait(Rate)
				end
			end)
			if RayHit then
				ObjectHit = RayHit
				break
			end
			wait(Rate)
		end
	end
	
	return ObjectHit
end

function CastLightning(character)
	local CreatorPlayer = GetCreator()
	if not CreatorPlayer then
		return
	end
	local humanoid = character:FindFirstChild("Humanoid")
	local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
	if not humanoid or humanoid.Health == 0 or not torso then
		return
	end
	Spawn(function()
		local ObjectHit = LightningStrike(Part.Position, torso.Position)
		if ObjectHit then
			local HitCharacter = ObjectHit.Parent
			if HitCharacter:IsA("Hat") then
				HitCharacter = HitCharacter.Parent
			end
			local HitHumanoid = HitCharacter:FindFirstChild("Humanoid")
			if not HitHumanoid or HitHumanoid.Health == 0 or HitHumanoid ~= humanoid then
				return
			end
			Functions.UntagHumanoid(humanoid)
			Functions.TagHumanoid(humanoid, CreatorPlayer)
			humanoid:TakeDamage(Damage.Value)
			local TripChance = math.random(1, 6)
			if TripChance == 1 then
				humanoid.Sit = true
				torso.Velocity = (CFrame.new(Part.Position, torso.Position).lookVector * 50)
			end
		end
	end)
end

function GetPlayersNearby(Radius)
	local Humanoids = {}
	local CreatorPlayer = GetCreator()
	if CreatorPlayer then
		local NegativeRegion = (Part.Position - Vector3.new(Radius, Radius, Radius))
		local PositiveRegion = (Part.Position + Vector3.new(Radius, Radius, Radius))
		local Region = Region3.new(NegativeRegion, PositiveRegion)
		local IgnoreList = {((CreatorPlayer and CreatorPlayer.Character) or nil)}
		for i, v in pairs(Players:GetChildren()) do
			if v:IsA("Player") and v ~= CreatorPlayer and v.Character and v.Character.Parent and Functions.IsTeamMate(CreatorPlayer, v) then
				table.insert(IgnoreList, v.Character)
			end
		end
		local Parts = Functions.GetParts(Region, 500, IgnoreList)
		for i, v in pairs(Parts) do
			local character = v.Parent
			if character:IsA("Hat") then
				character = character.Parent
			end
			local humanoid = character:FindFirstChild("Humanoid")
			local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
			if humanoid and humanoid.Health > 0 and torso and not Functions.CheckTableForInstance(Humanoids, humanoid) then
				table.insert(Humanoids, humanoid)
			end
		end
	end
	return Humanoids
end

function PartHit(Hit)
	local CreatorPlayer = GetCreator()
	if not Hit or not Hit.Parent or not CreatorPlayer or HitDelay or Part.Velocity.Magnitude < 8 then
		return
	end
	local character = Hit.Parent
	local humanoid = character:FindFirstChild("Humanoid")
	if not humanoid or humanoid.Health == 0 then
		return
	end
	local player = Players:GetPlayerFromCharacter(character)
	if player and (CreatorPlayer == player or Functions.IsTeamMate(CreatorPlayer, player)) then
		return
	end
	HitDelay = true
	Functions.UntagHumanoid(humanoid)
	Functions.TagHumanoid(humanoid, CreatorPlayer)
	humanoid:TakeDamage((Damage.Value * 2.5))
	wait(0.2)
	HitDelay = false
end

Duration = 35
StartTick = tick()
LastStrike = 0
StrikeDelay = 0.2
ShootRadius = 15

Spawn(function()
	while true do
		if (tick() - LastStrike) >= StrikeDelay then
			local Humanoids = GetPlayersNearby(ShootRadius)
			if #Humanoids > 0 then
				LastStrike = tick()
				Sounds.Strike:Play()
				for i, v in pairs(Humanoids) do
					if v and v.Health > 0 and v.Parent then
						local character = v.Parent
						local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
						if torso then
							local Facing = ((Part.Position - torso.Position).Unit + Part.Velocity.Unit).Magnitude
							if Facing <= 1.5 then
								CastLightning(character)
							end
						end
					end
				end
			end
		end
		wait(Rate)
	end
end)

Part.Touched:connect(PartHit)]]></ProtectedString>
				</Properties>
				<Item class="ModuleScript" referent="RBXBC7E7CD9CC284C5B8FEDCBE7283A4AE3">
					<Properties>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Functions</string>
						<string name="ScriptGuid"></string>
						<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Functions = {}

function Functions.TagHumanoid(humanoid, player)
	local Creator_Tag = Create("ObjectValue"){
		Name = "creator",
		Value = player,
	}
	Debris:AddItem(Creator_Tag, 2)
	Creator_Tag.Parent = humanoid
end

function Functions.UntagHumanoid(humanoid)
	for i, v in pairs(humanoid:GetChildren()) do
		if v:IsA("ObjectValue") and v.Name == "creator" then
			v:Destroy()
		end
	end
end
	
function Functions.IsTeamMate(Player1, Player2)
	return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Functions.CheckTableForString(Table, String)
	for i, v in pairs(Table) do
		if string.find(string.lower(String), string.lower(v)) then
			return true
		end
	end
	return false
end

function Functions.CheckIntangible(Hit)
	local ProjectileNames = {"Lightning", "Effect", "Projectile", "Arrow", "Bullet", "Water"}
	if Hit and Hit.Parent then
		local HumanoidFound
		for i, v in pairs(Hit.Parent:GetChildren()) do
			if v:IsA("Humanoid") then
				HumanoidFound = v
				break
			end
		end
		if not HumanoidFound and ((not Hit.CanCollide and Hit.Transparency >= 1) or Functions.CheckTableForString(ProjectileNames, Hit.Name) or Hit.Parent:IsA("Hat") or Hit.Parent:IsA("Tool")) then
			return true
		end
	end
	return false
end

function Functions.CastRay(StartPos, Vec, Length, Ignore, DelayIfHit)
	local Ignore = ((type(Ignore) == "table" and Ignore) or {Ignore})
	local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
	if RayHit and Functions.CheckIntangible(RayHit) then
		if DelayIfHit then
			wait()
		end
		RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
	end
	return RayHit, RayPos, RayNormal
end

function Functions.GetTotalParts(MaxParts, PossibleParts, Parts)
	if MaxParts < PossibleParts then
		return MaxParts
	elseif Parts >= MaxParts then
		return 0
	elseif MaxParts >= PossibleParts then
		local PartCount = (MaxParts - PossibleParts)
		if Parts <= MaxParts then
			PartCount = (MaxParts - Parts)
			if PartCount > PossibleParts then
				return PossibleParts
			else
				return PartCount
			end
		elseif PartCount >= PossibleParts then
			return PossibleParts
		else
			return PartCount
		end
	end
end

function Functions.GetParts(Region, MaxParts, Ignore)
	local Parts = {}
	local RerunFailed = false
	while #Parts < MaxParts and not RerunFailed do
		local Region = Region
		local PossibleParts = Functions.GetTotalParts(MaxParts, 100, #Parts)
		local PartsNearby = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region, Ignore, PossibleParts)
		if #PartsNearby == 0 then
			RerunFailed = true
		else
			for i, v in pairs(PartsNearby) do
				table.insert(Parts, v)
				table.insert(Ignore, v)
			end
		end
	end
	return Parts
end

function Functions.CheckTableForInstance(Table, Instance)
	for i, v in pairs(Table) do
		if v == Instance then
			return true
		end
	end
	return false
end

return Functions]]></ProtectedString>
					</Properties>
				</Item>
			</Item>
			<Item class="ParticleEmitter" referent="RBX00EC5A1D09124646A0171DB49C7FDAE5">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 1 0.333333 1 0 1 1 0 1 0 </ColorSequence>
					<float name="Drag">0</float>
					<token name="EmissionDirection">1</token>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">0.3 0.5 </NumberRange>
					<float name="LightEmission">1</float>
					<bool name="LockedToPart">true</bool>
					<string name="Name">ReadyParticle</string>
					<float name="Rate">500</float>
					<NumberRange name="RotSpeed">500 500 </NumberRange>
					<NumberRange name="Rotation">-15 15 </NumberRange>
					<NumberSequence name="Size">0 0.4 0 1 0.4 0 </NumberSequence>
					<NumberRange name="Speed">0 0 </NumberRange>
					<Content name="Texture"><url>rbxasset://textures/particles/fire_main.dds</url></Content>
					<NumberSequence name="Transparency">0 0 0 0.650794 0.408602 0 1 0 0 </NumberSequence>
					<float name="VelocityInheritance">0</float>
					<float name="VelocitySpread">0</float>
					<float name="ZOffset">0</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBXEE9CF363A60C40269DBF92EF9231D1AC">
			<Properties>
				<string name="Name">Remotes</string>
			</Properties>
			<Item class="RemoteFunction" referent="RBX7FC4D0C3398B41A0B259E51ADB24F3DB">
				<Properties>
					<string name="Name">ServerControl</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBX6DE22256D30A4FE0BDA7EE58F908C470">
				<Properties>
					<string name="Name">ClientControl</string>
				</Properties>
			</Item>
		</Item>
		<Item class="Folder" referent="RBXF2242C3C85574254902CC7245EB6C0FD">
			<Properties>
				<string name="Name">Animations</string>
			</Properties>
			<Item class="Folder" referent="RBXEC88A730B64346D090785DECEDE21456">
				<Properties>
					<string name="Name">R6</string>
				</Properties>
				<Item class="Animation" referent="RBX32A86B15E8C44421B829ECE447033340">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=186934753</url></Content>
						<string name="Name">Chop</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBXE89066A15125428DAB84AC784626428C">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=186934658</url></Content>
						<string name="Name">Slash</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX3204E1BAE995463E8E6C41A997D00AF2">
					<Properties>
						<Content name="AnimationId"><url>http://www.roblox.com/asset/?id=186934910</url></Content>
						<string name="Name">Spin</string>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXEBB656F65A314D99B81B8DCC3AD28B36">
				<Properties>
					<string name="Name">R15</string>
				</Properties>
				<Item class="Animation" referent="RBXE792A92CDBFF4D6689E48FF1ECE25505">
					<Properties>
						<Content name="AnimationId"><url>rbxassetid://521421827</url></Content>
						<string name="Name">Chop</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX49A6BA89E6144C4AA9D0A87CB7768A98">
					<Properties>
						<Content name="AnimationId"><url>rbxassetid://521427978</url></Content>
						<string name="Name">Slash</string>
					</Properties>
				</Item>
				<Item class="Animation" referent="RBX9969E34863C549FBAD51FB76CFAFB940">
					<Properties>
						<Content name="AnimationId"><url>rbxassetid://521432272</url></Content>
						<string name="Name">Spin</string>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Camera" referent="RBX9C2F48A289CF4B1998B557B991318D40">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>-2.28261447</X>
					<Y>22.2987061</Y>
					<Z>32.9001732</Z>
					<R00>0.980916202</R00>
					<R01>-0.0194624737</R01>
					<R02>-0.193454921</R02>
					<R10>-0</R10>
					<R11>0.994977593</R11>
					<R12>-0.100099392</R12>
					<R20>0.194431484</R20>
					<R21>0.0981891155</R21>
					<R22>0.975989401</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">29.9999981</float>
				<CoordinateFrame name="Focus">
					<X>-0.153062224</X>
					<Y>23.4006004</Y>
					<Z>22.1564789</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>