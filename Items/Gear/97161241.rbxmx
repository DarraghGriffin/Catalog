<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXDB5FAA319EC74F0CB00DA5855E7A873D">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>1.5</X>
				<Y>3.5</Y>
				<Z>-1.29999995</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">SuperStompBoots</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180656</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX18BA8A950CE7493F8D0DFBA657E28D0D">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.0499999821</X>
					<Y>0.599999666</Y>
					<Z>-0.0400007591</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>2</X>
					<Y>1</Y>
					<Z>1.60000002</Z>
				</Vector3>
			</Properties>
			<Item class="Sound" referent="RBX9A0012CD96B6444DBE8590EF35EBBAEA">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Jump</string>
					<float name="Pitch">2</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/Asset?ID=92628581</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX8EBD076B7A6B41429743C79D76670C22">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=97180581</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180639</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX14E12457C96F47BF86A58A387440FFF0">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/Asset?ID=92597264</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Animation" referent="RBXF026C4F363D54A9583CD75790308DE51">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?ID=208636716</url></Content>
				<string name="Name">Idle</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBXA5A2D8A44DCC4839AA4B28CBDAC52FE9">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild("ServerControl")
ClientControl = Tool:WaitForChild("ClientControl")

ToolEquipped = false

function SetAnimation(Mode, Value)
	if Mode == "PlayAnimation" and Value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
		table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
	elseif Mode == "StopAnimation" and Value then
		for i, v in pairs(Animations) do
			if v.Animation == Value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Player:GetMouse()
	Mouse.Button1Down:connect(function()
		local Target = Mouse.Target
		local Position = Mouse.Hit.p
		InvokeServer("MouseClick", {Down = true, Target = Target, Position = Position})
	end)
	Mouse.Button1Up:connect(function()
		local Target = Mouse.Target
		local Position = Mouse.Hit.p
		InvokeServer("MouseClick", {Down = false, Target = Target, Position = Position})
	end)
	Mouse.KeyDown:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = true})
	end)
	Mouse.KeyUp:connect(function(Key)
		InvokeServer("KeyPress", {Key = Key, Down = false})
	end)
end

function Unequipped()
	ToolEquipped = false
	LocalObjects = {}
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
end

function InvokeServer(Mode, Value)
	local ServerReturn = nil
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(Mode, Value)
	end)
	return ServerReturn
end

function OnClientInvoke(Mode, Value)
	if Mode == "PlayAnimation" and Value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", Value)
	elseif Mode == "StopAnimation" and Value then
		SetAnimation("StopAnimation", Value)
	elseif Mode == "PlaySound" and Value then
		Value:Play()
	elseif Mode == "StopSound" and Value then
		Value:Stop()
	elseif Mode == "MousePosition" then
		return PlayerMouse.Hit.p
	end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ClientControl.OnClientInvoke = OnClientInvoke]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXCD53A18381C449B8ACA546E1756C6AEC">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source"><![CDATA[--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
InsertService = game:GetService("InsertService")

Functions = require(script:WaitForChild("Functions"))

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

FreezePlayer = script:WaitForChild("FreezePlayer")
RechargeGui = script:WaitForChild("RechargeGui")

BaseUrl = "http://www.roblox.com/asset/?id="

Gravity = 196.20

Damage = 60
CoolDownTime = 9
MaxJumpDistance = 60
LastUse = 0
PointsAlongJump = 18

Rate = (1 / 60)

BasePart = Create("Part"){
	Material = Enum.Material.Plastic,
	Shape = Enum.PartType.Block,
	TopSurface = Enum.SurfaceType.Smooth,
	BottomSurface = Enum.SurfaceType.Smooth,
	FormFactor = Enum.FormFactor.Custom,
	Size = Vector3.new(0.2, 0.2, 0.2),
	Anchored = false,
	CanCollide = true,
	Locked = true,
}

BaseBoot = Functions.SetProperties({Object = BasePart:Clone(), Properties = {
	Name = "Boot",
	Size = Vector3.new(1, 1, 1.6),
	CanCollide = false,
}})

BootMesh = Create("SpecialMesh"){
	Name = "Mesh",
	MeshType = Enum.MeshType.FileMesh,
	MeshId = (BaseUrl .. "97180581"),
	TextureId = (BaseUrl .. "97180639"),
	Scale = Vector3.new(1, 1, 1),
	VertexColor = Vector3.new(1, 1, 1),
	Offset = Vector3.new(0, 0, 0),
	Parent = BaseBoot,
}

Grips = {
	Equipped = CFrame.new(0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1),
	Unequipped = CFrame.new(1.5, 3.5, -1.3, 1, 0, 0, 0, 1, 0, 0, 0, 1)
}

Animations = {
	Idle = {Animation = Tool:WaitForChild("Idle"), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
	Hit = Handle:WaitForChild("Hit"),
	Jump = Handle:WaitForChild("Jump")
}

ServerControl = (Tool:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = Tool,
})

ClientControl = (Tool:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = Tool,
})

ToolEquipped = false

Handle.Transparency = 1
Tool.Enabled = true

function EquipBoots()
	UnequipBoots()
	local LeftLeg = Character:FindFirstChild("Left Leg")
	local RightLeg = Character:FindFirstChild("Right Leg")
	for i, v in pairs({LeftLeg, RightLeg}) do
		if v and v.Parent then
			local Boot = Functions.SetProperties({Object = BaseBoot:Clone(), Properties = {
				Name = (((v == LeftLeg and "Left") or "Right") .. "Boot"),
			}})
			local Weld = Create("Weld"){
				Part0 = Boot,
				Part1 = v,
				C0 = CFrame.new(0, 0.57, 0.19),
				Parent = Boot,
			}
			if i == LeftLeg then
				LeftBoot = Boot
				LeftWeld = Weld
			else
				RightBoot = Boot
				RightWeld = Weld
			end
			Boot.Parent = Tool
		end
	end
end

function CreateDisplayBoots()
	for i = 1, 2 do
		local Boot = Functions.SetProperties({Object = BaseBoot:Clone(), Properties = {
			Name = (((i == 1 and "Left") or "Right") .. "Boot")
		}})
		local Weld = Create("Weld"){
			Part0 = Boot,
			Part1 = Handle,
			C0 = CFrame.new(((((Boot.Size.X / 2) + (Handle.Size.X / 2)) / 2.5) * ((i == 1 and -1) or 1)), 0, 0.19),
			Parent = Boot,
		}
		Boot.Parent = Tool
	end
end

function UnequipBoots()
	for i, v in pairs(Tool:GetChildren()) do
		if v:IsA("BasePart") and (v.Name == "LeftBoot" or v.Name == "RightBoot") then
			v:Destroy()
		end
	end
end

function PointOnCircle(OriginX, OriginZ, Radius, Theta)
	local x = OriginX + Radius * math.cos(Theta)
	local z = OriginZ + Radius * math.sin(Theta)
	return x, z
end

function SquishCharacter(character)
	local humanoid = character:FindFirstChild("Humanoid")
	if humanoid and humanoid.Health > 0 then
		Functions.UntagHumanoid(humanoid)
		Functions.TagHumanoid(humanoid, Player)
	end
	local LowestY = math.huge
	for i, v in pairs(character:GetChildren()) do
		if v:IsA("BasePart") then
			local SquishedPoint = (v.CFrame.p - (v.Size * 0.4))
			if SquishedPoint.Y < LowestY then
				LowestY = SquishedPoint.Y
			end
		end
	end
	if not LowestY then
		return
	end
	for i, v in pairs(character:GetChildren()) do
		if v:IsA("BasePart") then
			local OriginalCFrame = v.CFrame
			local OffsetY = (OriginalCFrame.p.Y - LowestY)
			Functions.SetProperties({Object = v, Properties = {
				Anchored = true,
				FormFactor = Enum.FormFactor.Custom,
			}})
			local OrigCFrame = v.CFrame
			local OffsetY = (OrigCFrame.p.Y - LowestY)
			if v.Name ~= "Head" then
				v.Size = v.Size * Vector3.new(1.6, 0.2, 1.6)
			else
				local Mesh = v:FindFirstChild("Mesh")
				if Mesh then
					Mesh.Scale = Vector3.new(Mesh.Scale.X, ((Mesh.Scale.Y / 4) * 3), Mesh.Scale.Z)
				end
			end
			v.CFrame = (OrigCFrame - Vector3.new(0, OffsetY, 0))
			if v.Name == "Torso" then
				v.CFrame = v.CFrame + Vector3.new(0, 0.1, 0)
			end
		elseif v:IsA("CharacterMesh") then
			local BodyParts = character:GetChildren()
			local BodyPart
			for ii, vv in pairs(character:GetChildren()) do
				if vv:IsA("BasePart") and string.lower(string.gsub(v.BodyPart.Name, " ", "")) == string.lower(vv.Name) then
					local MeshPresent = false
					for iii, vvv in pairs(vv:GetChildren()) do
						if vvv:IsA("DataModelMesh") then
							MeshPresent = true
						end
					end
					if not MeshPresent then
						local NewMesh = Create("SpecialMesh"){
							MeshId = (BaseUrl .. tostring(v.MeshId)),
							TextureId = ((v.OverlayTextureId ~= 0 and (BaseUrl .. v.OverlayTextureId)) or (v.BaseTextureId ~= 0 and (BaseUrl .. v.BaseTextureId)) or ""),
							Scale = Vector3.new(1, 0.2, 1),
							Parent = vv,
						}
					end
				end
			end
		end
	end
end

function Jump(Destination, TargetObject)
	
	if not ToolEquipped or not CheckIfAlive() then
		return
	end	
	
	local DifferenceVector = (Torso.CFrame.p - Destination)
	local Distance = DifferenceVector.Magnitude
	local DirVector = DifferenceVector.Unit
	local HalfPoint = ((DifferenceVector / 2) + Torso.Position)
	local ArcedHalfPoint = (DirVector:Cross(Vector3.new(0, 1, 0)):Cross(DirVector) * (Distance / 2) + HalfPoint)
	
	if Distance > MaxJumpDistance then
		if RechargeGuiClone and RechargeGuiClone.Parent then
			local RechargeText = RechargeGuiClone:FindFirstChild("RechargeText")
			if RechargeText then
				RechargeText.Text = (RechargeText.Text .. " ")
				RechargeText.Text = "Too Far Away!"
				local TextChanged = false
				local TextChangedConnection = RechargeText.Changed:connect(function(Property)
					if Property == "Text" then
						TextChanged = true
					end
				end)
				Delay(2, (function()
					if TextChangedConnection then
						TextChangedConnection:disconnect()
					end
					if not TextChanged then
						RechargeText.Text = "Ready"
					end
				end))
			end
		end
		LastUse = 0
		return
	end
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end
	local CurrentlyEquipped = true
	ToolUnequipped = Tool.Unequipped:connect(function()
		CurrentlyEquipped = false
		if ToolUnequipped then
			ToolUnequipped:disconnect()
		end
	end)
	
	StartGuiRecharge()
	if TargetObject and TargetObject.Parent then
		local character = TargetObject.Parent
		if character and character:IsA("Hat") then
			character = character.Parent
		end
		local humanoid = character:FindFirstChild("Humanoid")
		if humanoid then
			local freezePlayerCopy = FreezePlayer:Clone()
			freezePlayerCopy.Disabled = false
			freezePlayerCopy.Parent = character
		end
	end

	local WayPoints = {}
	for i = 1, PointsAlongJump do
		if not ToolEquipped or not CurrentlyEquipped or not CheckIfAlive() then
			break
		end
		local ObjectZ, ObjectY = PointOnCircle((Distance / 2), 0, (Distance / 2), (math.pi - (math.pi / PointsAlongJump) * i))
		local NextPoint = CFrame.new(Torso.CFrame.p, Destination):pointToWorldSpace(Vector3.new(0, ObjectY, -ObjectZ))
		local NextTargetPart = Functions.SetProperties({Object = BasePart:Clone(), Properties = {
			Name = tostring(i),
			BrickColor = BrickColor.new("Really red"),
			Shape = Enum.PartType.Ball,
			Size = Vector3.new(1, 1, 1),
			CanCollide = false,
			Anchored = true,
			CFrame = CFrame.new(NextPoint),
		}})
		Debris:AddItem(NextTargetPart, 10)
		NextTargetPart.Parent = game:GetService("Workspace")
		table.insert(WayPoints, NextTargetPart)
	end
	Humanoid.PlatformStand = true
	Sounds.Jump:Play()
	local BodyPosition = Create("BodyPosition"){
		Parent = Torso,
	}
	local BodyGyro = Create("BodyGyro"){
		maxTorque = Vector3.new(math.huge, math.huge, math.huge),
		Parent = Torso,
	}
	local CurrentWayPoint = 1
	Spawn(function()
		BodyGyro.cframe = CFrame.new(Torso.CFrame.p, Destination)
		while BodyPosition and BodyPosition.Parent and ToolEquipped and CurrentlyEquipped and CheckIfAlive() do
			local WayPoint = WayPoints[CurrentWayPoint]
			local ConnectedParts = Functions.GetAllConnectedParts(Torso)
			local Mass = 0
			for i, v in pairs(ConnectedParts) do
				Mass = (Mass + v:GetMass())
			end 
			local Mass = (Mass * Gravity * math.huge)
			BodyPosition.maxForce = Vector3.new(Mass, Mass, Mass)
			BodyPosition.position = WayPoint.Position
			if (Torso.Position - WayPoint.Position).magnitude <= 10 then
				CurrentWayPoint = (CurrentWayPoint + 1)
				if CurrentWayPoint > #WayPoints then
					CurrentWayPoint = #WayPoints
				end
				if CurrentWayPoint == #WayPoints then
					break
				end
			end
			wait(Rate)
		end
		for i, v in pairs({BodyPosition, BodyGyro}) do
			if v and v.Parent then
				v:Destroy()
			end
		end
		Humanoid.PlatformStand = false
		wait(0.5)
		for i, v in pairs({LeftBootConnection, RightBootConnection}) do
			if v then
				v:disconnect()
			end
		end
		for i, v in pairs(WayPoints) do
			if v and v.Parent then
				v:Destroy()
			end
		end
	end)
	
	if ToolUnequipped then
		ToolUnequipped:disconnect()
	end

	local BootsTouched = false
	for i, v in pairs({LeftBoot, RightBoot}) do
		local Weld = ((v == LeftBoot and LeftWeld) or RightWeld)
		local connection = v.Touched:connect(function(Hit)
			if not Hit or not Hit.Parent or CurrentWayPoint < (#WayPoints - 1) or BootsTouched or not ToolEquipped or not CurrentlyEquipped or not CheckIfAlive() then
				return
			end
			if not Weld or not Weld.Parent or not Weld.Part0 or not Weld.Part1 or Weld.Part0 ~= v then
				return
			end
			local character = Hit.Parent
			if character:IsA("Hat") then
				character = character.Parent
			end
			if character == Character then
				return
			end
			local player = Players:GetPlayerFromCharacter(character)
			if player and Functions.IsTeamMate(Player, player) then
				return
			end
			local humanoid = character:FindFirstChild("Humanoid")
			if not humanoid or humanoid.Health == 0 then
				return
			end
			BootsTouched = true
			if humanoid and humanoid.Health <= Damage then
				SquishCharacter(character)
			end
			Functions.UntagHumanoid(humanoid)
			Functions.TagHumanoid(humanoid, Player)
			humanoid:TakeDamage(Damage)
			Sounds.Hit:Play()
			for i, v in pairs({LeftBootConnection, RightBootConnection}) do
				if v then
					v:disconnect()
				end
			end
		end)
		if v == LeftBoot then
			LeftBootConnection = connection
		else
			RightBootConnection = connection
		end
	end
	Debris:AddItem(BodyPosition, CoolDownTime)
	Debris:AddItem(BodyGyro, CoolDownTime)
	wait(CoolDownTime)
	if CheckIfAlive() then
		Humanoid.PlatformStand = false
	end
	for i, v in pairs({LeftBootConnection, RightBootConnection}) do
		if v then
			v:disconnect()
		end
	end
end

function StartGuiRecharge()
	if not RechargeGuiClone or not RechargeGuiClone.Parent then
		return
	end
	local Bar = RechargeGuiClone:FindFirstChild("Bar")
	local RechargeText = RechargeGuiClone:FindFirstChild("RechargeText")
	if not Bar or not RechargeText then
		return
	end
	local Backing = Bar:FindFirstChild("Backing")
	local Fill = Bar:FindFirstChild("Fill")
	if not Backing or not Fill then
		return
	end
	RechargeText.Text = "Recharging..."
	local TimeRemaining = math.min(CoolDownTime, tick() - LastUse)
	Fill.Size = UDim2.new((TimeRemaining / CoolDownTime), 0, 1, 0)
	Fill:TweenSize(UDim2.new(1, 0, 1, 0), "Out", "Linear", (CoolDownTime - TimeRemaining), false, (function()
		RechargeText.Text = "Ready"
	end))
end

function FindClosestTorso()
	local NearestTorso = nil
	local NearestDistance = MaxJumpDistance
	for i, v in pairs(Players:GetPlayers()) do
		if v:IsA("Player") and v ~= Player and v.Character then
			local character = v.Character
			local humanoid = character:FindFirstChild("Humanoid")
			local torso = character:FindFirstChild("Torso")
			if humanoid and humanoid.Health > 0 and torso then
				local DistanceApart = (torso.Position - Torso.Position).magnitude
				if DistanceApart < NearestDistance then
					NearestTorso = torso
					NearestDistance = DistanceApart
				end
			end
		end
	end
	return NearestTorso
end

function Activated(MouseData)
	if not Tool.Enabled or not CheckIfAlive() then
		return
	end
	local MouseTarget = MouseData.Target
	if not MouseTarget or not MouseTarget.Parent then
		return
	end
	local character = MouseTarget.Parent
	if character:IsA("Hat") or character:IsA("Tool") then
		character = character.Parent
	end
	local humanoid = character:FindFirstChild("Humanoid")
	if (tick() - LastUse) > CoolDownTime then
		LastUse = tick()
		if humanoid then
			Jump(MouseData.Position, MouseTarget)
		else
			Jump(MouseData.Position)
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped()
	Character = Tool.Parent
	Humanoid = Character:FindFirstChild("Humanoid")
	Torso = Character:FindFirstChild("Torso")
	Player = Players:GetPlayerFromCharacter(Character)
	PlayerGui = Player:FindFirstChild("PlayerGui")
	if not CheckIfAlive() then
		return
	end
	Spawn(function()
		if PlayerGui then
			RechargeGuiClone = RechargeGui:Clone()
			RechargeGuiClone.Parent = PlayerGui
		end
		Spawn(EquipBoots)
		Spawn(StartGuiRecharge)
		Spawn(function()
			InvokeClient("PlayAnimation", Animations.Idle)
		end)
	end)
	Tool.Grip = Grips.Equipped
	ToolEquipped = true
end

function Unequipped()
	Tool.Grip = Grips.Unequipped
	Spawn(function()
		if RechargeGuiClone and RechargeGuiClone.Parent then
			RechargeGuiClone:Destroy()
		end
		for i, v in pairs({LeftBootConnection, RightBootConnection}) do
			if v then
				v:disconnect()
			end
		end
		Spawn(function()
			InvokeClient("StopAnimation", Animations.Idle)
		end)
		Spawn(UnequipBoots)
		Spawn(CreateDisplayBoots)
	end)
	ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
	if player ~= Player or not ToolEquipped or not CheckIfAlive() then
		return
	end
	if mode == "MouseClick" then
		local Down = value.Down
		if Down then
			Activated({Target = value.Target, Position = value.Position})
		end
	end
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

UnequipBoots()
CreateDisplayBoots()

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX61D674C7B12E4A29B5B0282989F14E72">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">FreezePlayer</string>
					<ProtectedString name="Source"><![CDATA[--Fixed by Luckymaxer

local MyCharacter = script.Parent
local MyHumanoid = MyCharacter:FindFirstChild("Humanoid")
local MyTorso = MyCharacter:FindFirstChild("Torso")

if MyTorso and MyHumanoid then
	MyTorso.Anchored = true
	MyHumanoid.WalkSpeed = 0
	wait(2.5)
	if MyHumanoid.Health > 0 then
		MyTorso.Anchored = false
		MyHumanoid.WalkSpeed = 16
	end
end

script:Destroy()
]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="ScreenGui" referent="RBXAAE31508F054493587F7D38519F97BCC">
				<Properties>
					<string name="Name">RechargeGui</string>
				</Properties>
				<Item class="Frame" referent="RBX9AD2480E316A4FDEA1B2755D8CC1DDA1">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Bar</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-100</XO>
							<YS>1</YS>
							<YO>-160</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>40</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">3</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="Frame" referent="RBX4D94840F62F3492B9B2A6C7ECA3C6C49">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278255360</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Fill</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">5</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBXAE6ED592499A44F7A2EB8556E89C1025">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Backing</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">4</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX577F6D545E20440EB3290DA768209949">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">2</token>
						<token name="FontSize">6</token>
						<string name="Name">RechargeText</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-200</XO>
							<YS>1</YS>
							<YO>-185</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>400</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Lead Boots</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4294967295</Color3>
						<float name="TextStrokeTransparency">0</float>
						<float name="TextTransparency">0.200000003</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
				</Item>
			</Item>
			<Item class="ModuleScript" referent="RBXA3DDD1809F764213A772EB8A52851F90">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Functions</string>
					<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Players = game:GetService("Players")
Debris = game:GetService("Debris")

ProjectileNames = {"Water", "Arrow", "Projectile", "Effect", "Rail", "Laser", "Ray", "Bullet", "ParticlePart"}

Functions = {
	
	CheckTableForString = (function(Table, String)
		for i, v in pairs(Table) do
			if string.lower(v) == string.lower(String) then
				return true
			end
		end
		return false
	end),

	CheckIntangible = (function(Hit)
		if Hit and Hit.Parent then
			if (Hit.Transparency >= 1 and not Hit.CanCollide) or Functions.CheckTableForString(ProjectileNames, Hit.Name) then
				return true
			end
			local ObjectParent = Hit.Parent
			local Character = ObjectParent.Parent
			local Humanoid = Character:FindFirstChild("Humanoid")
			if Humanoid and Humanoid.Health > 0 and ObjectParent:IsA("Hat") then
				return true
			end
		end
		return false
	end),
	
	CastRay = (function(StartPos, Vec, Length, Ignore, DelayIfHit)
		local RayHit, RayPos, RayNormal = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(StartPos, Vec * Length), Ignore)
		if RayHit and Functions.CheckIntangible(RayHit) then
			if DelayIfHit then
				wait()
			end
			RayHit, RayPos, RayNormal = Functions.CastRay((RayPos + (Vec * 0.01)), Vec, (Length - ((StartPos - RayPos).magnitude)), Ignore, DelayIfHit)
		end
		return RayHit, RayPos, RayNormal
	end),

	IsTeamMate = (function(Player1, Player2)
		return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
	end),

	TagHumanoid = (function(humanoid, player)
		local Creator_Tag = Instance.new("ObjectValue")
		Creator_Tag.Name = "creator"
		Creator_Tag.Value = player
		Debris:AddItem(Creator_Tag, 2)
		Creator_Tag.Parent = humanoid
	end),

	UntagHumanoid = (function(humanoid)
		for i, v in pairs(humanoid:GetChildren()) do
			if v:IsA("ObjectValue") and v.Name == "creator" then
				v:Destroy()
			end
		end
	end),
	
	GetAllConnectedParts = (function(Object)
		local Parts = {}
		local function GetConnectedParts(Object)
			for i, v in pairs(Object:GetConnectedParts()) do
				local Ignore = false
				for ii, vv in pairs(Parts) do
					if v == vv then
						Ignore = true
					end
				end
				if not Ignore then
					table.insert(Parts, v)
					GetConnectedParts(v)
				end
			end
		end
		GetConnectedParts(Object)
		return Parts
	end),
	
	GetTotalParts = (function(MaxParts, PossibleParts, Parts)
		if MaxParts < PossibleParts then
			return MaxParts
		elseif Parts >= MaxParts then
			return 0
		elseif MaxParts >= PossibleParts then
			local PartCount = (MaxParts - PossibleParts)
			if Parts <= MaxParts then
				PartCount = (MaxParts - Parts)
				if PartCount > PossibleParts then
					return PossibleParts
				else
					return PartCount
				end
			elseif PartCount >= PossibleParts then
				return PossibleParts
			else
				return PartCount
			end
		end
	end),

	GetParts = (function(Region, MaxParts, Ignore)
		local Parts = {}
		local RerunFailed = false
		while #Parts < MaxParts and not RerunFailed do
			local Region = Region
			local PossibleParts = Functions.GetTotalParts(MaxParts, 100, #Parts)
			local PartsNearby = game:GetService("Workspace"):FindPartsInRegion3WithIgnoreList(Region, Ignore, PossibleParts)
			if #PartsNearby == 0 then
				RerunFailed = true
			else
				for i, v in pairs(PartsNearby) do
					table.insert(Parts, v)
					table.insert(Ignore, v)
				end
			end
		end
		return Parts
	end),
	
	SetProperties = (function(Table)
		local Object = Table.Object
		local Properties = Table.Properties
		if not Object or not Properties then
			return
		end
		for i, v in pairs(Properties) do
			pcall(function()
				Object[i] = v
			end)
		end
		return Object
	end),
	
}

return Functions]]></ProtectedString>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBXF23232E9315945E19469778DE38FD0C7">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.550000072</X>
					<Y>0.599999666</Y>
					<Z>-0.230000764</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">LeftBoot</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>-0.189999998</X>
					<Y>0.790000021</Y>
					<Z>-0.600000024</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>1.60000002</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX75EA97F91E3F48B5B1CE6B9335817BFE">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=97180581</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180639</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBX78373266E0EB4F64B5B24AC1162568C5">
				<Properties>
					<CoordinateFrame name="C0">
						<X>-0.600000024</X>
						<Y>0</Y>
						<Z>0.189999998</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">Weld</string>
					<Ref name="Part0">RBXF23232E9315945E19469778DE38FD0C7</Ref>
					<Ref name="Part1">RBX18BA8A950CE7493F8D0DFBA657E28D0D</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBXE9F7B70FB59C47C88ADA64B5BCFD7D5B">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.649999976</X>
					<Y>0.599999666</Y>
					<Z>-0.230000764</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">RightBoot</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>-0.189999998</X>
					<Y>-0.410000026</Y>
					<Z>0.600000024</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>1.60000002</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX093BC0DE65184E07AD7901FC544F90FD">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=97180581</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180639</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBX0C7A4C0F7ED6417A80C072B497BD7FA1">
				<Properties>
					<CoordinateFrame name="C0">
						<X>0.600000024</X>
						<Y>0</Y>
						<Z>0.189999998</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">Weld</string>
					<Ref name="Part0">RBXE9F7B70FB59C47C88ADA64B5BCFD7D5B</Ref>
					<Ref name="Part1">RBX18BA8A950CE7493F8D0DFBA657E28D0D</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBXA790674274F049718EB2347BECC4C0CA">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>1.52219069</X>
					<Y>1.13238978</Y>
					<Z>-2.25789022</Z>
					<R00>-0.813684404</R00>
					<R01>-0.177569434</R01>
					<R02>0.553522229</R02>
					<R10>1.4901163e-008</R10>
					<R11>0.952203035</R11>
					<R12>0.305465877</R12>
					<R20>-0.581306994</R20>
					<R21>0.248552829</R21>
					<R22>-0.774792671</R22>
				</CoordinateFrame>
				<float name="FieldOfView">65</float>
				<CoordinateFrame name="Focus">
					<X>0.326605201</X>
					<Y>0.47259593</Y>
					<Z>-0.58436954</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>