<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX21178CB5ECE5482DAE4AAF5239AF1FDE">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>1.5</X>
				<Y>3.5</Y>
				<Z>-1.29999995</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">SuperStompBoots</string>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180656</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX4F31DF3480BB447AA62ACFC3A2007164">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.0499999821</X>
					<Y>0.599999666</Y>
					<Z>-0.0400007591</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>1.09261264e-005</X>
					<Y>0.00657704705</Y>
					<Z>7.62182754e-006</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>2</X>
					<Y>1</Y>
					<Z>1.60000002</Z>
				</Vector3>
			</Properties>
			<Item class="Sound" referent="RBXF1AA0296F297484EBABDB6726165282D">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Jump</string>
					<float name="Pitch">2</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/Asset?ID=92628581</url></Content>
					<float name="Volume">1</float>
				</Properties>
			</Item>
			<Item class="SpecialMesh" referent="RBX3A8741EFE4A640FBAFF84D04F6ECD8E3">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=97180581</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180639</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX63831DA0A6474724836F36C8053B7D41">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">Hit</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<Content name="SoundId"><url>http://www.roblox.com/Asset?ID=92597264</url></Content>
					<float name="Volume">0.5</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX261DEF2F7E92406B86E7837D0199712B">
			<Properties>
				<bool name="Disabled">true</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">BootsScript</string>
				<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)
InsertService = game:GetService(&quot;InsertService&quot;)

FreezePlayer = script:WaitForChild(&quot;FreezePlayer&quot;)
RechargeGui = script:WaitForChild(&quot;RechargeGui&quot;)

Damage = 60
CoolDownTime = 9
MaxJumpDistance = 60
LastUse = 0
PointsAlongJump = 18

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Material = Enum.Material.Plastic
BasePart.Shape = Enum.PartType.Block
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.Anchored = false
BasePart.CanCollide = true
BasePart.Locked = true

BaseBoot = BasePart:Clone()
BaseBoot.Name = &quot;Boot&quot;
BaseBoot.Size = Vector3.new(1, 1, 1.6)
BootMesh = Handle:WaitForChild(&quot;Mesh&quot;):Clone()
BootMesh.Parent = BaseBoot

Sounds = {
&#9;Hit = Handle:WaitForChild(&quot;Hit&quot;),
&#9;Jump = Handle:WaitForChild(&quot;Jump&quot;)
}

ToolEquipped = false

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Enabled = true

function EquipBoots()
&#9;UnequipBoots()
&#9;local LeftLeg = Character:FindFirstChild(&quot;Left Leg&quot;)
&#9;local RightLeg = Character:FindFirstChild(&quot;Right Leg&quot;)
&#9;for i, v in pairs({LeftLeg, RightLeg}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;local Boot = BaseBoot:Clone()
&#9;&#9;&#9;Boot.Name = (((v == LeftLeg and &quot;Left&quot;) or &quot;Right&quot;) .. &quot;Boot&quot;)
&#9;&#9;&#9;local Weld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;Weld.Part0 = Boot
&#9;&#9;&#9;Weld.Part1 = v
&#9;&#9;&#9;Weld.C0 = CFrame.new(0, 0.57, 0.19)
&#9;&#9;&#9;Weld.Parent = v
&#9;&#9;&#9;Boot.Parent = Tool
&#9;&#9;end
&#9;end
end

function UnequipBoots()
&#9;for i, v in pairs(Tool:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) and (v.Name == &quot;LeftBoot&quot; or v.Name == &quot;RightBoot&quot;) then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function PointOnCircle(OriginX, OriginZ, Radius, Theta)
&#9;local x = OriginX + Radius * math.cos(Theta)
&#9;local z = OriginZ + Radius * math.sin(Theta)
&#9;return x, z
end

function SquishCharacter(character)
&#9;local lowestY = math.huge
&#9;&#9;for _, child in pairs(character:GetChildren()) do
&#9;&#9;if child:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;local squishedPoint = child.CFrame.p - (child.Size * 0.4)
&#9;&#9;&#9;if squishedPoint.Y &lt; lowestY then
&#9;&#9;&#9;&#9;lowestY = squishedPoint.Y
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if not lowestY then
&#9;&#9;return
&#9;end
&#9;for _, child in pairs(character:GetChildren()) do
&#9;&#9;if child:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;child.Anchored = true
&#9;&#9;&#9;local origCFrame = child.CFrame
&#9;&#9;&#9;local offsetY = origCFrame.p.Y - lowestY
&#9;&#9;&#9;child.FormFactor = &quot;Custom&quot;
&#9;&#9;&#9;if child.Name ~= &quot;Head&quot; then
&#9;&#9;&#9;&#9;child.Size = child.Size * Vector3.new(1.6,0.2,1.6)
&#9;&#9;&#9;end
&#9;&#9;&#9;child.CFrame = (origCFrame - Vector3.new(0, offsetY, 0))
&#9;&#9;&#9;if child.Name == &quot;Torso&quot; then
&#9;&#9;&#9;&#9;child.CFrame = child.CFrame + Vector3.new(0, 0.1, 0)
&#9;&#9;&#9;end
&#9;&#9;elseif child:IsA(&quot;CharacterMesh&quot;) then
&#9;&#9;&#9;local bodyParts = character:GetChildren()
&#9;&#9;&#9;local bodyPart
&#9;&#9;&#9;for j = 1, #bodyParts do
&#9;&#9;&#9;&#9;for word in string.gmatch(tostring(child.BodyPart), string.gsub(bodyParts[j].Name, &quot; &quot;, &quot;&quot;)) do
&#9;&#9;&#9;&#9;&#9;if bodyParts[j]:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;bodyPart = bodyParts[j]
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if bodyPart and not bodyPart:FindFirstChild(&quot;Mesh&quot;) then
&#9;&#9;&#9;&#9;local newMesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;&#9;newMesh.MeshId = &quot;http://www.roblox.com/asset/asset/?id=&quot; .. tostring(child.MeshId)
&#9;&#9;&#9;&#9;newMesh.TextureId = &quot;http://www.roblox.com/asset/asset/?id=&quot; .. tostring(child.OverlayTextureId)
&#9;&#9;&#9;&#9;if bodyPart.Name == &quot;Torso&quot; and tonumber(child.BaseTextureId) &gt; 0 then
&#9;&#9;&#9;&#9;&#9;newMesh.TextureId = &quot;http://www.roblox.com/asset/asset/?id=&quot; .. tostring(child.BaseTextureId)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;newMesh.Scale = Vector3.new(1, 0.2, 1)
&#9;&#9;&#9;&#9;newMesh.Parent = bodyPart
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function Jump(destination, targetObject)
&#9;local differenceVector = Torso.CFrame.p - destination
&#9;local distance = differenceVector.magnitude
&#9;local dirVector = differenceVector.unit
&#9;local halfPoint = differenceVector / 2 + Torso.CFrame.p
&#9;local arcedHalfPoint = dirVector:Cross(Vector3.new(0,1,0)):Cross(dirVector) * distance / 2 + halfPoint

&#9;if distance &gt; MaxJumpDistance then
&#9;&#9;if PlayerGui and PlayerGui:FindFirstChild(&quot;RechargeText&quot;) then
&#9;&#9;&#9;PlayerGui:FindFirstChild(&quot;RechargeText&quot;).Text = &quot;Too Far Away!&quot;
&#9;&#9;&#9;-- Refund your cooldown
&#9;&#9;&#9;LastUse = 0
&#9;&#9;end
&#9;&#9;return
&#9;end
&#9;StartGuiRecharge()
&#9;if targetObject and targetObject.Parent then
&#9;&#9;local freezePlayerCopy = FreezePlayer:Clone()
&#9;&#9;freezePlayerCopy.Disabled = false
&#9;&#9;freezePlayerCopy.Parent = targetObject.Parent
&#9;end

&#9;local waypoints = {}
&#9;local visitedWaypoints = {}
&#9;for i = 1, PointsAlongJump do
&#9;&#9;local objectZ, objectY = PointOnCircle(distance * 0.5, 0, distance * 0.5, math.pi - (math.pi / PointsAlongJump) * i)
&#9;&#9;local nextPoint = CFrame.new(Torso.CFrame.p, destination):pointToWorldSpace(Vector3.new(0, objectY, -objectZ))
&#9;&#9;local nextTargetPart = BasePart:Clone()
&#9;&#9;nextTargetPart.BrickColor = BrickColor.new(&quot;Really red&quot;)
&#9;&#9;nextTargetPart.Shape = Enum.PartType.Ball
&#9;&#9;nextTargetPart.Size = Vector3.new(1, 1, 1)
&#9;&#9;nextTargetPart.CanCollide = false
&#9;&#9;nextTargetPart.Anchored = true
&#9;&#9;nextTargetPart.CFrame = CFrame.new(nextPoint)
&#9;&#9;nextTargetPart.Name = tostring(i)
&#9;&#9;Debris:AddItem(nextTargetPart, 10)
&#9;&#9;nextTargetPart.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;table.insert(waypoints, nextTargetPart)
&#9;end
&#9;Humanoid.PlatformStand = true
&#9;Sounds.Jump:Play()
&#9;local bodyPosition = Instance.new(&quot;BodyPosition&quot;)
&#9;bodyPosition.maxForce = Vector3.new(16000, 16000, 16000)
&#9;bodyPosition.P = 15000
&#9;bodyPosition.D = 500
&#9;bodyPosition.position = waypoints[1].CFrame.p
&#9;for i = 1, #waypoints do
&#9;&#9;local connection = waypoints[i].Touched:connect(
&#9;&#9;&#9;function(part)
&#9;&#9;&#9;&#9;if part.Parent == Character then
&#9;&#9;&#9;&#9;&#9;-- Had to comment this because lua do not preserve The connection upvalue
&#9;&#9;&#9;&#9;&#9;--connection:disconnect()
&#9;&#9;&#9;&#9;&#9;if i ~= #waypoints and bodyPosition then
&#9;&#9;&#9;&#9;&#9;&#9;bodyPosition.position = waypoints[i + 1].CFrame.p
&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;bodyPosition:Destroy()
&#9;&#9;&#9;&#9;&#9;&#9;Humanoid.PlatformStand = false
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;if i == #waypoints then
&#9;&#9;&#9;&#9;&#9;&#9;wait(0.2)
&#9;&#9;&#9;&#9;&#9;&#9;if handleConn then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;handleConn:disconnect()
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;visitedWaypoints[i] = true
&#9;&#9;&#9;&#9;&#9;waypoints[i].Parent = nil--:Destroy()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end)
&#9;end

&#9;Torso.CFrame = CFrame.new(Torso.CFrame.p, destination)

&#9;local bootsTouched = false
&#9;handleConn = Handle.Touched:connect(function(hit)
&#9;&#9;if hit.Parent then 
&#9;&#9;&#9;if bootsTouched then return end
&#9;&#9;&#9;if hit.Parent:FindFirstChild(&quot;Humanoid&quot;) then
&#9;&#9;&#9;&#9;if hit.Parent.Humanoid.Health &lt;= Damage then
&#9;&#9;&#9;&#9;&#9;SquishCharacter(hit.Parent)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;hit.Parent.Humanoid:TakeDamage(Damage)
&#9;&#9;&#9;&#9;Sounds.Hit:Play()
&#9;&#9;&#9;&#9;handleConn:disconnect()
&#9;&#9;&#9;&#9;bootsTouched = true
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)

&#9;Debris:AddItem(bodyPosition, CoolDownTime - 1)
&#9;bodyPosition.Parent = Torso
&#9;wait(CoolDownTime - 2)
&#9;if Torso:FindFirstChild(&quot;BodyPosition&quot;) then
&#9;&#9;Humanoid.PlatformStand = false
&#9;end
&#9;if handleConn then
&#9;&#9;handleConn:disconnect()
&#9;end
end

function StartGuiRecharge()
&#9;if not RechargeGuiClone or not RechargeGuiClone.Parent then
&#9;&#9;return
&#9;end
&#9;local Bar = RechargeGuiClone:FindFirstChild(&quot;Bar&quot;)
&#9;local RechargeText = RechargeGuiClone:FindFirstChild(&quot;RechargeText&quot;)
&#9;if not Bar or not RechargeText then
&#9;&#9;return
&#9;end
&#9;local Backing = Bar:FindFirstChild(&quot;Backing&quot;)
&#9;local Fill = Bar:FindFirstChild(&quot;Fill&quot;)
&#9;if not Backing or not Fill then
&#9;&#9;return
&#9;end
&#9;RechargeText.Text = &quot;Recharging...&quot;
&#9;local TimeRemaining = math.min(CoolDownTime, tick() - LastUse)
&#9;Fill.Size = UDim2.new((TimeRemaining / CoolDownTime), 0, 1, 0)
&#9;Fill:TweenSize(UDim2.new(1, 0, 1, 0), &quot;Out&quot;, &quot;Linear&quot;, (CoolDownTime - TimeRemaining), false, (function()
&#9;&#9;RechargeText.Text = &quot;Ready&quot;
&#9;end))
end

function Activated(MouseData)
&#9;local MouseTarget = MouseData.Target
&#9;local character = MouseTarget.Parent
&#9;if character:IsA(&quot;Hat&quot;) or character:IsA(&quot;Tool&quot;) then
&#9;&#9;character = character.Parent
&#9;end
&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if (tick() - LastUse) &gt; CoolDownTime then
&#9;&#9;LastUse = tick()
&#9;&#9;if humanoid then
&#9;&#9;&#9;Jump(MouseTarget.Position, MouseTarget)
&#9;&#9;else
&#9;&#9;&#9;Jump(MouseData.Position)
&#9;&#9;end
&#9;end
end

function FindClosestTorso()
&#9;local NearestTorso = nil
&#9;local NearestDistance = MaxJumpDistance
&#9;for i, v in pairs(Players:GetPlayers()) do
&#9;&#9;if v:IsA(&quot;Player&quot;) and v ~= Player and v.Character then
&#9;&#9;&#9;local character = v.Character
&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 and torso then
&#9;&#9;&#9;&#9;local DistanceApart = (torso.Position - Torso.Position).magnitude
&#9;&#9;&#9;&#9;if DistanceApart &lt; NearestDistance then
&#9;&#9;&#9;&#9;&#9;NearestTorso = torso
&#9;&#9;&#9;&#9;&#9;NearestDistance = DistanceApart
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;return NearestTorso
end

function CheckIfAlive()
&#9;return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;PlayerGui = Player:FindFirstChild(&quot;PlayerGui&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;if PlayerGui then
&#9;&#9;RechargeGuiClone = RechargeGui:Clone()
&#9;&#9;RechargeGuiClone.Parent = PlayerGui
&#9;end
&#9;EquipBoots()
&#9;StartGuiRecharge()
&#9;ToolEquipped = true
end

function Unequipped()
&#9;if PlayerGui and PlayerGui.Parent then
&#9;&#9;PlayerGui:Destroy()
&#9;&#9;PlayerGui = nil
&#9;end
&#9;for i, v in pairs({JumpConnection, HandleConnection}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;UnequipBoots()
&#9;ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
end

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

for i, v in pairs(Tool:GetChildren()) do
&#9;if v:IsA(&quot;BasePart&quot;) and v ~= Handle and v.Name == &quot;Laser&quot; then
&#9;&#9;v:Destroy()
&#9;end
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
</ProtectedString>
			</Properties>
		</Item>
		<Item class="Animation" referent="RBX24228A27718B4BED82DDCB17EC7D0234">
			<Properties>
				<Content name="AnimationId"><url>http://www.roblox.com/asset/?ID=208636716</url></Content>
				<string name="Name">Idle</string>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX49DF1E9D6A2143AFB8D4481295DBDBE4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<ProtectedString name="Source">--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
RunService = game:GetService(&quot;RunService&quot;)

Camera = game:GetService(&quot;Workspace&quot;).CurrentCamera

Animations = {}
LocalObjects = {}

ServerControl = Tool:WaitForChild(&quot;ServerControl&quot;)
ClientControl = Tool:WaitForChild(&quot;ClientControl&quot;)

ToolEquipped = false

function SetAnimation(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;local AnimationTrack = Humanoid:LoadAnimation(Value.Animation)
&#9;&#9;table.insert(Animations, {Animation = Value.Animation, AnimationTrack = AnimationTrack})
&#9;&#9;AnimationTrack:Play(Value.FadeTime, Value.Weight, Value.Speed)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;for i, v in pairs(Animations) do
&#9;&#9;&#9;if v.Animation == Value.Animation then
&#9;&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;&#9;&#9;table.remove(Animations, i)
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function CheckIfAlive()
&#9;return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0) and true) or false)
end

function Equipped(Mouse)
&#9;Character = Tool.Parent
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;ToolEquipped = true
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;PlayerMouse = Player:GetMouse()
&#9;Mouse.Button1Down:connect(function()
&#9;&#9;local Target = Mouse.Target
&#9;&#9;local Position = Mouse.Hit.p
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = true, Target = Target, Position = Position})
&#9;end)
&#9;Mouse.Button1Up:connect(function()
&#9;&#9;local Target = Mouse.Target
&#9;&#9;local Position = Mouse.Hit.p
&#9;&#9;InvokeServer(&quot;MouseClick&quot;, {Down = false, Target = Target, Position = Position})
&#9;end)
&#9;Mouse.KeyDown:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = true})
&#9;end)
&#9;Mouse.KeyUp:connect(function(Key)
&#9;&#9;InvokeServer(&quot;KeyPress&quot;, {Key = Key, Down = false})
&#9;end)
end

function Unequipped()
&#9;ToolEquipped = false
&#9;LocalObjects = {}
&#9;for i, v in pairs(Animations) do
&#9;&#9;if v and v.AnimationTrack then
&#9;&#9;&#9;v.AnimationTrack:Stop()
&#9;&#9;end
&#9;end
&#9;for i, v in pairs({ObjectLocalTransparencyModifier}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;Animations = {}
end

function InvokeServer(Mode, Value)
&#9;pcall(function()
&#9;&#9;local ServerReturn = ServerControl:InvokeServer(Mode, Value)
&#9;&#9;return ServerReturn
&#9;end)
end

function OnClientInvoke(Mode, Value)
&#9;if Mode == &quot;PlayAnimation&quot; and Value and ToolEquipped and Humanoid then
&#9;&#9;SetAnimation(&quot;PlayAnimation&quot;, Value)
&#9;elseif Mode == &quot;StopAnimation&quot; and Value then
&#9;&#9;SetAnimation(&quot;StopAnimation&quot;, Value)
&#9;elseif Mode == &quot;PlaySound&quot; and Value then
&#9;&#9;Value:Play()
&#9;elseif Mode == &quot;StopSound&quot; and Value then
&#9;&#9;Value:Stop()
&#9;elseif Mode == &quot;MousePosition&quot; then
&#9;&#9;return PlayerMouse.Hit.p
&#9;elseif Mode == &quot;SetLocalTransparencyModifier&quot; and Value and ToolEquipped then
&#9;&#9;pcall(function()
&#9;&#9;&#9;local ObjectFound = false
&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;if v == Value then
&#9;&#9;&#9;&#9;&#9;ObjectFound = true
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if not ObjectFound then
&#9;&#9;&#9;&#9;table.insert(LocalObjects, Value)
&#9;&#9;&#9;&#9;if ObjectLocalTransparencyModifier then
&#9;&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;ObjectLocalTransparencyModifier = RunService.RenderStepped:connect(function()
&#9;&#9;&#9;&#9;&#9;for i, v in pairs(LocalObjects) do
&#9;&#9;&#9;&#9;&#9;&#9;if v.Object and v.Object.Parent then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;if ((not v.AutoUpdate and (v.Object.LocalTransparencyModifier == 1 or  v.Object.LocalTransparencyModifier == 0)) or v.AutoUpdate) then
&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;v.Object.LocalTransparencyModifier = v.Transparency
&#9;&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;&#9;&#9;&#9;table.remove(LocalObjects, i)
&#9;&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end)
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;end
end

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
ClientControl.OnClientInvoke = OnClientInvoke</ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBXDB60E0443DEF4F158B6976E2B1BBE6D2">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<ProtectedString name="Source">--Rescripted by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild(&quot;Handle&quot;)

Players = game:GetService(&quot;Players&quot;)
Debris = game:GetService(&quot;Debris&quot;)
InsertService = game:GetService(&quot;InsertService&quot;)

FreezePlayer = script:WaitForChild(&quot;FreezePlayer&quot;)
RechargeGui = script:WaitForChild(&quot;RechargeGui&quot;)

Damage = 60
CoolDownTime = 9
MaxJumpDistance = 60
LastUse = 0
PointsAlongJump = 18

BasePart = Instance.new(&quot;Part&quot;)
BasePart.Material = Enum.Material.Plastic
BasePart.Shape = Enum.PartType.Block
BasePart.TopSurface = Enum.SurfaceType.Smooth
BasePart.BottomSurface = Enum.SurfaceType.Smooth
BasePart.FormFactor = Enum.FormFactor.Custom
BasePart.Size = Vector3.new(0.2, 0.2, 0.2)
BasePart.Anchored = false
BasePart.CanCollide = true
BasePart.Locked = true

BaseBoot = BasePart:Clone()
BaseBoot.Name = &quot;Boot&quot;
BaseBoot.Size = Vector3.new(1, 1, 1.6)
BaseBoot.CanCollide = false
BootMesh = Handle:WaitForChild(&quot;Mesh&quot;):Clone()
BootMesh.Parent = BaseBoot

Grips = {
&#9;Equipped = CFrame.new(0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1),
&#9;Unequipped = CFrame.new(1.5, 3.5, -1.3, 1, 0, 0, 0, 1, 0, 0, 0, 1)
}

Animations = {
&#9;Idle = {Animation = Tool:WaitForChild(&quot;Idle&quot;), FadeTime = nil, Weight = nil, Speed = nil, Duration = nil}
}

Sounds = {
&#9;Hit = Handle:WaitForChild(&quot;Hit&quot;),
&#9;Jump = Handle:WaitForChild(&quot;Jump&quot;)
}

Handle.Transparency = 1
ToolEquipped = false

ServerControl = (Tool:FindFirstChild(&quot;ServerControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ServerControl.Name = &quot;ServerControl&quot;
ServerControl.Parent = Tool

ClientControl = (Tool:FindFirstChild(&quot;ClientControl&quot;) or Instance.new(&quot;RemoteFunction&quot;))
ClientControl.Name = &quot;ClientControl&quot;
ClientControl.Parent = Tool

Tool.Enabled = true

function TagHumanoid(humanoid, player)
&#9;local Creator_Tag = Instance.new(&quot;ObjectValue&quot;)
&#9;Creator_Tag.Name = &quot;creator&quot;
&#9;Creator_Tag.Value = player
&#9;Debris:AddItem(Creator_Tag, 2)
&#9;Creator_Tag.Parent = humanoid
end

function UntagHumanoid(humanoid)
&#9;for i, v in pairs(humanoid:GetChildren()) do
&#9;&#9;if v:IsA(&quot;ObjectValue&quot;) and v.Name == &quot;creator&quot; then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function EquipBoots()
&#9;UnequipBoots()
&#9;local LeftLeg = Character:FindFirstChild(&quot;Left Leg&quot;)
&#9;local RightLeg = Character:FindFirstChild(&quot;Right Leg&quot;)
&#9;for i, v in pairs({LeftLeg, RightLeg}) do
&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;local Boot = BaseBoot:Clone()
&#9;&#9;&#9;Boot.Name = (((v == LeftLeg and &quot;Left&quot;) or &quot;Right&quot;) .. &quot;Boot&quot;)
&#9;&#9;&#9;local Weld = Instance.new(&quot;Weld&quot;)
&#9;&#9;&#9;Weld.Part0 = Boot
&#9;&#9;&#9;Weld.Part1 = v
&#9;&#9;&#9;Weld.C0 = CFrame.new(0, 0.57, 0.19)
&#9;&#9;&#9;Weld.Parent = Boot
&#9;&#9;&#9;if i == LeftLeg then
&#9;&#9;&#9;&#9;LeftBoot = Boot
&#9;&#9;&#9;&#9;LeftWeld = Weld
&#9;&#9;&#9;else
&#9;&#9;&#9;&#9;RightBoot = Boot
&#9;&#9;&#9;&#9;RightWeld = Weld
&#9;&#9;&#9;end
&#9;&#9;&#9;Boot.Parent = Tool
&#9;&#9;end
&#9;end
end

function CreateDisplayBoots()
&#9;for i = 1, 2 do
&#9;&#9;local Boot = BaseBoot:Clone()
&#9;&#9;Boot.Name = (((i == 1 and &quot;Left&quot;) or &quot;Right&quot;) .. &quot;Boot&quot;)
&#9;&#9;local Weld = Instance.new(&quot;Weld&quot;)
&#9;&#9;Weld.Part0 = Boot
&#9;&#9;Weld.Part1 = Handle
&#9;&#9;Weld.C0 = CFrame.new(((((Boot.Size.X / 2) + (Handle.Size.X / 2)) / 2.5) * ((i == 1 and -1) or 1)), 0, 0.19)
&#9;&#9;Weld.Parent = Boot
&#9;&#9;Boot.Parent = Tool
&#9;end
end

function UnequipBoots()
&#9;for i, v in pairs(Tool:GetChildren()) do
&#9;&#9;if v:IsA(&quot;BasePart&quot;) and (v.Name == &quot;LeftBoot&quot; or v.Name == &quot;RightBoot&quot;) then
&#9;&#9;&#9;v:Destroy()
&#9;&#9;end
&#9;end
end

function PointOnCircle(OriginX, OriginZ, Radius, Theta)
&#9;local x = OriginX + Radius * math.cos(Theta)
&#9;local z = OriginZ + Radius * math.sin(Theta)
&#9;return x, z
end

function SquishCharacter(character)
&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if humanoid and humanoid.Health &gt; 0 then
&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;TagHumanoid(humanoid, Player)
&#9;end
&#9;local lowestY = math.huge
&#9;&#9;for _, child in pairs(character:GetChildren()) do
&#9;&#9;if child:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;local squishedPoint = child.CFrame.p - (child.Size * 0.4)
&#9;&#9;&#9;if squishedPoint.Y &lt; lowestY then
&#9;&#9;&#9;&#9;lowestY = squishedPoint.Y
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;if not lowestY then
&#9;&#9;return
&#9;end
&#9;for _, child in pairs(character:GetChildren()) do
&#9;&#9;if child:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;child.Anchored = true
&#9;&#9;&#9;local origCFrame = child.CFrame
&#9;&#9;&#9;local offsetY = origCFrame.p.Y - lowestY
&#9;&#9;&#9;child.FormFactor = &quot;Custom&quot;
&#9;&#9;&#9;if child.Name ~= &quot;Head&quot; then
&#9;&#9;&#9;&#9;child.Size = child.Size * Vector3.new(1.6, 0.2, 1.6)
&#9;&#9;&#9;end
&#9;&#9;&#9;child.CFrame = (origCFrame - Vector3.new(0, offsetY, 0))
&#9;&#9;&#9;if child.Name == &quot;Torso&quot; then
&#9;&#9;&#9;&#9;child.CFrame = child.CFrame + Vector3.new(0, 0.1, 0)
&#9;&#9;&#9;end
&#9;&#9;elseif child:IsA(&quot;CharacterMesh&quot;) then
&#9;&#9;&#9;local BodyParts = character:GetChildren()
&#9;&#9;&#9;local BodyPart
&#9;&#9;&#9;for j = 1, #BodyParts do
&#9;&#9;&#9;&#9;for word in string.gmatch(tostring(child.BodyPart), string.gsub(BodyParts[j].Name, &quot; &quot;, &quot;&quot;)) do
&#9;&#9;&#9;&#9;&#9;if BodyParts[j]:IsA(&quot;BasePart&quot;) then
&#9;&#9;&#9;&#9;&#9;&#9;BodyPart = BodyParts[j]
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;if BodyPart and not BodyPart:FindFirstChild(&quot;Mesh&quot;) then
&#9;&#9;&#9;&#9;local newMesh = Instance.new(&quot;SpecialMesh&quot;)
&#9;&#9;&#9;&#9;newMesh.MeshId = &quot;http://www.roblox.com/asset/?id=&quot; .. tostring(child.MeshId)
&#9;&#9;&#9;&#9;newMesh.TextureId = ((child.OverlayTextureId ~= 0 and &quot;http://www.roblox.com/asset/?id=&quot; .. tostring(child.OverlayTextureId)) or &quot;&quot;)
&#9;&#9;&#9;&#9;if BodyPart.Name == &quot;Torso&quot; and tonumber(child.BaseTextureId) &gt; 0 then
&#9;&#9;&#9;&#9;&#9;newMesh.TextureId = ((child.BaseTextureId ~= 0 and &quot;http://www.roblox.com/asset/?id=&quot; .. tostring(child.BaseTextureId)) or &quot;&quot;)
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;newMesh.Scale = Vector3.new(1, 0.2, 1)
&#9;&#9;&#9;&#9;newMesh.Parent = BodyPart
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
end

function IsTeamMate(Player1, Player2)
&#9;return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
end

function Jump(Destination, TargetObject)
&#9;
&#9;local differenceVector = Torso.CFrame.p - Destination
&#9;local distance = differenceVector.magnitude
&#9;local dirVector = differenceVector.unit
&#9;local halfPoint = differenceVector / 2 + Torso.CFrame.p
&#9;local arcedHalfPoint = dirVector:Cross(Vector3.new(0, 1, 0)):Cross(dirVector) * distance / 2 + halfPoint

&#9;if distance &gt; MaxJumpDistance then
&#9;&#9;if PlayerGui and PlayerGui:FindFirstChild(&quot;RechargeText&quot;) then
&#9;&#9;&#9;PlayerGui:FindFirstChild(&quot;RechargeText&quot;).Text = &quot;Too Far Away!&quot;
&#9;&#9;&#9;LastUse = 0
&#9;&#9;end
&#9;&#9;return
&#9;end
&#9;StartGuiRecharge()
&#9;if TargetObject and TargetObject.Parent then
&#9;&#9;local character = TargetObject.Parent
&#9;&#9;if character and character:IsA(&quot;Hat&quot;) then
&#9;&#9;&#9;character = character.Parent
&#9;&#9;end
&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;if humanoid then
&#9;&#9;&#9;local freezePlayerCopy = FreezePlayer:Clone()
&#9;&#9;&#9;freezePlayerCopy.Disabled = false
&#9;&#9;&#9;freezePlayerCopy.Parent = character
&#9;&#9;end
&#9;end

&#9;local waypoints = {}
&#9;for i = 1, PointsAlongJump do
&#9;&#9;local objectZ, objectY = PointOnCircle(distance * 0.5, 0, distance * 0.5, math.pi - (math.pi / PointsAlongJump) * i)
&#9;&#9;local nextPoint = CFrame.new(Torso.CFrame.p, Destination):pointToWorldSpace(Vector3.new(0, objectY, -objectZ))
&#9;&#9;local nextTargetPart = BasePart:Clone()
&#9;&#9;nextTargetPart.BrickColor = BrickColor.new(&quot;Really red&quot;)
&#9;&#9;nextTargetPart.Shape = Enum.PartType.Ball
&#9;&#9;nextTargetPart.Size = Vector3.new(1, 1, 1)
&#9;&#9;nextTargetPart.CanCollide = false
&#9;&#9;nextTargetPart.Anchored = true
&#9;&#9;nextTargetPart.CFrame = CFrame.new(nextPoint)
&#9;&#9;nextTargetPart.Name = tostring(i)
&#9;&#9;Debris:AddItem(nextTargetPart, 10)
&#9;&#9;nextTargetPart.Parent = game:GetService(&quot;Workspace&quot;)
&#9;&#9;table.insert(waypoints, nextTargetPart)
&#9;end
&#9;Humanoid.PlatformStand = true
&#9;Sounds.Jump:Play()
&#9;local BodyVelocity = Instance.new(&quot;BodyVelocity&quot;)
&#9;BodyVelocity.maxForce = Vector3.new(math.huge, math.huge, math.huge)
&#9;BodyVelocity.Parent = Torso
&#9;local BodyGyro = Instance.new(&quot;BodyGyro&quot;)
&#9;BodyGyro.maxTorque = Vector3.new(math.huge, math.huge, math.huge)
&#9;BodyGyro.Parent = Torso
&#9;local CurrentWayPoint = 1
&#9;Spawn(function()
&#9;&#9;BodyGyro.cframe = CFrame.new(Torso.CFrame.p, Destination)
&#9;&#9;while BodyVelocity and BodyVelocity.Parent do
&#9;&#9;&#9;wait(0.00001)
&#9;&#9;&#9;local waypoint = waypoints[CurrentWayPoint]
&#9;&#9;&#9;BodyVelocity.velocity = CFrame.new(Torso.Position, waypoint.Position).lookVector * 30
&#9;&#9;&#9;if (Torso.Position - waypoint.Position).magnitude &lt;= 5 then
&#9;&#9;&#9;&#9;CurrentWayPoint = (CurrentWayPoint + 1)
&#9;&#9;&#9;&#9;if CurrentWayPoint &gt; #waypoints then
&#9;&#9;&#9;&#9;&#9;CurrentWayPoint = #waypoints
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;if CurrentWayPoint == #waypoints then
&#9;&#9;&#9;&#9;&#9;break
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;for i, v in pairs({BodyVelocity, BodyGyro}) do
&#9;&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;Humanoid.PlatformStand = false
&#9;&#9;for i, v in pairs({LeftBootConnection, RightBootConnection}) do
&#9;&#9;&#9;if v then
&#9;&#9;&#9;&#9;v:disconnect()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;&#9;for i, v in pairs(waypoints) do
&#9;&#9;&#9;if v and v.Parent then
&#9;&#9;&#9;&#9;v:Destroy()
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end)

&#9;local BootsTouched = false
&#9;for i, v in pairs({LeftBoot, RightBoot}) do
&#9;&#9;local Weld = ((v == LeftBoot and LeftWeld) or RightWeld)
&#9;&#9;local connection = v.Touched:connect(function(Hit)
&#9;&#9;&#9;if not Hit or not Hit.Parent or BootsTouched then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;&#9;if not Weld or not Weld.Parent or not Weld.Part0 or not Weld.Part1 or Weld.Part0 ~= v then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;&#9;local character = Hit.Parent
&#9;&#9;&#9;if character:IsA(&quot;Hat&quot;) then
&#9;&#9;&#9;&#9;character = character.Parent
&#9;&#9;&#9;end
&#9;&#9;&#9;if character == Character then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;&#9;local player = Players:GetPlayerFromCharacter(character)
&#9;&#9;&#9;if player and IsTeamMate(Player, player) then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;if not humanoid or humanoid.Health == 0 then
&#9;&#9;&#9;&#9;return
&#9;&#9;&#9;end
&#9;&#9;&#9;BootsTouched = true
&#9;&#9;&#9;if humanoid and humanoid.Health &lt;= Damage then
&#9;&#9;&#9;&#9;SquishCharacter(character)
&#9;&#9;&#9;end
&#9;&#9;&#9;UntagHumanoid(humanoid)
&#9;&#9;&#9;TagHumanoid(humanoid, Player)
&#9;&#9;&#9;humanoid:TakeDamage(Damage)
&#9;&#9;&#9;Sounds.Hit:Play()
&#9;&#9;&#9;for i, v in pairs({LeftBootConnection, RightBootConnection}) do
&#9;&#9;&#9;&#9;if v then
&#9;&#9;&#9;&#9;&#9;v:disconnect()
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end)
&#9;&#9;if v == LeftBoot then
&#9;&#9;&#9;LeftBootConnection = connection
&#9;&#9;else
&#9;&#9;&#9;RightBootConnection = connection
&#9;&#9;end
&#9;end
&#9;local duration = (CoolDownTime - 1)
&#9;Debris:AddItem(BodyVelocity, duration)
&#9;Debris:AddItem(BodyGyro, duration)
&#9;wait(duration - 1)
&#9;if Torso:FindFirstChild(&quot;BodyVelocity&quot;) then
&#9;&#9;Humanoid.PlatformStand = false
&#9;end
&#9;for i, v in pairs({LeftBootConnection, RightBootConnection}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
end

function StartGuiRecharge()
&#9;if not RechargeGuiClone or not RechargeGuiClone.Parent then
&#9;&#9;return
&#9;end
&#9;local Bar = RechargeGuiClone:FindFirstChild(&quot;Bar&quot;)
&#9;local RechargeText = RechargeGuiClone:FindFirstChild(&quot;RechargeText&quot;)
&#9;if not Bar or not RechargeText then
&#9;&#9;return
&#9;end
&#9;local Backing = Bar:FindFirstChild(&quot;Backing&quot;)
&#9;local Fill = Bar:FindFirstChild(&quot;Fill&quot;)
&#9;if not Backing or not Fill then
&#9;&#9;return
&#9;end
&#9;RechargeText.Text = &quot;Recharging...&quot;
&#9;local TimeRemaining = math.min(CoolDownTime, tick() - LastUse)
&#9;Fill.Size = UDim2.new((TimeRemaining / CoolDownTime), 0, 1, 0)
&#9;Fill:TweenSize(UDim2.new(1, 0, 1, 0), &quot;Out&quot;, &quot;Linear&quot;, (CoolDownTime - TimeRemaining), false, (function()
&#9;&#9;RechargeText.Text = &quot;Ready&quot;
&#9;end))
end

function FindClosestTorso()
&#9;local NearestTorso = nil
&#9;local NearestDistance = MaxJumpDistance
&#9;for i, v in pairs(Players:GetPlayers()) do
&#9;&#9;if v:IsA(&quot;Player&quot;) and v ~= Player and v.Character then
&#9;&#9;&#9;local character = v.Character
&#9;&#9;&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;&#9;&#9;local torso = character:FindFirstChild(&quot;Torso&quot;)
&#9;&#9;&#9;if humanoid and humanoid.Health &gt; 0 and torso then
&#9;&#9;&#9;&#9;local DistanceApart = (torso.Position - Torso.Position).magnitude
&#9;&#9;&#9;&#9;if DistanceApart &lt; NearestDistance then
&#9;&#9;&#9;&#9;&#9;NearestTorso = torso
&#9;&#9;&#9;&#9;&#9;NearestDistance = DistanceApart
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;end
&#9;end
&#9;return NearestTorso
end

function Activated(MouseData)
&#9;if not Tool.Enabled or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;local MouseTarget = MouseData.Target
&#9;if not MouseTarget or not MouseTarget.Parent then
&#9;&#9;return
&#9;end
&#9;local character = MouseTarget.Parent
&#9;if character:IsA(&quot;Hat&quot;) or character:IsA(&quot;Tool&quot;) then
&#9;&#9;character = character.Parent
&#9;end
&#9;local humanoid = character:FindFirstChild(&quot;Humanoid&quot;)
&#9;if (tick() - LastUse) &gt; CoolDownTime then
&#9;&#9;LastUse = tick()
&#9;&#9;if humanoid then
&#9;&#9;&#9;Jump(MouseData.Position, MouseTarget)
&#9;&#9;else
&#9;&#9;&#9;Jump(MouseData.Position)
&#9;&#9;end
&#9;end
end

function CheckIfAlive()
&#9;return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health &gt; 0 and Torso and Torso.Parent and Player and Player.Parent) and true) or false)
end

function Equipped()
&#9;Character = Tool.Parent
&#9;Humanoid = Character:FindFirstChild(&quot;Humanoid&quot;)
&#9;Torso = Character:FindFirstChild(&quot;Torso&quot;)
&#9;Player = Players:GetPlayerFromCharacter(Character)
&#9;PlayerGui = Player:FindFirstChild(&quot;PlayerGui&quot;)
&#9;if not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;if PlayerGui then
&#9;&#9;RechargeGuiClone = RechargeGui:Clone()
&#9;&#9;RechargeGuiClone.Parent = PlayerGui
&#9;end
&#9;Tool.Grip = Grips.Equipped
&#9;Spawn(EquipBoots)
&#9;Spawn(StartGuiRecharge)
&#9;Spawn(function()
&#9;&#9;InvokeClient(&quot;PlayAnimation&quot;, Animations.Idle)
&#9;end)
&#9;ToolEquipped = true
end

function Unequipped()
&#9;Tool.Grip = Grips.Unequipped
&#9;if RechargeGuiClone and RechargeGuiClone.Parent then
&#9;&#9;RechargeGuiClone:Destroy()
&#9;end
&#9;for i, v in pairs({LeftBootConnection, RightBootConnection}) do
&#9;&#9;if v then
&#9;&#9;&#9;v:disconnect()
&#9;&#9;end
&#9;end
&#9;Spawn(function()
&#9;&#9;InvokeClient(&quot;StopAnimation&quot;, Animations.Idle)
&#9;end)
&#9;Spawn(UnequipBoots)
&#9;Spawn(CreateDisplayBoots)
&#9;ToolEquipped = false
end

function OnServerInvoke(player, mode, value)
&#9;if player ~= Player or not ToolEquipped or not CheckIfAlive() then
&#9;&#9;return
&#9;end
&#9;if mode == &quot;MouseClick&quot; then
&#9;&#9;local Down = value.Down
&#9;&#9;if Down then
&#9;&#9;&#9;Activated({Target = value.Target, Position = value.Position})
&#9;&#9;end
&#9;end
end

function InvokeClient(Mode, Value)
&#9;local ClientReturn = nil
&#9;pcall(function()
&#9;&#9;ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
&#9;end)
&#9;return ClientReturn
end

UnequipBoots()
CreateDisplayBoots()

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)
</ProtectedString>
			</Properties>
			<Item class="Script" referent="RBX9B9A75323B49473EBC28F7FBB26FADA6">
				<Properties>
					<bool name="Disabled">true</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">FreezePlayer</string>
					<ProtectedString name="Source">--Fixed by Luckymaxer

local MyCharacter = script.Parent
local MyHumanoid = MyCharacter:FindFirstChild(&quot;Humanoid&quot;)
local MyTorso = MyCharacter:FindFirstChild(&quot;Torso&quot;)

if MyTorso and MyHumanoid then
&#9;MyTorso.Anchored = true
&#9;MyHumanoid.WalkSpeed = 0
&#9;wait(2.5)
&#9;if MyHumanoid.Health &gt; 0 then
&#9;&#9;MyTorso.Anchored = false
&#9;&#9;MyHumanoid.WalkSpeed = 16
&#9;end
end

script:Destroy()
</ProtectedString>
				</Properties>
			</Item>
			<Item class="ScreenGui" referent="RBXFB2D0DDD3C4B4B81AF821245984AA8C4">
				<Properties>
					<string name="Name">RechargeGui</string>
				</Properties>
				<Item class="Frame" referent="RBXBFBCEE59DAEB4EA5BC5A6CB7DB75D67B">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Bar</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-100</XO>
							<YS>1</YS>
							<YO>-160</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>200</XO>
							<YS>0</YS>
							<YO>40</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">3</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
					<Item class="Frame" referent="RBX3C04367A44BB49EC91147A0E0F94D98B">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278255360</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Fill</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">5</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX40DE10A406BC40958BEE6D121478C3F3">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4278190080</Color3>
							<float name="BackgroundTransparency">0</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Backing</string>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">4</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBXA259921CFBFE4E6384A4BE923E22C735">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">true</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">2</token>
						<token name="FontSize">6</token>
						<string name="Name">RechargeText</string>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-200</XO>
							<YS>1</YS>
							<YO>-185</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>400</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">Lead Boots</string>
						<Color3 name="TextColor3">4278190080</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4294967295</Color3>
						<float name="TextStrokeTransparency">0</float>
						<float name="TextTransparency">0.200000003</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">4</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Part" referent="RBX3C5F7BBA4360412AA712924ED26C91D1">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>0.550000072</X>
					<Y>0.599999666</Y>
					<Z>-0.230000764</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">LeftBoot</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>-0.189989075</X>
					<Y>0.796577096</Y>
					<Z>-0.599992394</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>1.60000002</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBXB115C45F7DAC4B838F671A9DA0B85224">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=97180581</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180639</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBXC74747B165F040ADA32DF40360EE8EC7">
				<Properties>
					<CoordinateFrame name="C0">
						<X>-0.600000024</X>
						<Y>0</Y>
						<Z>0.189999998</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">Weld</string>
					<Ref name="Part0">RBX3C5F7BBA4360412AA712924ED26C91D1</Ref>
					<Ref name="Part1">RBX4F31DF3480BB447AA62ACFC3A2007164</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX78B36B082DD74FA89AA5F5C999BB2261">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-0.649999976</X>
					<Y>0.599999666</Y>
					<Z>-0.230000764</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">RightBoot</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>1</X>
					<Y>1</Y>
					<Z>1</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>-0.189989075</X>
					<Y>-0.403422982</Y>
					<Z>0.600007653</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1</X>
					<Y>1</Y>
					<Z>1.60000002</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX8FF9A755063A4070B74824017C3CFDD0">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=97180581</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=97180639</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Weld" referent="RBX3E5E0A22BEB8409991C8CACF50D8E41E">
				<Properties>
					<CoordinateFrame name="C0">
						<X>0.600000024</X>
						<Y>0</Y>
						<Z>0.189999998</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<CoordinateFrame name="C1">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<string name="Name">Weld</string>
					<Ref name="Part0">RBX78B36B082DD74FA89AA5F5C999BB2261</Ref>
					<Ref name="Part1">RBX4F31DF3480BB447AA62ACFC3A2007164</Ref>
				</Properties>
			</Item>
		</Item>
		<Item class="Camera" referent="RBXD83F5423391D4A55BE896F4609EADF3F">
			<Properties>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">5</token>
				<CoordinateFrame name="CoordinateFrame">
					<X>1.60924757</X>
					<Y>1.03490019</Y>
					<Z>-2.22877669</Z>
					<R00>-0.788501203</R00>
					<R01>-0.160112038</R01>
					<R02>0.593826592</R02>
					<R10>7.4505806e-009</R10>
					<R11>0.965519547</R11>
					<R12>0.260330707</R12>
					<R20>-0.615033269</R20>
					<R21>0.20527108</R21>
					<R22>-0.76131326</R22>
				</CoordinateFrame>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>0.326605201</X>
					<Y>0.47259593</Y>
					<Z>-0.58436954</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>